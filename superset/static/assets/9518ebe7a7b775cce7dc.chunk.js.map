{"version":3,"file":"9518ebe7a7b775cce7dc.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/components/Tags/Tag.tsx","webpack://superset/./src/components/Tags/TagsList.tsx","webpack://superset/./src/views/CRUD/data/common.ts","webpack://superset/./src/views/CRUD/data/components/SyntaxHighlighterCopy/index.tsx","webpack://superset/./src/views/CRUD/data/hooks.ts","webpack://superset/./src/views/CRUD/data/savedquery/SavedQueryPreviewModal.tsx","webpack://superset/./src/views/CRUD/data/savedquery/SavedQueryList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: { alreadyExists, passwordsNeeded },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (passwordFields.length === 0) {\n      return null;\n    }\n\n    return (\n      <>\n        <h5>{t('Database passwords')}</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {passwordFields.map(fileName => (\n          <StyledInputContainer key={`password-for-${fileName}`}>\n            <div className=\"control-label\">\n              {fileName}\n              <span className=\"required\">*</span>\n            </div>\n            <input\n              name={`password-${fileName}`}\n              autoComplete={`password-${fileName}`}\n              type=\"password\"\n              value={passwords[fileName]}\n              onChange={event =>\n                setPasswords({ ...passwords, [fileName]: event.target.value })\n              }\n            />\n          </StyledInputContainer>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>{t('Select file')}</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={passwordFields.length > 0}\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledTag = styled(AntdTag)`\n  ${({ theme }) => `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `};\n`;\n\nconst Tag = ({\n  name,\n  id,\n  index = undefined,\n  onDelete = undefined,\n  editable = false,\n  onClick = undefined,\n}: TagType) => {\n  const isLongTag = useMemo(() => name.length > 20, [name]);\n\n  const handleClose = () => (index ? onDelete?.(index) : null);\n\n  const tagElem = (\n    <>\n      {editable ? (\n        <StyledTag\n          key={id}\n          closable={editable}\n          onClose={handleClose}\n          color=\"blue\"\n        >\n          {isLongTag ? `${name.slice(0, 20)}...` : name}\n        </StyledTag>\n      ) : (\n        <StyledTag role=\"link\" key={id} onClick={onClick}>\n          {id ? (\n            <a\n              href={`/superset/tags/?tags=${name}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {isLongTag ? `${name.slice(0, 20)}...` : name}\n            </a>\n          ) : isLongTag ? (\n            `${name.slice(0, 20)}...`\n          ) : (\n            name\n          )}\n        </StyledTag>\n      )}\n    </>\n  );\n\n  return isLongTag ? (\n    <Tooltip title={name} key={name}>\n      {tagElem}\n    </Tooltip>\n  ) : (\n    tagElem\n  );\n};\n\nexport default Tag;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport Tag from './Tag';\n\nexport type TagsListProps = {\n  tags: TagType[];\n  editable?: boolean;\n  /**\n   * OnDelete:\n   * Only applies when editable is true\n   * Callback for when a tag is deleted\n   */\n  onDelete?: ((index: number) => void) | undefined;\n  maxTags?: number | undefined;\n};\n\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst TagsList = ({\n  tags,\n  editable = false,\n  onDelete,\n  maxTags,\n}: TagsListProps) => {\n  const [tempMaxTags, setTempMaxTags] = useState<number | undefined>(maxTags);\n\n  const handleDelete = (index: number) => {\n    onDelete?.(index);\n  };\n\n  const expand = () => setTempMaxTags(undefined);\n\n  const collapse = () => setTempMaxTags(maxTags);\n\n  const tagsIsLong: boolean | null = useMemo(\n    () => (tempMaxTags ? tags.length > tempMaxTags : null),\n    [tags.length, tempMaxTags],\n  );\n\n  const extraTags: number | null = useMemo(\n    () =>\n      typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null,\n    [tagsIsLong, tags.length, tempMaxTags],\n  );\n\n  return (\n    <TagsDiv className=\"tag-list\">\n      {tagsIsLong && typeof tempMaxTags === 'number' ? (\n        <>\n          {tags.slice(0, tempMaxTags - 1).map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {tags.length > tempMaxTags ? (\n            <Tag name={`+${extraTags}...`} onClick={expand} />\n          ) : null}\n        </>\n      ) : (\n        <>\n          {tags.map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {maxTags ? (\n            tags.length > maxTags ? (\n              <Tag name=\"...\" onClick={collapse} />\n            ) : null\n          ) : null}\n        </>\n      )}\n    </TagsDiv>\n  );\n};\n\nexport default TagsList;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const commonMenuData = {\n  name: t('SQL'),\n  tabs: [\n    {\n      name: 'Saved queries',\n      label: t('Saved queries'),\n      url: '/savedqueryview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Query history',\n      label: t('Query history'),\n      url: '/superset/sqllab/history/',\n      usesRouter: true,\n    },\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport sqlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport htmlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/htmlbars';\nimport markdownSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/markdown';\nimport jsonSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/json';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport Icons from 'src/components/Icons';\nimport { ToastProps } from 'src/components/MessageToasts/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';\n\nSyntaxHighlighter.registerLanguage('sql', sqlSyntax);\nSyntaxHighlighter.registerLanguage('markdown', markdownSyntax);\nSyntaxHighlighter.registerLanguage('html', htmlSyntax);\nSyntaxHighlighter.registerLanguage('json', jsonSyntax);\n\nconst SyntaxHighlighterWrapper = styled.div`\n  margin-top: -24px;\n\n  &:hover {\n    svg {\n      visibility: visible;\n    }\n  }\n\n  svg {\n    position: relative;\n    top: 40px;\n    left: 512px;\n    visibility: hidden;\n    margin: -4px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nexport default function SyntaxHighlighterCopy({\n  addDangerToast,\n  addSuccessToast,\n  children,\n  ...syntaxHighlighterProps\n}: SyntaxHighlighterProps & {\n  children: string;\n  addDangerToast?: ToastProps['addDangerToast'];\n  addSuccessToast?: ToastProps['addSuccessToast'];\n  language: 'sql' | 'markdown' | 'html' | 'json';\n}) {\n  function copyToClipboard(textToCopy: string) {\n    copyTextToClipboard(() => Promise.resolve(textToCopy))\n      .then(() => {\n        if (addSuccessToast) {\n          addSuccessToast(t('SQL Copied!'));\n        }\n      })\n      .catch(() => {\n        if (addDangerToast) {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        }\n      });\n  }\n  return (\n    <SyntaxHighlighterWrapper>\n      <Icons.Copy\n        tabIndex={0}\n        role=\"button\"\n        onClick={e => {\n          e.preventDefault();\n          e.currentTarget.blur();\n          copyToClipboard(children);\n        }}\n      />\n      <SyntaxHighlighter style={github} {...syntaxHighlighterProps}>\n        {children}\n      </SyntaxHighlighter>\n    </SyntaxHighlighterWrapper>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect, useCallback } from 'react';\nimport { SupersetClient, logging, t } from '@superset-ui/core';\nimport rison from 'rison';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { DatasetObject } from 'src/views/CRUD/data/dataset/AddDataset/types';\nimport { DatabaseObject } from 'src/components/DatabaseSelector';\n\ntype BaseQueryObject = {\n  id: number;\n};\n\nexport function useQueryPreviewState<D extends BaseQueryObject = any>({\n  queries,\n  fetchData,\n  currentQueryId,\n}: {\n  queries: D[];\n  fetchData: (id: number) => any;\n  currentQueryId: number;\n}) {\n  const index = queries.findIndex(query => query.id === currentQueryId);\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const [disablePrevious, setDisablePrevious] = useState(false);\n  const [disableNext, setDisableNext] = useState(false);\n\n  function checkIndex() {\n    setDisablePrevious(currentIndex === 0);\n    setDisableNext(currentIndex === queries.length - 1);\n  }\n\n  function handleDataChange(previous: boolean) {\n    const offset = previous ? -1 : 1;\n    const index = currentIndex + offset;\n    if (index >= 0 && index < queries.length) {\n      fetchData(queries[index].id);\n      setCurrentIndex(index);\n      checkIndex();\n    }\n  }\n\n  function handleKeyPress(ev: any) {\n    if (currentIndex >= 0 && currentIndex < queries.length) {\n      if (ev.key === 'ArrowDown' || ev.key === 'k') {\n        ev.preventDefault();\n        handleDataChange(false);\n      } else if (ev.key === 'ArrowUp' || ev.key === 'j') {\n        ev.preventDefault();\n        handleDataChange(true);\n      }\n    }\n  }\n\n  useEffect(() => {\n    checkIndex();\n  });\n\n  return {\n    handleKeyPress,\n    handleDataChange,\n    disablePrevious,\n    disableNext,\n  };\n}\n\n/**\n * Retrieves all pages of dataset results\n */\nexport const useDatasetsList = (\n  db:\n    | (DatabaseObject & {\n        owners: [number];\n      })\n    | undefined,\n  schema: string | null | undefined,\n) => {\n  const [datasets, setDatasets] = useState<DatasetObject[]>([]);\n  const encodedSchema = schema ? encodeURIComponent(schema) : undefined;\n\n  const getDatasetsList = useCallback(async (filters: object[]) => {\n    let results: DatasetObject[] = [];\n    let page = 0;\n    let count;\n\n    // If count is undefined or less than results, we need to\n    // asynchronously retrieve a page of dataset results\n    while (count === undefined || results.length < count) {\n      const queryParams = rison.encode_uri({ filters, page });\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/dataset/?q=${queryParams}`,\n        });\n\n        // Reassign local count to response's count\n        ({ count } = response.json);\n\n        const {\n          json: { result },\n        } = response;\n\n        results = [...results, ...result];\n\n        page += 1;\n      } catch (error) {\n        addDangerToast(t('There was an error fetching dataset'));\n        logging.error(t('There was an error fetching dataset'), error);\n      }\n    }\n\n    setDatasets(results);\n  }, []);\n\n  useEffect(() => {\n    const filters = [\n      { col: 'database', opr: 'rel_o_m', value: db?.id },\n      { col: 'schema', opr: 'eq', value: encodedSchema },\n      { col: 'sql', opr: 'dataset_is_null_or_empty', value: true },\n    ];\n\n    if (schema) {\n      getDatasetsList(filters);\n    }\n  }, [db?.id, schema, encodedSchema, getDatasetsList]);\n\n  const datasetNames = datasets?.map(dataset => dataset.table_name);\n\n  return { datasets, datasetNames };\n};\n\nexport const useGetDatasetRelatedCounts = (id: string) => {\n  const [usageCount, setUsageCount] = useState(0);\n\n  const getDatasetRelatedObjects = useCallback(\n    () =>\n      SupersetClient.get({\n        endpoint: `/api/v1/dataset/${id}/related_objects`,\n      })\n        .then(({ json }) => {\n          setUsageCount(json?.charts.count);\n        })\n        .catch(error => {\n          addDangerToast(\n            t(`There was an error fetching dataset's related objects`),\n          );\n          logging.error(error);\n        }),\n    [id],\n  );\n\n  useEffect(() => {\n    // Todo: this useEffect should be used to call all count methods conncurently\n    // when we populate data for the new tabs. For right separating out this\n    // api call for building the usage page.\n    if (id) {\n      getDatasetRelatedObjects();\n    }\n  }, [id, getDatasetRelatedObjects]);\n\n  return { usageCount };\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport SyntaxHighlighterCopy from 'src/views/CRUD/data/components/SyntaxHighlighterCopy';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport { useQueryPreviewState } from 'src/views/CRUD/data/hooks';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 16px 0;\n`;\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n  }\n\n  .ant-modal-body {\n    padding: 24px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ntype SavedQueryObject = {\n  id: number;\n  label: string;\n  sql: string;\n};\n\ninterface SavedQueryPreviewModalProps extends ToastProps {\n  fetchData: (id: number) => {};\n  onHide: () => void;\n  openInSqlLab: (id: number) => {};\n  queries: Array<SavedQueryObject>;\n  savedQuery: SavedQueryObject;\n  show: boolean;\n}\n\nconst SavedQueryPreviewModal: FunctionComponent<SavedQueryPreviewModalProps> =\n  ({\n    fetchData,\n    onHide,\n    openInSqlLab,\n    queries,\n    savedQuery,\n    show,\n    addDangerToast,\n    addSuccessToast,\n  }) => {\n    const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n      useQueryPreviewState<SavedQueryObject>({\n        queries,\n        currentQueryId: savedQuery.id,\n        fetchData,\n      });\n\n    return (\n      <div role=\"none\" onKeyUp={handleKeyPress}>\n        <StyledModal\n          onHide={onHide}\n          show={show}\n          title={t('Query preview')}\n          footer={\n            <>\n              <Button\n                data-test=\"previous-saved-query\"\n                key=\"previous-saved-query\"\n                disabled={disablePrevious}\n                onClick={() => handleDataChange(true)}\n              >\n                {t('Previous')}\n              </Button>\n              <Button\n                data-test=\"next-saved-query\"\n                key=\"next-saved-query\"\n                disabled={disableNext}\n                onClick={() => handleDataChange(false)}\n              >\n                {t('Next')}\n              </Button>\n              <Button\n                data-test=\"open-in-sql-lab\"\n                key=\"open-in-sql-lab\"\n                buttonStyle=\"primary\"\n                onClick={() => openInSqlLab(savedQuery.id)}\n              >\n                {t('Open in SQL Lab')}\n              </Button>\n            </>\n          }\n        >\n          <QueryTitle>{t('Query name')}</QueryTitle>\n          <QueryLabel>{savedQuery.label}</QueryLabel>\n          <SyntaxHighlighterCopy\n            language=\"sql\"\n            addDangerToast={addDangerToast}\n            addSuccessToast={addSuccessToast}\n          >\n            {savedQuery.sql || ''}\n          </SyntaxHighlighterCopy>\n        </StyledModal>\n      </div>\n    );\n  };\n\nexport default withToasts(SavedQueryPreviewModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SupersetClient, t, styled } from '@superset-ui/core';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport rison from 'rison';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n} from 'src/views/CRUD/utils';\nimport Popover from 'src/components/Popover';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport handleResourceExport from 'src/utils/export';\nimport SubMenu, {\n  SubMenuProps,\n  ButtonProps,\n} from 'src/views/components/SubMenu';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport Loading from 'src/components/Loading';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport { TagsList } from 'src/components/Tags';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { commonMenuData } from 'src/views/CRUD/data/common';\nimport { SavedQueryObject } from 'src/views/CRUD/types';\nimport copyTextToClipboard from 'src/utils/copy';\nimport Tag from 'src/types/TagType';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport Icons from 'src/components/Icons';\nimport { BootstrapUser } from 'src/types/bootstrapTypes';\nimport SavedQueryPreviewModal from './SavedQueryPreviewModal';\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the saved queries. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more saved queries that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\ninterface SavedQueryListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: BootstrapUser;\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nfunction SavedQueryList({\n  addDangerToast,\n  addSuccessToast,\n}: SavedQueryListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: queryCount,\n      resourceCollection: queries,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<SavedQueryObject>(\n    'saved_query',\n    t('Saved queries'),\n    addDangerToast,\n  );\n  const [queryCurrentlyDeleting, setQueryCurrentlyDeleting] =\n    useState<SavedQueryObject | null>(null);\n  const [savedQueryCurrentlyPreviewing, setSavedQueryCurrentlyPreviewing] =\n    useState<SavedQueryObject | null>(null);\n  const [importingSavedQuery, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n\n  const openSavedQueryImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeSavedQueryImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleSavedQueryImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Query imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n\n  const openNewQuery = () => {\n    window.open(`${window.location.origin}/superset/sqllab?new=true`);\n  };\n\n  const handleSavedQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/saved_query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setSavedQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Saved queries',\n    ...commonMenuData,\n  };\n\n  const subMenuButtons: Array<ButtonProps> = [];\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  subMenuButtons.push({\n    name: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Query')}\n      </>\n    ),\n    onClick: openNewQuery,\n    buttonStyle: 'primary',\n  });\n\n  if (canCreate && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT)) {\n    subMenuButtons.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import queries')}\n          placement=\"bottomRight\"\n          data-test=\"import-tooltip-test\"\n        >\n          <Icons.Import data-test=\"import-icon\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openSavedQueryImportModal,\n      'data-test': 'import-button',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  // Action methods\n  const openInSqlLab = (id: number) => {\n    window.open(`${window.location.origin}/superset/sqllab?savedQueryId=${id}`);\n  };\n\n  const copyQueryLink = useCallback(\n    (id: number) => {\n      copyTextToClipboard(() =>\n        Promise.resolve(\n          `${window.location.origin}/superset/sqllab?savedQueryId=${id}`,\n        ),\n      )\n        .then(() => {\n          addSuccessToast(t('Link Copied!'));\n        })\n        .catch(() => {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        });\n    },\n    [addDangerToast, addSuccessToast],\n  );\n\n  const handleQueryDelete = ({ id, label }: SavedQueryObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setQueryCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', label));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', label, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkSavedQueryExport = (\n    savedQueriesToExport: SavedQueryObject[],\n  ) => {\n    const ids = savedQueriesToExport.map(({ id }) => id);\n    handleResourceExport('saved_query', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const handleBulkQueryDelete = (queriesToDelete: SavedQueryObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/?q=${rison.encode(\n        queriesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected queries: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'label',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'database.database_name',\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: 'database',\n        hidden: true,\n        disableSortBy: true,\n      },\n      {\n        accessor: 'schema',\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names?.shift() || '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: 'sql_tables',\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).fromNow();\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => changedOn,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { tags = [] },\n          },\n        }: any) => (\n          // Only show custom type tags\n          <TagsList tags={tags.filter((tag: Tag) => tag.type === 1)} />\n        ),\n        Header: t('Tags'),\n        accessor: 'tags',\n        disableSortBy: true,\n        hidden: !isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM),\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handlePreview = () => {\n            handleSavedQueryPreview(original.id);\n          };\n          const handleEdit = () => openInSqlLab(original.id);\n          const handleCopy = () => copyQueryLink(original.id);\n          const handleExport = () => handleBulkSavedQueryExport([original]);\n          const handleDelete = () => setQueryCurrentlyDeleting(original);\n\n          const actions = [\n            {\n              label: 'preview-action',\n              tooltip: t('Query preview'),\n              placement: 'bottom',\n              icon: 'Binoculars',\n              onClick: handlePreview,\n            },\n            canEdit && {\n              label: 'edit-action',\n              tooltip: t('Edit query'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'copy-action',\n              tooltip: t('Copy query URL'),\n              placement: 'bottom',\n              icon: 'Copy',\n              onClick: handleCopy,\n            },\n            canExport && {\n              label: 'export-action',\n              tooltip: t('Export query'),\n              placement: 'bottom',\n              icon: 'Share',\n              onClick: handleExport,\n            },\n            canDelete && {\n              label: 'delete-action',\n              tooltip: t('Delete query'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n    ],\n    [canDelete, canEdit, canExport, copyQueryLink, handleSavedQueryPreview],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        key: 'database',\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'saved_query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching dataset datasource values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Schema'),\n        id: 'schema',\n        key: 'schema',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'saved_query',\n          'schema',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Tags'),\n        id: 'tags',\n        key: 'tags',\n        input: 'search',\n        operator: FilterOperator.savedQueryTags,\n      },\n      {\n        Header: t('Search'),\n        id: 'label',\n        key: 'search',\n        input: 'search',\n        operator: FilterOperator.allText,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete the saved query.',\n          )}\n          onConfirm={() => {\n            if (queryCurrentlyDeleting) {\n              handleQueryDelete(queryCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setQueryCurrentlyDeleting(null)}\n          open\n          title={t('Delete Query?')}\n        />\n      )}\n      {savedQueryCurrentlyPreviewing && (\n        <SavedQueryPreviewModal\n          fetchData={handleSavedQueryPreview}\n          onHide={() => setSavedQueryCurrentlyPreviewing(null)}\n          savedQuery={savedQueryCurrentlyPreviewing}\n          queries={queries}\n          openInSqlLab={openInSqlLab}\n          show\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected queries?')}\n        onConfirm={handleBulkQueryDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkSavedQueryExport,\n            });\n          }\n          return (\n            <ListView<SavedQueryObject>\n              className=\"saved_query-list-view\"\n              columns={columns}\n              count={queryCount}\n              data={queries}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              highlightRowId={savedQueryCurrentlyPreviewing?.id}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"saved_query\"\n        resourceLabel={t('queries')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleSavedQueryImport}\n        show={importingSavedQuery}\n        onHide={closeSavedQueryImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(SavedQueryList);\n"],"names":["HelperMessage","styled","theme","colors","grayscale","base","typography","sizes","s","StyledInputContainer","gridUnit","light1","light2","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","isHidden","setIsHidden","useState","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","clearModal","state","alreadyExists","passwordsNeeded","importResource","useImportResource","msg","useEffect","length","name","className","disablePrimaryButton","onHandledPrimaryAction","originFileObj","File","then","result","primaryButtonName","t","primaryButtonType","width","title","id","accept","onChange","info","file","status","onRemove","removedFile","filter","uid","customRequest","disabled","loading","showDbInstallInstructions","map","fileName","key","autoComplete","type","value","event","target","targetValue","currentTarget","toUpperCase","StyledActions","primary","ActionWrapper","ActionsBar","actions","action","index","ActionIcon","Icons","icon","tooltip","label","placement","role","tabIndex","onClick","StyledTag","AntdTag","onDelete","editable","isLongTag","useMemo","tagElem","closable","onClose","color","slice","href","rel","Tooltip","TagsDiv","tags","maxTags","tempMaxTags","setTempMaxTags","handleDelete","tagsIsLong","extraTags","tag","undefined","commonMenuData","tabs","url","usesRouter","SyntaxHighlighter","sqlSyntax","markdownSyntax","htmlSyntax","jsonSyntax","SyntaxHighlighterWrapper","SyntaxHighlighterCopy","addDangerToast","addSuccessToast","children","syntaxHighlighterProps","e","textToCopy","preventDefault","blur","copyTextToClipboard","Promise","resolve","catch","style","github","useQueryPreviewState","queries","fetchData","currentQueryId","findIndex","query","currentIndex","setCurrentIndex","disablePrevious","setDisablePrevious","disableNext","setDisableNext","checkIndex","handleDataChange","previous","handleKeyPress","ev","useDatasetsList","db","schema","datasets","setDatasets","encodedSchema","encodeURIComponent","getDatasetsList","useCallback","async","filters","count","results","page","queryParams","rison","response","SupersetClient","endpoint","json","error","logging","col","opr","datasetNames","dataset","table_name","useGetDatasetRelatedCounts","usageCount","setUsageCount","getDatasetRelatedObjects","charts","QueryTitle","secondary","QueryLabel","dark2","m","StyledModal","Modal","xs","weights","normal","l","withToasts","openInSqlLab","savedQuery","onKeyUp","footer","Button","buttonStyle","language","sql","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","StyledTableLabel","StyledPopoverItem","resourceCount","queryCount","resourceCollection","bulkSelectEnabled","hasPerm","toggleBulkSelect","refreshData","useListViewResource","queryCurrentlyDeleting","setQueryCurrentlyDeleting","savedQueryCurrentlyPreviewing","setSavedQueryCurrentlyPreviewing","importingSavedQuery","showImportModal","preparingExport","setPreparingExport","canCreate","canEdit","canDelete","canExport","isFeatureEnabled","FeatureFlag","handleSavedQueryPreview","createErrorHandler","errMsg","menuData","activeChild","subMenuButtons","push","window","open","location","origin","buttons","copyQueryLink","handleBulkSavedQueryExport","savedQueriesToExport","ids","handleResourceExport","initialSort","desc","columns","accessor","Header","size","hidden","disableSortBy","Cell","row","original","sql_tables","tables","names","table","main","shift","Popover","trigger","content","created_on","createdOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","moment","fromNow","changed_on_delta_humanized","changedOn","Tags","item","input","operator","FilterOperator","unfilteredLabel","fetchSelects","createFetchRelated","paginate","createFetchDistinct","SubMenu","DeleteModal","description","onConfirm","handleQueryDelete","ConfirmStatusChange","queriesToDelete","message","confirmDelete","bulkActions","onSelect","ListView","data","pageSize","disableBulkSelect","highlightRowId","Loading"],"sourceRoot":""}