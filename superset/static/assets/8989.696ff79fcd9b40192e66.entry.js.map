{"version":3,"file":"8989.696ff79fcd9b40192e66.entry.js","mappings":"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","sources":["webpack://superset/./packages/superset-ui-chart-controls/src/sections/sections.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/advancedAnalytics.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/annotationsAndLayers.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/forecastInterval.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/chartTitle.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/shared-controls/customControls.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/echartsTimeSeriesQuery.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/utils/mainMetric.ts","webpack://superset/./packages/superset-ui-chart-controls/src/fixtures.ts","webpack://superset/./packages/superset-ui-chart-controls/src/index.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/boxplotOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/contributionOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/flattenOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/pivotOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/prophetOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/renameOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/resampleOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/rollingWindowOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/sortOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/timeCompareOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/timeComparePivotOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/constants.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/getMetricOffsetsMap.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/isDerivedSeries.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/isTimeComparison.ts","webpack://superset/./packages/superset-ui-chart-controls/src/utils/columnChoices.ts","webpack://superset/./packages/superset-ui-chart-controls/src/utils/getColorFormatters.ts","webpack://superset/./packages/superset-ui-core/src/query/types/Query.ts","webpack://superset/./packages/superset-ui-core/src/utils/ensureIsInt.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { hasGenericChartAxes, t } from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\n\n// A few standard controls sections that are used internally.\n// Not recommended for use in third-party plugins.\n\nconst baseTimeSection = {\n  label: t('Time'),\n  expanded: true,\n  description: t('Time related form attributes'),\n};\n\nexport const legacyTimeseriesTime: ControlPanelSectionConfig = {\n  ...baseTimeSection,\n  controlSetRows: [\n    ['granularity'],\n    ['granularity_sqla'],\n    ['time_grain_sqla'],\n    ['time_range'],\n  ],\n};\n\nexport const genericTime: ControlPanelSectionConfig = hasGenericChartAxes\n  ? { controlSetRows: [] }\n  : {\n      ...baseTimeSection,\n      controlSetRows: [\n        ['granularity_sqla'],\n        ['time_grain_sqla'],\n        ['time_range'],\n      ],\n    };\n\nexport const legacyRegularTime: ControlPanelSectionConfig = hasGenericChartAxes\n  ? { controlSetRows: [] }\n  : {\n      ...baseTimeSection,\n      controlSetRows: [['granularity_sqla'], ['time_range']],\n    };\n\nexport const datasourceAndVizType: ControlPanelSectionConfig = {\n  label: t('Datasource & Chart Type'),\n  expanded: true,\n  controlSetRows: [\n    ['datasource'],\n    ['viz_type'],\n    [\n      {\n        name: 'slice_id',\n        config: {\n          type: 'HiddenControl',\n          label: t('Chart ID'),\n          hidden: true,\n          description: t('The id of the active chart'),\n        },\n      },\n      {\n        name: 'cache_timeout',\n        config: {\n          type: 'HiddenControl',\n          label: t('Cache Timeout (seconds)'),\n          hidden: true,\n          description: t('The number of seconds before expiring the cache'),\n        },\n      },\n      {\n        name: 'url_params',\n        config: {\n          type: 'HiddenControl',\n          label: t('URL Parameters'),\n          hidden: true,\n          description: t(\n            'Extra url parameters for use in Jinja templated queries',\n          ),\n        },\n      },\n      {\n        name: 'custom_params',\n        config: {\n          type: 'HiddenControl',\n          label: t('Extra Parameters'),\n          hidden: true,\n          description: t(\n            'Extra parameters that any plugins can choose to set for use in Jinja templated queries',\n          ),\n        },\n      },\n    ],\n  ],\n};\n\nexport const colorScheme: ControlPanelSectionConfig = {\n  label: t('Color Scheme'),\n  controlSetRows: [['color_scheme']],\n};\n\nexport const annotations: ControlPanelSectionConfig = {\n  label: t('Annotations and Layers'),\n  tabOverride: 'data',\n  expanded: true,\n  controlSetRows: [\n    [\n      {\n        name: 'annotation_layers',\n        config: {\n          type: 'AnnotationLayerControl',\n          label: '',\n          default: [],\n          description: t('Annotation Layers'),\n          renderTrigger: true,\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, RollingType, ComparisonType } from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\nimport { formatSelectOptions } from '../utils';\n\nexport const advancedAnalyticsControls: ControlPanelSectionConfig = {\n  label: t('Advanced analytics'),\n  tabOverride: 'data',\n  description: t(\n    'This section contains options ' +\n      'that allow for advanced analytical post processing ' +\n      'of query results',\n  ),\n  controlSetRows: [\n    [<div className=\"section-header\">{t('Rolling window')}</div>],\n    [\n      {\n        name: 'rolling_type',\n        config: {\n          type: 'SelectControl',\n          label: t('Rolling function'),\n          default: null,\n          choices: [[null, t('None')]].concat(\n            formatSelectOptions(Object.values(RollingType)),\n          ),\n          description: t(\n            'Defines a rolling window function to apply, works along ' +\n              'with the [Periods] text box',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'rolling_periods',\n        config: {\n          type: 'TextControl',\n          label: t('Periods'),\n          isInt: true,\n          description: t(\n            'Defines the size of the rolling window function, ' +\n              'relative to the time granularity selected',\n          ),\n          visibility: ({ controls }, { name }) => {\n            // `rolling_type_b` refer to rolling_type in mixed timeseries Query B\n            const rollingTypeControlName = name.endsWith('_b')\n              ? 'rolling_type_b'\n              : 'rolling_type';\n            return (\n              Boolean(controls[rollingTypeControlName]?.value) &&\n              controls[rollingTypeControlName]?.value !== RollingType.Cumsum\n            );\n          },\n        },\n      },\n    ],\n    [\n      {\n        name: 'min_periods',\n        config: {\n          type: 'TextControl',\n          label: t('Min periods'),\n          isInt: true,\n          description: t(\n            'The minimum number of rolling periods required to show ' +\n              'a value. For instance if you do a cumulative sum on 7 days ' +\n              'you may want your \"Min Period\" to be 7, so that all data points ' +\n              'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n              'taking place over the first 7 periods',\n          ),\n          visibility: ({ controls }, { name }) => {\n            // `rolling_type_b` refer to rolling_type in mixed timeseries Query B\n            const rollingTypeControlName = name.endsWith('_b')\n              ? 'rolling_type_b'\n              : 'rolling_type';\n            return (\n              Boolean(controls[rollingTypeControlName]?.value) &&\n              controls[rollingTypeControlName]?.value !== RollingType.Cumsum\n            );\n          },\n        },\n      },\n    ],\n    [<div className=\"section-header\">{t('Time comparison')}</div>],\n    [\n      {\n        name: 'time_compare',\n        config: {\n          type: 'SelectControl',\n          multi: true,\n          freeForm: true,\n          label: t('Time shift'),\n          choices: [\n            ['1 day ago', t('1 day ago')],\n            ['1 week ago', t('1 week ago')],\n            ['28 days ago', t('28 days ago')],\n            ['30 days ago', t('30 days ago')],\n            ['52 weeks ago', t('52 weeks ago')],\n            ['1 year ago', t('1 year ago')],\n            ['104 weeks ago', t('104 weeks ago')],\n            ['2 years ago', t('2 years ago')],\n            ['156 weeks ago', t('156 weeks ago')],\n            ['3 years ago', t('3 years ago')],\n          ],\n          description: t(\n            'Overlay one or more timeseries from a ' +\n              'relative time period. Expects relative time deltas ' +\n              'in natural language (example:  24 hours, 7 days, ' +\n              '52 weeks, 365 days). Free text is supported.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'comparison_type',\n        config: {\n          type: 'SelectControl',\n          label: t('Calculation type'),\n          default: 'values',\n          choices: [\n            [ComparisonType.Values, t('Actual values')],\n            [ComparisonType.Difference, t('Difference')],\n            [ComparisonType.Percentage, t('Percentage change')],\n            [ComparisonType.Ratio, t('Ratio')],\n          ],\n          description: t(\n            'How to display time shifts: as individual lines; as the ' +\n              'difference between the main time series and each time shift; ' +\n              'as the percentage change; or as the ratio between series and time shifts.',\n          ),\n        },\n      },\n    ],\n    [<div className=\"section-header\">{t('Resample')}</div>],\n    [\n      {\n        name: 'resample_rule',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Rule'),\n          default: null,\n          choices: [\n            ['1T', t('1 minutely frequency')],\n            ['1H', t('1 hourly frequency')],\n            ['1D', t('1 calendar day frequency')],\n            ['7D', t('7 calendar day frequency')],\n            ['1MS', t('1 month start frequency')],\n            ['1M', t('1 month end frequency')],\n            ['1AS', t('1 year start frequency')],\n            ['1A', t('1 year end frequency')],\n          ],\n          description: t('Pandas resample rule'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'resample_method',\n        config: {\n          type: 'SelectControl',\n          label: t('Fill method'),\n          default: null,\n          choices: [\n            ['asfreq', t('Null imputation')],\n            ['zerofill', t('Zero imputation')],\n            ['linear', t('Linear interpolation')],\n            ['ffill', t('Forward values')],\n            ['bfill', t('Backward values')],\n            ['median', t('Median values')],\n            ['mean', t('Mean values')],\n            ['sum', t('Sum values')],\n          ],\n          description: t('Pandas resample method'),\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\n\nexport const annotationLayers = [];\n\nexport const annotationsAndLayersControls: ControlPanelSectionConfig = {\n  label: t('Annotations and Layers'),\n  expanded: false,\n  tabOverride: 'data',\n  controlSetRows: [\n    [\n      {\n        name: 'annotation_layers',\n        config: {\n          type: 'AnnotationLayerControl',\n          label: '',\n          default: annotationLayers,\n          description: t('Annotation Layers'),\n          renderTrigger: false,\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  legacyValidateInteger,\n  legacyValidateNumber,\n  t,\n} from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\n\nexport const FORECAST_DEFAULT_DATA = {\n  forecastEnabled: false,\n  forecastInterval: 0.8,\n  forecastPeriods: 10,\n  forecastSeasonalityDaily: null,\n  forecastSeasonalityWeekly: null,\n  forecastSeasonalityYearly: null,\n};\n\nexport const forecastIntervalControls: ControlPanelSectionConfig = {\n  label: t('Predictive Analytics'),\n  expanded: false,\n  controlSetRows: [\n    [\n      {\n        name: 'forecastEnabled',\n        config: {\n          type: 'CheckboxControl',\n          label: t('Enable forecast'),\n          renderTrigger: false,\n          default: FORECAST_DEFAULT_DATA.forecastEnabled,\n          description: t('Enable forecasting'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastPeriods',\n        config: {\n          type: 'TextControl',\n          label: t('Forecast periods'),\n          validators: [legacyValidateInteger],\n          default: FORECAST_DEFAULT_DATA.forecastPeriods,\n          description: t(\n            'How many periods into the future do we want to predict',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastInterval',\n        config: {\n          type: 'TextControl',\n          label: t('Confidence interval'),\n          validators: [legacyValidateNumber],\n          default: FORECAST_DEFAULT_DATA.forecastInterval,\n          description: t(\n            'Width of the confidence interval. Should be between 0 and 1',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityYearly',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Yearly seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityYearly,\n          description: t(\n            'Should yearly seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityWeekly',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Weekly seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityWeekly,\n          description: t(\n            'Should weekly seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityDaily',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Daily seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityDaily,\n          description: t(\n            'Should daily seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\nimport { formatSelectOptions } from '../utils';\n\nexport const TITLE_MARGIN_OPTIONS: number[] = [\n  15, 30, 50, 75, 100, 125, 150, 200,\n];\nexport const TITLE_POSITION_OPTIONS: [string, string][] = [\n  ['Left', t('Left')],\n  ['Top', t('Top')],\n];\nexport const titleControls: ControlPanelSectionConfig = {\n  label: t('Chart Title'),\n  tabOverride: 'customize',\n  expanded: true,\n  controlSetRows: [\n    [<div className=\"section-header\">{t('X Axis')}</div>],\n    [\n      {\n        name: 'x_axis_title',\n        config: {\n          type: 'TextControl',\n          label: t('X Axis Title'),\n          renderTrigger: true,\n          default: '',\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'x_axis_title_margin',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: true,\n          label: t('X AXIS TITLE BOTTOM MARGIN'),\n          renderTrigger: true,\n          default: TITLE_MARGIN_OPTIONS[0],\n          choices: formatSelectOptions(TITLE_MARGIN_OPTIONS),\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [<div className=\"section-header\">{t('Y Axis')}</div>],\n    [\n      {\n        name: 'y_axis_title',\n        config: {\n          type: 'TextControl',\n          label: t('Y Axis Title'),\n          renderTrigger: true,\n          default: '',\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_title_margin',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: true,\n          label: t('Y AXIS TITLE MARGIN'),\n          renderTrigger: true,\n          default: TITLE_MARGIN_OPTIONS[0],\n          choices: formatSelectOptions(TITLE_MARGIN_OPTIONS),\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_title_position',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: false,\n          label: t('Y AXIS TITLE POSITION'),\n          renderTrigger: true,\n          default: TITLE_POSITION_OPTIONS[0][0],\n          choices: TITLE_POSITION_OPTIONS,\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  ContributionType,\n  ensureIsArray,\n  getColumnLabel,\n  getMetricLabel,\n  isDefined,\n  isEqualArray,\n  QueryFormColumn,\n  QueryFormMetric,\n  t,\n} from '@superset-ui/core';\nimport { ControlPanelState, ControlState, ControlStateMapping } from '../types';\nimport { isTemporalColumn } from '../utils';\n\nexport const contributionModeControl = {\n  name: 'contributionMode',\n  config: {\n    type: 'SelectControl',\n    label: t('Contribution Mode'),\n    default: null,\n    choices: [\n      [null, t('None')],\n      [ContributionType.Row, t('Row')],\n      [ContributionType.Column, t('Series')],\n    ],\n    description: t('Calculate contribution per series or row'),\n  },\n};\n\nconst xAxisSortVisibility = ({ controls }: { controls: ControlStateMapping }) =>\n  isDefined(controls?.x_axis?.value) &&\n  !isTemporalColumn(\n    getColumnLabel(controls?.x_axis?.value as QueryFormColumn),\n    controls?.datasource?.datasource,\n  ) &&\n  Array.isArray(controls?.groupby?.value) &&\n  controls.groupby.value.length === 0;\n\nexport const xAxisSortControl = {\n  name: 'x_axis_sort',\n  config: {\n    type: 'XAxisSortControl',\n    label: t('X-Axis Sort By'),\n    description: t('Whether to sort descending or ascending on the X-Axis.'),\n    shouldMapStateToProps: (\n      prevState: ControlPanelState,\n      state: ControlPanelState,\n    ) => {\n      const prevOptions = [\n        getColumnLabel(prevState?.controls?.x_axis?.value as QueryFormColumn),\n        ...ensureIsArray(prevState?.controls?.metrics?.value).map(metric =>\n          getMetricLabel(metric as QueryFormMetric),\n        ),\n      ];\n      const currOptions = [\n        getColumnLabel(state?.controls?.x_axis?.value as QueryFormColumn),\n        ...ensureIsArray(state?.controls?.metrics?.value).map(metric =>\n          getMetricLabel(metric as QueryFormMetric),\n        ),\n      ];\n      return !isEqualArray(prevOptions, currOptions);\n    },\n    mapStateToProps: (\n      { controls }: { controls: ControlStateMapping },\n      controlState: ControlState,\n    ) => {\n      const choices = [\n        getColumnLabel(controls?.x_axis?.value as QueryFormColumn),\n        ...ensureIsArray(controls?.metrics?.value).map(metric =>\n          getMetricLabel(metric as QueryFormMetric),\n        ),\n      ].filter(Boolean);\n      const shouldReset = !(\n        typeof controlState.value === 'string' &&\n        choices.includes(controlState.value) &&\n        !isTemporalColumn(\n          getColumnLabel(controls?.x_axis?.value as QueryFormColumn),\n          controls?.datasource?.datasource,\n        )\n      );\n\n      return {\n        shouldReset,\n        options: choices.map(entry => ({\n          value: entry,\n          label: entry,\n        })),\n      };\n    },\n    visibility: xAxisSortVisibility,\n  },\n};\n\nexport const xAxisSortAscControl = {\n  name: 'x_axis_sort_asc',\n  config: {\n    type: 'CheckboxControl',\n    label: t('X-Axis Sort Ascending'),\n    default: true,\n    description: t('Whether to sort descending or ascending on the X-Axis.'),\n    visibility: xAxisSortVisibility,\n  },\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { hasGenericChartAxes, t } from '@superset-ui/core';\nimport { ControlPanelSectionConfig, ControlSetRow } from '../types';\nimport {\n  contributionModeControl,\n  xAxisSortControl,\n  xAxisSortAscControl,\n} from '../shared-controls';\n\nconst controlsWithoutXAxis: ControlSetRow[] = [\n  ['metrics'],\n  ['groupby'],\n  [contributionModeControl],\n  ['adhoc_filters'],\n  ['limit'],\n  ['timeseries_limit_metric'],\n  ['order_desc'],\n  ['row_limit'],\n  ['truncate_metric'],\n  ['show_empty_columns'],\n];\n\nexport const echartsTimeSeriesQuery: ControlPanelSectionConfig = {\n  label: t('Query'),\n  expanded: true,\n  controlSetRows: [\n    [hasGenericChartAxes ? 'x_axis' : null],\n    [hasGenericChartAxes ? 'time_grain_sqla' : null],\n    ...controlsWithoutXAxis,\n  ],\n};\n\nexport const echartsTimeSeriesQueryWithXAxisSort: ControlPanelSectionConfig = {\n  label: t('Query'),\n  expanded: true,\n  controlSetRows: [\n    [hasGenericChartAxes ? 'x_axis' : null],\n    [hasGenericChartAxes ? 'time_grain_sqla' : null],\n    [hasGenericChartAxes ? xAxisSortControl : null],\n    [hasGenericChartAxes ? xAxisSortAscControl : null],\n    ...controlsWithoutXAxis,\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Metric } from '../types';\n\nexport default function mainMetric(savedMetrics?: Metric[] | null) {\n  // Using 'count' as default metric if it exists, otherwise using whatever one shows up first\n  let metric;\n  if (savedMetrics && savedMetrics.length > 0) {\n    savedMetrics.forEach(m => {\n      if (m.metric_name === 'count') {\n        metric = 'count';\n      }\n    });\n    if (!metric) {\n      metric = savedMetrics[0].metric_name;\n    }\n  }\n  return metric;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DatasourceType } from '@superset-ui/core';\nimport { Dataset } from './types';\n\nexport const TestDataset: Dataset = {\n  column_format: {},\n  columns: [\n    {\n      advanced_data_type: undefined,\n      certification_details: null,\n      certified_by: null,\n      column_name: 'num',\n      description: null,\n      expression: '',\n      filterable: true,\n      groupby: true,\n      id: 332,\n      is_certified: false,\n      is_dttm: false,\n      python_date_format: null,\n      type: 'BIGINT',\n      type_generic: 0,\n      verbose_name: null,\n      warning_markdown: null,\n    },\n    {\n      advanced_data_type: undefined,\n      certification_details: null,\n      certified_by: null,\n      column_name: 'gender',\n      description: null,\n      expression: '',\n      filterable: true,\n      groupby: true,\n      id: 330,\n      is_certified: false,\n      is_dttm: false,\n      python_date_format: null,\n      type: 'VARCHAR(16)',\n      type_generic: 1,\n      verbose_name: '',\n      warning_markdown: null,\n    },\n    {\n      advanced_data_type: undefined,\n      certification_details: null,\n      certified_by: null,\n      column_name: 'state',\n      description: null,\n      expression: '',\n      filterable: true,\n      groupby: true,\n      id: 333,\n      is_certified: false,\n      is_dttm: false,\n      python_date_format: null,\n      type: 'VARCHAR(10)',\n      type_generic: 1,\n      verbose_name: null,\n      warning_markdown: null,\n    },\n    {\n      advanced_data_type: undefined,\n      certification_details: null,\n      certified_by: null,\n      column_name: 'ds',\n      description: null,\n      expression: '',\n      filterable: true,\n      groupby: true,\n      id: 329,\n      is_certified: false,\n      is_dttm: true,\n      python_date_format: null,\n      type: 'TIMESTAMP WITHOUT TIME ZONE',\n      type_generic: 2,\n      verbose_name: null,\n      warning_markdown: null,\n    },\n    {\n      advanced_data_type: undefined,\n      certification_details: null,\n      certified_by: null,\n      column_name: 'name',\n      description: null,\n      expression: '',\n      filterable: true,\n      groupby: true,\n      id: 331,\n      is_certified: false,\n      is_dttm: false,\n      python_date_format: null,\n      type: 'VARCHAR(255)',\n      type_generic: 1,\n      verbose_name: null,\n      warning_markdown: null,\n    },\n  ],\n  datasource_name: 'birth_names',\n  description: null,\n  granularity_sqla: 'ds',\n  id: 2,\n  main_dttm_col: 'ds',\n  metrics: [\n    {\n      certification_details: null,\n      certified_by: null,\n      d3format: null,\n      description: null,\n      expression: 'COUNT(*)',\n      id: 7,\n      is_certified: false,\n      metric_name: 'count',\n      verbose_name: 'COUNT(*)',\n      warning_markdown: '',\n      warning_text: null,\n    },\n  ],\n  name: 'public.birth_names',\n  order_by_choices: [],\n  owners: [\n    {\n      first_name: 'admin',\n      id: 1,\n      last_name: 'user',\n      username: 'admin',\n    },\n  ],\n  type: DatasourceType.Dataset,\n  uid: '2__table',\n  verbose_map: {},\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as sectionsModule from './sections';\n\nexport * from './utils';\nexport * from './constants';\nexport * from './operators';\n\n// can't do `export * as sections from './sections'`, babel-transformer will fail\nexport const sections = sectionsModule;\n\nexport * from './components/InfoTooltipWithTrigger';\nexport * from './components/ColumnOption';\nexport * from './components/ColumnTypeLabel/ColumnTypeLabel';\nexport * from './components/MetricOption';\n\nexport * from './shared-controls';\nexport * from './types';\nexport * from './fixtures';\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  getMetricLabel,\n  PostProcessingBoxplot,\n  BoxPlotQueryObjectWhiskerType,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\nconst PERCENTILE_REGEX = /(\\d+)\\/(\\d+) percentiles/;\n\nexport const boxplotOperator: PostProcessingFactory<PostProcessingBoxplot> = (\n  formData,\n  queryObject,\n) => {\n  const { groupby, whiskerOptions } = formData;\n\n  if (whiskerOptions) {\n    let whiskerType: BoxPlotQueryObjectWhiskerType;\n    let percentiles: [number, number] | undefined;\n    const percentileMatch = PERCENTILE_REGEX.exec(whiskerOptions as string);\n\n    if (whiskerOptions === 'Tukey' || !whiskerOptions) {\n      whiskerType = 'tukey';\n    } else if (whiskerOptions === 'Min/max (no outliers)') {\n      whiskerType = 'min/max';\n    } else if (percentileMatch) {\n      whiskerType = 'percentile';\n      percentiles = [\n        parseInt(percentileMatch[1], 10),\n        parseInt(percentileMatch[2], 10),\n      ];\n    } else {\n      throw new Error(`Unsupported whisker type: ${whiskerOptions}`);\n    }\n\n    return {\n      operation: 'boxplot',\n      options: {\n        whisker_type: whiskerType,\n        percentiles,\n        groupby: ensureIsArray(groupby).map(getColumnLabel),\n        metrics: ensureIsArray(queryObject.metrics).map(getMetricLabel),\n      },\n    };\n  }\n  return undefined;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingContribution } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const contributionOperator: PostProcessingFactory<PostProcessingContribution> =\n  (formData, queryObject) => {\n    if (formData.contributionMode) {\n      return {\n        operation: 'contribution',\n        options: {\n          orientation: formData.contributionMode,\n        },\n      };\n    }\n    return undefined;\n  };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingFlatten } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const flattenOperator: PostProcessingFactory<PostProcessingFlatten> = (\n  formData,\n  queryObject,\n) => ({\n  operation: 'flatten',\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  getMetricLabel,\n  PostProcessingPivot,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\nexport const pivotOperator: PostProcessingFactory<PostProcessingPivot> = (\n  formData,\n  queryObject,\n) => {\n  const metricLabels = ensureIsArray(queryObject.metrics).map(getMetricLabel);\n  const xAxisLabel = getXAxisLabel(formData);\n  const columns = queryObject.series_columns || queryObject.columns;\n\n  if (xAxisLabel && metricLabels.length) {\n    return {\n      operation: 'pivot',\n      options: {\n        index: [xAxisLabel],\n        columns: ensureIsArray(columns).map(getColumnLabel),\n        // Create 'dummy' mean aggregates to assign cell values in pivot table\n        // use the 'mean' aggregates to avoid drop NaN. PR: https://github.com/apache-superset/superset-ui/pull/1231\n        aggregates: Object.fromEntries(\n          metricLabels.map(metric => [metric, { operator: 'mean' }]),\n        ),\n        drop_missing_columns: !formData?.show_empty_columns,\n      },\n    };\n  }\n\n  return undefined;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingProphet, getXAxisLabel } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const prophetOperator: PostProcessingFactory<PostProcessingProphet> = (\n  formData,\n  queryObject,\n) => {\n  const xAxisLabel = getXAxisLabel(formData);\n  if (formData.forecastEnabled && xAxisLabel) {\n    return {\n      operation: 'prophet',\n      options: {\n        time_grain: formData.time_grain_sqla,\n        periods: parseInt(formData.forecastPeriods, 10),\n        confidence_interval: parseFloat(formData.forecastInterval),\n        yearly_seasonality: formData.forecastSeasonalityYearly,\n        weekly_seasonality: formData.forecastSeasonalityWeekly,\n        daily_seasonality: formData.forecastSeasonalityDaily,\n        index: xAxisLabel,\n      },\n    };\n  }\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  PostProcessingRename,\n  ensureIsArray,\n  getMetricLabel,\n  ComparisonType,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\n\nexport const renameOperator: PostProcessingFactory<PostProcessingRename> = (\n  formData,\n  queryObject,\n) => {\n  const metrics = ensureIsArray(queryObject.metrics);\n  const columns = ensureIsArray(\n    queryObject.series_columns || queryObject.columns,\n  );\n  const { truncate_metric } = formData;\n  const xAxisLabel = getXAxisLabel(formData);\n  // remove or rename top level of column name(metric name) in the MultiIndex when\n  // 1) only 1 metric\n  // 2) dimension exist\n  // 3) xAxis exist\n  // 4) time comparison exist, and comparison type is \"actual values\"\n  // 5) truncate_metric in form_data and truncate_metric is true\n  if (\n    metrics.length === 1 &&\n    columns.length > 0 &&\n    xAxisLabel &&\n    !(\n      // todo: we should provide an approach to handle derived metrics\n      (\n        isTimeComparison(formData, queryObject) &&\n        [\n          ComparisonType.Difference,\n          ComparisonType.Ratio,\n          ComparisonType.Percentage,\n        ].includes(formData.comparison_type)\n      )\n    ) &&\n    truncate_metric !== undefined &&\n    !!truncate_metric\n  ) {\n    const renamePairs: [string, string | null][] = [];\n\n    if (\n      // \"actual values\" will add derived metric.\n      // we will rename the \"metric\" from the metricWithOffset label\n      // for example: \"count__1 year ago\" =>\t\"1 year ago\"\n      isTimeComparison(formData, queryObject) &&\n      formData.comparison_type === ComparisonType.Values\n    ) {\n      const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n      const timeOffsets = ensureIsArray(formData.time_compare);\n      [...metricOffsetMap.keys()].forEach(metricWithOffset => {\n        const offsetLabel = timeOffsets.find(offset =>\n          metricWithOffset.includes(offset),\n        );\n        renamePairs.push([metricWithOffset, offsetLabel]);\n      });\n    }\n\n    renamePairs.push([getMetricLabel(metrics[0]), null]);\n\n    return {\n      operation: 'rename',\n      options: {\n        columns: Object.fromEntries(renamePairs),\n        level: 0,\n        inplace: true,\n      },\n    };\n  }\n\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingResample } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const resampleOperator: PostProcessingFactory<PostProcessingResample> = (\n  formData,\n  queryObject,\n) => {\n  const resampleZeroFill = formData.resample_method === 'zerofill';\n  const resampleMethod = resampleZeroFill ? 'asfreq' : formData.resample_method;\n  const resampleRule = formData.resample_rule;\n  if (resampleMethod && resampleRule) {\n    return {\n      operation: 'resample',\n      options: {\n        method: resampleMethod,\n        rule: resampleRule,\n        fill_value: resampleZeroFill ? 0 : null,\n      },\n    };\n  }\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ensureIsInt,\n  PostProcessingCum,\n  PostProcessingRolling,\n  RollingType,\n} from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const rollingWindowOperator: PostProcessingFactory<\n  PostProcessingRolling | PostProcessingCum\n> = (formData, queryObject) => {\n  let columns: (string | undefined)[];\n  if (isTimeComparison(formData, queryObject)) {\n    const metricsMap = getMetricOffsetsMap(formData, queryObject);\n    columns = [\n      ...Array.from(metricsMap.values()),\n      ...Array.from(metricsMap.keys()),\n    ];\n  } else {\n    columns = ensureIsArray(queryObject.metrics).map(metric => {\n      if (typeof metric === 'string') {\n        return metric;\n      }\n      return metric.label;\n    });\n  }\n  const columnsMap = Object.fromEntries(columns.map(col => [col, col]));\n\n  if (formData.rolling_type === RollingType.Cumsum) {\n    return {\n      operation: 'cum',\n      options: {\n        operator: 'sum',\n        columns: columnsMap,\n      },\n    };\n  }\n\n  if (\n    [RollingType.Sum, RollingType.Mean, RollingType.Std].includes(\n      formData.rolling_type,\n    )\n  ) {\n    return {\n      operation: 'rolling',\n      options: {\n        rolling_type: formData.rolling_type,\n        window: ensureIsInt(formData.rolling_periods, 1),\n        min_periods: ensureIsInt(formData.min_periods, 0),\n        columns: columnsMap,\n      },\n    };\n  }\n\n  return undefined;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { isEmpty } from 'lodash';\nimport {\n  ensureIsArray,\n  getMetricLabel,\n  getXAxisLabel,\n  hasGenericChartAxes,\n  isDefined,\n  PostProcessingSort,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\nexport const sortOperator: PostProcessingFactory<PostProcessingSort> = (\n  formData,\n  queryObject,\n) => {\n  // the sortOperator only used in the barchart v2\n  const sortableLabels = [\n    getXAxisLabel(formData),\n    ...ensureIsArray(formData.metrics).map(metric => getMetricLabel(metric)),\n  ].filter(Boolean);\n\n  if (\n    hasGenericChartAxes &&\n    isDefined(formData?.x_axis_sort) &&\n    isDefined(formData?.x_axis_sort_asc) &&\n    sortableLabels.includes(formData.x_axis_sort) &&\n    // the sort operator doesn't support sort-by multiple series.\n    isEmpty(formData.groupby)\n  ) {\n    if (formData.x_axis_sort === getXAxisLabel(formData)) {\n      return {\n        operation: 'sort',\n        options: {\n          is_sort_index: true,\n          ascending: formData.x_axis_sort_asc,\n        },\n      };\n    }\n\n    return {\n      operation: 'sort',\n      options: {\n        by: formData.x_axis_sort,\n        ascending: formData.x_axis_sort_asc,\n      },\n    };\n  }\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ComparisonType, PostProcessingCompare } from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const timeCompareOperator: PostProcessingFactory<PostProcessingCompare> =\n  (formData, queryObject) => {\n    const comparisonType = formData.comparison_type;\n    const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n\n    if (\n      isTimeComparison(formData, queryObject) &&\n      comparisonType !== ComparisonType.Values\n    ) {\n      return {\n        operation: 'compare',\n        options: {\n          source_columns: Array.from(metricOffsetMap.values()),\n          compare_columns: Array.from(metricOffsetMap.keys()),\n          compare_type: comparisonType,\n          drop_original_columns: true,\n        },\n      };\n    }\n\n    return undefined;\n  };\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  NumpyFunction,\n  PostProcessingPivot,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const timeComparePivotOperator: PostProcessingFactory<PostProcessingPivot> =\n  (formData, queryObject) => {\n    const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n    const xAxisLabel = getXAxisLabel(formData);\n    const columns = queryObject.series_columns || queryObject.columns;\n\n    if (isTimeComparison(formData, queryObject) && xAxisLabel) {\n      const aggregates = Object.fromEntries(\n        [...metricOffsetMap.values(), ...metricOffsetMap.keys()].map(metric => [\n          metric,\n          // use the 'mean' aggregates to avoid drop NaN\n          { operator: 'mean' as NumpyFunction },\n        ]),\n      );\n\n      return {\n        operation: 'pivot',\n        options: {\n          index: [xAxisLabel],\n          columns: ensureIsArray(columns).map(getColumnLabel),\n          drop_missing_columns: !formData?.show_empty_columns,\n          aggregates,\n        },\n      };\n    }\n\n    return undefined;\n  };\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nexport const TIME_COMPARISON_SEPARATOR = '__';\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { getMetricLabel, ensureIsArray } from '@superset-ui/core';\nimport { PostProcessingFactory } from '../types';\nimport { TIME_COMPARISON_SEPARATOR } from './constants';\n\nexport const getMetricOffsetsMap: PostProcessingFactory<Map<string, string>> = (\n  formData,\n  queryObject,\n) => {\n  /*\n    return metric offset-label and metric-label hashmap, for instance:\n    {\n      \"SUM(value)__1 year ago\": \"SUM(value)\",\n      \"SUM(value)__2 year ago\": \"SUM(value)\"\n    }\n  */\n  const queryMetrics = ensureIsArray(queryObject.metrics);\n  const timeOffsets = ensureIsArray(formData.time_compare);\n\n  const metricLabels = queryMetrics.map(getMetricLabel);\n  const metricOffsetMap = new Map<string, string>();\n  metricLabels.forEach((metric: string) => {\n    timeOffsets.forEach((offset: string) => {\n      metricOffsetMap.set(\n        [metric, offset].join(TIME_COMPARISON_SEPARATOR),\n        metric,\n      );\n    });\n  });\n\n  return metricOffsetMap;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  JsonObject,\n  QueryFormData,\n  ComparisonType,\n} from '@superset-ui/core';\nimport { isString } from 'lodash';\n\nexport const isDerivedSeries = (\n  series: JsonObject,\n  formData: QueryFormData,\n): boolean => {\n  const comparisonType = formData.comparison_type;\n  if (comparisonType !== ComparisonType.Values) {\n    return false;\n  }\n\n  const timeCompare: string[] = ensureIsArray(formData?.time_compare);\n  return isString(series.name)\n    ? !!timeCompare.find(timeOffset => series.name.endsWith(timeOffset))\n    : false;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ComparisonType } from '@superset-ui/core';\nimport { getMetricOffsetsMap } from './getMetricOffsetsMap';\nimport { PostProcessingFactory } from '../types';\n\nexport const isTimeComparison: PostProcessingFactory<boolean> = (\n  formData,\n  queryObject,\n) => {\n  const comparisonType = formData.comparison_type;\n  const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n\n  return (\n    Object.values(ComparisonType).includes(comparisonType) &&\n    metricOffsetMap.size > 0\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, QueryResponse } from '@superset-ui/core';\nimport { Dataset, isColumnMeta, isDataset, isQueryResponse } from '../types';\n\n/**\n * Convert Datasource columns to column choices\n */\nexport default function columnChoices(\n  datasource?: Dataset | QueryResponse | null,\n): [string, string][] {\n  if (isDataset(datasource) && isColumnMeta(datasource.columns[0])) {\n    return datasource.columns\n      .map((col): [string, string] => [\n        col.column_name,\n        col.verbose_name || col.column_name,\n      ])\n      .sort((opt1, opt2) =>\n        opt1[1].toLowerCase() > opt2[1].toLowerCase() ? 1 : -1,\n      );\n  }\n\n  if (isQueryResponse(datasource)) {\n    return ensureIsArray(datasource.columns)\n      .map((col): [string, string] => [col.name, col.name])\n      .sort((opt1, opt2) =>\n        opt1[1].toLowerCase() > opt2[1].toLowerCase() ? 1 : -1,\n      );\n  }\n\n  return [];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport memoizeOne from 'memoize-one';\nimport { addAlpha, DataRecord } from '@superset-ui/core';\nimport {\n  ColorFormatters,\n  COMPARATOR,\n  ConditionalFormattingConfig,\n  MULTIPLE_VALUE_COMPARATORS,\n} from '../types';\n\nexport const round = (num: number, precision = 0) =>\n  Number(`${Math.round(Number(`${num}e+${precision}`))}e-${precision}`);\n\nconst MIN_OPACITY_BOUNDED = 0.05;\nconst MIN_OPACITY_UNBOUNDED = 0;\nconst MAX_OPACITY = 1;\nexport const getOpacity = (\n  value: number,\n  cutoffPoint: number,\n  extremeValue: number,\n  minOpacity = MIN_OPACITY_BOUNDED,\n  maxOpacity = MAX_OPACITY,\n) => {\n  if (extremeValue === cutoffPoint) {\n    return maxOpacity;\n  }\n  return Math.min(\n    maxOpacity,\n    round(\n      Math.abs(\n        ((maxOpacity - minOpacity) / (extremeValue - cutoffPoint)) *\n          (value - cutoffPoint),\n      ) + minOpacity,\n      2,\n    ),\n  );\n};\n\nexport const getColorFunction = (\n  {\n    operator,\n    targetValue,\n    targetValueLeft,\n    targetValueRight,\n    colorScheme,\n  }: ConditionalFormattingConfig,\n  columnValues: number[],\n) => {\n  let minOpacity = MIN_OPACITY_BOUNDED;\n  const maxOpacity = MAX_OPACITY;\n\n  let comparatorFunction: (\n    value: number,\n    allValues: number[],\n  ) => false | { cutoffValue: number; extremeValue: number };\n  if (operator === undefined || colorScheme === undefined) {\n    return () => undefined;\n  }\n  if (\n    MULTIPLE_VALUE_COMPARATORS.includes(operator) &&\n    (targetValueLeft === undefined || targetValueRight === undefined)\n  ) {\n    return () => undefined;\n  }\n  if (\n    operator !== COMPARATOR.NONE &&\n    !MULTIPLE_VALUE_COMPARATORS.includes(operator) &&\n    targetValue === undefined\n  ) {\n    return () => undefined;\n  }\n  switch (operator) {\n    case COMPARATOR.NONE:\n      minOpacity = MIN_OPACITY_UNBOUNDED;\n      comparatorFunction = (value: number, allValues: number[]) => {\n        const cutoffValue = Math.min(...allValues);\n        const extremeValue = Math.max(...allValues);\n        return value >= cutoffValue && value <= extremeValue\n          ? { cutoffValue, extremeValue }\n          : false;\n      };\n      break;\n    case COMPARATOR.GREATER_THAN:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value > targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.max(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.LESS_THAN:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value < targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.min(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.GREATER_OR_EQUAL:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value >= targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.max(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.LESS_OR_EQUAL:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value <= targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.min(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.EQUAL:\n      comparatorFunction = (value: number) =>\n        value === targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: targetValue! }\n          : false;\n      break;\n    case COMPARATOR.NOT_EQUAL:\n      comparatorFunction = (value: number, allValues: number[]) => {\n        if (value === targetValue!) {\n          return false;\n        }\n        const max = Math.max(...allValues);\n        const min = Math.min(...allValues);\n        return {\n          cutoffValue: targetValue!,\n          extremeValue:\n            Math.abs(targetValue! - min) > Math.abs(max - targetValue!)\n              ? min\n              : max,\n        };\n      };\n      break;\n    case COMPARATOR.BETWEEN:\n      comparatorFunction = (value: number) =>\n        value > targetValueLeft! && value < targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    case COMPARATOR.BETWEEN_OR_EQUAL:\n      comparatorFunction = (value: number) =>\n        value >= targetValueLeft! && value <= targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    case COMPARATOR.BETWEEN_OR_LEFT_EQUAL:\n      comparatorFunction = (value: number) =>\n        value >= targetValueLeft! && value < targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    case COMPARATOR.BETWEEN_OR_RIGHT_EQUAL:\n      comparatorFunction = (value: number) =>\n        value > targetValueLeft! && value <= targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    default:\n      comparatorFunction = () => false;\n      break;\n  }\n\n  return (value: number) => {\n    const compareResult = comparatorFunction(value, columnValues);\n    if (compareResult === false) return undefined;\n    const { cutoffValue, extremeValue } = compareResult;\n    return addAlpha(\n      colorScheme,\n      getOpacity(value, cutoffValue, extremeValue, minOpacity, maxOpacity),\n    );\n  };\n};\n\nexport const getColorFormatters = memoizeOne(\n  (\n    columnConfig: ConditionalFormattingConfig[] | undefined,\n    data: DataRecord[],\n  ) =>\n    columnConfig?.reduce(\n      (acc: ColorFormatters, config: ConditionalFormattingConfig) => {\n        if (\n          config?.column !== undefined &&\n          (config?.operator === COMPARATOR.NONE ||\n            (config?.operator !== undefined &&\n              (MULTIPLE_VALUE_COMPARATORS.includes(config?.operator)\n                ? config?.targetValueLeft !== undefined &&\n                  config?.targetValueRight !== undefined\n                : config?.targetValue !== undefined)))\n        ) {\n          acc.push({\n            column: config?.column,\n            getColorFromValue: getColorFunction(\n              config,\n              data.map(row => row[config.column!] as number),\n            ),\n          });\n        }\n        return acc;\n      },\n      [],\n    ) ?? [],\n);\n","/* eslint camelcase: 0 */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DatasourceType } from './Datasource';\nimport { BinaryOperator, SetOperator, UnaryOperator } from './Operator';\nimport { AppliedTimeExtras, TimeRange } from './Time';\nimport { AnnotationLayer } from './AnnotationLayer';\nimport {\n  QueryFields,\n  QueryFormColumn,\n  QueryFormData,\n  QueryFormMetric,\n} from './QueryFormData';\nimport { Maybe } from '../../types';\nimport { PostProcessingRule } from './PostProcessing';\nimport { JsonObject } from '../../connection';\nimport { TimeGranularity } from '../../time-format';\n\nexport type BaseQueryObjectFilterClause = {\n  col: QueryFormColumn;\n  grain?: TimeGranularity;\n  isExtra?: boolean;\n};\n\nexport type BinaryQueryObjectFilterClause = BaseQueryObjectFilterClause & {\n  op: BinaryOperator;\n  val: string | number | boolean;\n  formattedVal?: string;\n};\n\nexport type SetQueryObjectFilterClause = BaseQueryObjectFilterClause & {\n  op: SetOperator;\n  val: (string | number | boolean)[];\n  formattedVal?: string[];\n};\n\nexport type UnaryQueryObjectFilterClause = BaseQueryObjectFilterClause & {\n  op: UnaryOperator;\n  formattedVal?: string;\n};\n\nexport type QueryObjectFilterClause =\n  | BinaryQueryObjectFilterClause\n  | SetQueryObjectFilterClause\n  | UnaryQueryObjectFilterClause;\n\nexport type QueryObjectExtras = Partial<{\n  /** HAVING condition for Druid */\n  /** HAVING condition for SQLAlchemy */\n  having?: string;\n  relative_start?: string;\n  relative_end?: string;\n  time_grain_sqla?: TimeGranularity;\n  /** WHERE condition */\n  where?: string;\n}>;\n\nexport type ResidualQueryObjectData = {\n  [key: string]: unknown;\n};\n\n/**\n * Query object directly compatible with the new chart data API.\n * A stricter version of query form data.\n *\n * All information should be related to generating database queries. Config values\n * for client-side processing and chart rendering should happen in `buildQuery`\n * and `transformProps`.\n */\nexport interface QueryObject\n  extends QueryFields,\n    TimeRange,\n    ResidualQueryObjectData {\n  /**\n   * Definition for annotation layers.\n   */\n  annotation_layers?: AnnotationLayer[];\n\n  /** Time filters that have been applied to the query object */\n  applied_time_extras?: AppliedTimeExtras;\n\n  /** add fetch value predicate to query if defined in datasource */\n  apply_fetch_values_predicate?: boolean;\n\n  /**\n   * Extra form data. Current stores information about time granularity, may be\n   * cleaned up in the future.\n   */\n  extras?: QueryObjectExtras;\n\n  /** SIMPLE where filters */\n  filters?: QueryObjectFilterClause[];\n\n  /** Time column for SQL, time-grain for Druid (deprecated) */\n  granularity?: string;\n\n  /** If set, will group by timestamp */\n  is_timeseries?: boolean;\n\n  /** Should the rowcount of the query be fetched */\n  is_rowcount?: boolean;\n\n  /** Free-form HAVING SQL, multiple clauses are concatenated by AND */\n  having?: string;\n\n  /** SIMPLE having filters */\n  having_filters?: QueryObjectFilterClause[];\n\n  post_processing?: (PostProcessingRule | undefined)[];\n\n  /** Maximum numbers of rows to return */\n  row_limit?: number;\n\n  /** Number of rows to skip */\n  row_offset?: number;\n\n  /** The column to which direct temporal filters (forthcoming) */\n  time_column?: string;\n\n  /** The size of bucket by which to group timeseries data (forthcoming) */\n  time_grain?: string;\n\n  /** Direction to ordered by */\n  order_desc?: boolean;\n\n  url_params?: Record<string, string>;\n\n  custom_params?: JsonObject;\n\n  /** Free-form WHERE SQL: multiple clauses are concatenated by AND */\n  where?: string;\n\n  /** Limit number of series */\n  series_columns?: QueryFormColumn[];\n  series_limit?: number;\n  series_limit_metric?: Maybe<QueryFormMetric>;\n}\n\nexport interface QueryContext {\n  datasource: {\n    id: number;\n    type: DatasourceType;\n  };\n  /** Force refresh of all queries */\n  force: boolean;\n  /** Type of result to return for queries */\n  result_type: string;\n  /** Response format */\n  result_format: string;\n  queries: QueryObject[];\n  form_data?: QueryFormData;\n}\n\nexport const ErrorTypeEnum = {\n  // Frontend errors\n  FRONTEND_CSRF_ERROR: 'FRONTEND_CSRF_ERROR',\n  FRONTEND_NETWORK_ERROR: 'FRONTEND_NETWORK_ERROR',\n  FRONTEND_TIMEOUT_ERROR: 'FRONTEND_TIMEOUT_ERROR',\n\n  // DB Engine errors\n  GENERIC_DB_ENGINE_ERROR: 'GENERIC_DB_ENGINE_ERROR',\n  COLUMN_DOES_NOT_EXIST_ERROR: 'COLUMN_DOES_NOT_EXIST_ERROR',\n  TABLE_DOES_NOT_EXIST_ERROR: 'TABLE_DOES_NOT_EXIST_ERROR',\n  SCHEMA_DOES_NOT_EXIST_ERROR: 'SCHEMA_DOES_NOT_EXIST_ERROR',\n  CONNECTION_INVALID_USERNAME_ERROR: 'CONNECTION_INVALID_USERNAME_ERROR',\n  CONNECTION_INVALID_PASSWORD_ERROR: 'CONNECTION_INVALID_PASSWORD_ERROR',\n  CONNECTION_INVALID_HOSTNAME_ERROR: 'CONNECTION_INVALID_HOSTNAME_ERROR',\n  CONNECTION_PORT_CLOSED_ERROR: 'CONNECTION_PORT_CLOSED_ERROR',\n  CONNECTION_INVALID_PORT_ERROR: 'CONNECTION_INVALID_PORT_ERROR',\n  CONNECTION_HOST_DOWN_ERROR: 'CONNECTION_HOST_DOWN_ERROR',\n  CONNECTION_ACCESS_DENIED_ERROR: 'CONNECTION_ACCESS_DENIED_ERROR',\n  CONNECTION_UNKNOWN_DATABASE_ERROR: 'CONNECTION_UNKNOWN_DATABASE_ERROR',\n  CONNECTION_DATABASE_PERMISSIONS_ERROR:\n    'CONNECTION_DATABASE_PERMISSIONS_ERROR',\n  CONNECTION_MISSING_PARAMETERS_ERRORS: 'CONNECTION_MISSING_PARAMETERS_ERRORS',\n  OBJECT_DOES_NOT_EXIST_ERROR: 'OBJECT_DOES_NOT_EXIST_ERROR',\n  SYNTAX_ERROR: 'SYNTAX_ERROR',\n\n  // Viz errors\n  VIZ_GET_DF_ERROR: 'VIZ_GET_DF_ERROR',\n  UNKNOWN_DATASOURCE_TYPE_ERROR: 'UNKNOWN_DATASOURCE_TYPE_ERROR',\n  FAILED_FETCHING_DATASOURCE_INFO_ERROR:\n    'FAILED_FETCHING_DATASOURCE_INFO_ERROR',\n\n  // Security access errors\n  TABLE_SECURITY_ACCESS_ERROR: 'TABLE_SECURITY_ACCESS_ERROR',\n  DATASOURCE_SECURITY_ACCESS_ERROR: 'DATASOURCE_SECURITY_ACCESS_ERROR',\n  DATABASE_SECURITY_ACCESS_ERROR: 'DATABASE_SECURITY_ACCESS_ERROR',\n  QUERY_SECURITY_ACCESS_ERROR: 'QUERY_SECURITY_ACCESS_ERROR',\n  MISSING_OWNERSHIP_ERROR: 'MISSING_OWNERSHIP_ERROR',\n\n  // Other errors\n  BACKEND_TIMEOUT_ERROR: 'BACKEND_TIMEOUT_ERROR',\n  DATABASE_NOT_FOUND_ERROR: 'DATABASE_NOT_FOUND_ERROR',\n\n  // Sqllab error\n  MISSING_TEMPLATE_PARAMS_ERROR: 'MISSING_TEMPLATE_PARAMS_ERROR',\n  INVALID_TEMPLATE_PARAMS_ERROR: 'INVALID_TEMPLATE_PARAMS_ERROR',\n  RESULTS_BACKEND_NOT_CONFIGURED_ERROR: 'RESULTS_BACKEND_NOT_CONFIGURED_ERROR',\n  DML_NOT_ALLOWED_ERROR: 'DML_NOT_ALLOWED_ERROR',\n  INVALID_CTAS_QUERY_ERROR: 'INVALID_CTAS_QUERY_ERROR',\n  INVALID_CVAS_QUERY_ERROR: 'INVALID_CVAS_QUERY_ERROR',\n  SQLLAB_TIMEOUT_ERROR: 'SQLLAB_TIMEOUT_ERROR',\n  RESULTS_BACKEND_ERROR: 'RESULTS_BACKEND_ERROR',\n  ASYNC_WORKERS_ERROR: 'ASYNC_WORKERS_ERROR',\n\n  // Generic errors\n  GENERIC_COMMAND_ERROR: 'GENERIC_COMMAND_ERROR',\n  GENERIC_BACKEND_ERROR: 'GENERIC_BACKEND_ERROR',\n\n  // API errors\n  INVALID_PAYLOAD_FORMAT_ERROR: 'INVALID_PAYLOAD_FORMAT_ERROR',\n  INVALID_PAYLOAD_SCHEMA_ERROR: 'INVALID_PAYLOAD_SCHEMA_ERROR',\n} as const;\n\ntype ValueOf<T> = T[keyof T];\n\nexport type ErrorType = ValueOf<typeof ErrorTypeEnum>;\n\n// Keep in sync with superset/views/errors.py\nexport type ErrorLevel = 'info' | 'warning' | 'error';\n\nexport type ErrorSource = 'dashboard' | 'explore' | 'sqllab';\n\nexport type SupersetError<ExtraType = Record<string, any> | null> = {\n  error_type: ErrorType;\n  extra: ExtraType;\n  level: ErrorLevel;\n  message: string;\n};\n\nexport const CtasEnum = {\n  TABLE: 'TABLE',\n  VIEW: 'VIEW',\n};\n\nexport type QueryColumn = {\n  name: string;\n  column_name?: string;\n  type: string | null;\n  is_dttm: boolean;\n};\n\n// Possible states of a query object for processing on the server\nexport enum QueryState {\n  STARTED = 'started',\n  STOPPED = 'stopped',\n  FAILED = 'failed',\n  PENDING = 'pending',\n  RUNNING = 'running',\n  SCHEDULED = 'scheduled',\n  SUCCESS = 'success',\n  FETCHING = 'fetching',\n  TIMED_OUT = 'timed_out',\n}\n\n// Inidcates a Query's state is still processing\nexport const runningQueryStateList: QueryState[] = [\n  QueryState.RUNNING,\n  QueryState.STARTED,\n  QueryState.PENDING,\n  QueryState.FETCHING,\n  QueryState.SCHEDULED,\n];\n\n// Indicates a Query's state has completed processing regardless of success / failure\nexport const concludedQueryStateList: QueryState[] = [\n  QueryState.STOPPED,\n  QueryState.FAILED,\n  QueryState.SUCCESS,\n  QueryState.TIMED_OUT,\n];\n\nexport type Query = {\n  cached: boolean;\n  ctas: boolean;\n  ctas_method?: keyof typeof CtasEnum;\n  dbId: number;\n  errors?: SupersetError[];\n  errorMessage: string | null;\n  extra: {\n    progress: string | null;\n    errors?: SupersetError[];\n  };\n  id: string;\n  isDataPreview: boolean;\n  link?: string;\n  progress: number;\n  resultsKey: string | null;\n  schema?: string;\n  sql: string;\n  sqlEditorId: string;\n  state: QueryState;\n  tab: string | null;\n  tempSchema: string | null;\n  tempTable: string;\n  trackingUrl: string | null;\n  templateParams: any;\n  rows: number;\n  queryLimit: number;\n  limitingFactor: string;\n  endDttm: number;\n  duration: string;\n  startDttm: number;\n  time: Record<string, any>;\n  user: Record<string, any>;\n  userId: number;\n  db: Record<string, any>;\n  started: string;\n  querylink: Record<string, any>;\n  queryId: number;\n  executedSql: string;\n  output: string | Record<string, any>;\n  actions: Record<string, any>;\n  type: DatasourceType;\n  columns: QueryColumn[];\n};\n\nexport type QueryResults = {\n  results: {\n    displayLimitReached: boolean;\n    columns: QueryColumn[];\n    data: Record<string, unknown>[];\n    expanded_columns: QueryColumn[];\n    selected_columns: QueryColumn[];\n    query: { limit: number };\n    query_id?: number;\n  };\n};\n\nexport type QueryResponse = Query & QueryResults;\n\n// todo: move out from typing\nexport const testQuery: Query = {\n  id: 'clientId2353',\n  dbId: 1,\n  sql: 'SELECT * FROM something',\n  sqlEditorId: 'dfsadfs',\n  tab: 'unimportant',\n  tempTable: '',\n  ctas: false,\n  cached: false,\n  errorMessage: null,\n  extra: { progress: null },\n  isDataPreview: false,\n  progress: 0,\n  resultsKey: null,\n  state: QueryState.SUCCESS,\n  tempSchema: null,\n  trackingUrl: null,\n  templateParams: null,\n  rows: 42,\n  queryLimit: 100,\n  limitingFactor: '',\n  endDttm: 1476910579693,\n  duration: '',\n  startDttm: 1476910566092.96,\n  time: {},\n  user: {},\n  userId: 1,\n  db: {},\n  started: '',\n  querylink: {},\n  queryId: 1,\n  executedSql: '',\n  output: '',\n  actions: {},\n  type: DatasourceType.Query,\n  columns: [\n    {\n      name: 'Column 1',\n      type: 'STRING',\n      is_dttm: false,\n    },\n    {\n      name: 'Column 3',\n      type: 'STRING',\n      is_dttm: false,\n    },\n    {\n      name: 'Column 2',\n      type: 'TIMESTAMP',\n      is_dttm: true,\n    },\n  ],\n};\n\nexport const testQueryResults = {\n  results: {\n    displayLimitReached: false,\n    columns: [\n      {\n        name: 'Column 1',\n        type: 'STRING',\n        is_dttm: false,\n      },\n      {\n        name: 'Column 3',\n        type: 'STRING',\n        is_dttm: false,\n      },\n      {\n        name: 'Column 2',\n        type: 'TIMESTAMP',\n        is_dttm: true,\n      },\n    ],\n    data: [\n      { 'Column 1': 'a', 'Column 2': 'b', 'Column 3': '2014-11-11T00:00:00' },\n    ],\n    expanded_columns: [],\n    selected_columns: [\n      {\n        name: 'Column 1',\n        type: 'STRING',\n        is_dttm: false,\n      },\n      {\n        name: 'Column 3',\n        type: 'STRING',\n        is_dttm: false,\n      },\n      {\n        name: 'Column 2',\n        type: 'TIMESTAMP',\n        is_dttm: true,\n      },\n    ],\n    query: { limit: 6 },\n  },\n};\n\nexport const testQueryResponse = { ...testQuery, ...testQueryResults };\n\nexport enum ContributionType {\n  Row = 'row',\n  Column = 'column',\n}\n\nexport type DatasourceSamplesQuery = {\n  filters?: QueryObjectFilterClause[];\n};\n\nexport default {};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport default function ensureIsInt<T>(\n  value: T,\n  defaultValue?: number,\n): number {\n  const val = parseInt(String(value), 10);\n  const defaultOrNaN = defaultValue === undefined ? NaN : defaultValue;\n  return Number.isNaN(val) ? defaultOrNaN : val;\n}\n"],"names":["baseTimeSection","label","t","expanded","description","legacyTimeseriesTime","controlSetRows","genericTime","hasGenericChartAxes","legacyRegularTime","datasourceAndVizType","name","config","type","hidden","colorScheme","annotations","tabOverride","default","renderTrigger","advancedAnalyticsControls","className","choices","concat","formatSelectOptions","Object","values","RollingType","isInt","visibility","controls","rollingTypeControlName","endsWith","Boolean","value","multi","freeForm","ComparisonType","annotationLayers","annotationsAndLayersControls","FORECAST_DEFAULT_DATA","forecastEnabled","forecastInterval","forecastPeriods","forecastSeasonalityDaily","forecastSeasonalityWeekly","forecastSeasonalityYearly","forecastIntervalControls","validators","legacyValidateInteger","legacyValidateNumber","TITLE_MARGIN_OPTIONS","TITLE_POSITION_OPTIONS","titleControls","clearable","contributionModeControl","ContributionType","xAxisSortVisibility","isDefined","x_axis","isTemporalColumn","getColumnLabel","datasource","Array","isArray","groupby","length","xAxisSortControl","shouldMapStateToProps","prevState","state","prevOptions","ensureIsArray","metrics","map","metric","getMetricLabel","currOptions","isEqualArray","mapStateToProps","controlState","filter","shouldReset","options","entry","xAxisSortAscControl","controlsWithoutXAxis","echartsTimeSeriesQuery","echartsTimeSeriesQueryWithXAxisSort","mainMetric","savedMetrics","forEach","m","metric_name","TestDataset","column_format","columns","advanced_data_type","undefined","certification_details","certified_by","column_name","expression","filterable","id","is_certified","is_dttm","python_date_format","type_generic","verbose_name","warning_markdown","datasource_name","granularity_sqla","main_dttm_col","d3format","warning_text","order_by_choices","owners","first_name","last_name","username","DatasourceType","uid","verbose_map","sections","sectionsModule","PERCENTILE_REGEX","boxplotOperator","formData","queryObject","whiskerOptions","whiskerType","percentiles","percentileMatch","exec","Error","parseInt","operation","whisker_type","contributionOperator","contributionMode","orientation","flattenOperator","pivotOperator","metricLabels","xAxisLabel","getXAxisLabel","series_columns","index","aggregates","fromEntries","operator","drop_missing_columns","show_empty_columns","prophetOperator","time_grain","time_grain_sqla","periods","confidence_interval","parseFloat","yearly_seasonality","weekly_seasonality","daily_seasonality","renameOperator","truncate_metric","isTimeComparison","comparison_type","renamePairs","metricOffsetMap","getMetricOffsetsMap","timeOffsets","time_compare","keys","metricWithOffset","offsetLabel","find","offset","push","level","inplace","resampleOperator","resampleZeroFill","resample_method","resampleMethod","resampleRule","resample_rule","method","rule","fill_value","rollingWindowOperator","metricsMap","from","columnsMap","col","rolling_type","window","ensureIsInt","rolling_periods","min_periods","sortOperator","sortableLabels","x_axis_sort","x_axis_sort_asc","is_sort_index","ascending","by","timeCompareOperator","comparisonType","source_columns","compare_columns","compare_type","drop_original_columns","timeComparePivotOperator","TIME_COMPARISON_SEPARATOR","queryMetrics","Map","set","join","isDerivedSeries","series","timeCompare","timeOffset","size","columnChoices","isDataset","isColumnMeta","sort","opt1","opt2","toLowerCase","isQueryResponse","round","num","precision","Number","Math","getOpacity","cutoffPoint","extremeValue","minOpacity","maxOpacity","min","abs","getColorFunction","columnValues","comparatorFunction","targetValue","targetValueLeft","targetValueRight","COMPARATOR","allValues","cutoffValue","max","compareResult","addAlpha","getColorFormatters","memoizeOne","columnConfig","data","reduce","acc","column","getColorFromValue","row","ErrorTypeEnum","FRONTEND_CSRF_ERROR","FRONTEND_NETWORK_ERROR","FRONTEND_TIMEOUT_ERROR","GENERIC_DB_ENGINE_ERROR","COLUMN_DOES_NOT_EXIST_ERROR","TABLE_DOES_NOT_EXIST_ERROR","SCHEMA_DOES_NOT_EXIST_ERROR","CONNECTION_INVALID_USERNAME_ERROR","CONNECTION_INVALID_PASSWORD_ERROR","CONNECTION_INVALID_HOSTNAME_ERROR","CONNECTION_PORT_CLOSED_ERROR","CONNECTION_INVALID_PORT_ERROR","CONNECTION_HOST_DOWN_ERROR","CONNECTION_ACCESS_DENIED_ERROR","CONNECTION_UNKNOWN_DATABASE_ERROR","CONNECTION_DATABASE_PERMISSIONS_ERROR","CONNECTION_MISSING_PARAMETERS_ERRORS","OBJECT_DOES_NOT_EXIST_ERROR","SYNTAX_ERROR","VIZ_GET_DF_ERROR","UNKNOWN_DATASOURCE_TYPE_ERROR","FAILED_FETCHING_DATASOURCE_INFO_ERROR","TABLE_SECURITY_ACCESS_ERROR","DATASOURCE_SECURITY_ACCESS_ERROR","DATABASE_SECURITY_ACCESS_ERROR","QUERY_SECURITY_ACCESS_ERROR","MISSING_OWNERSHIP_ERROR","BACKEND_TIMEOUT_ERROR","DATABASE_NOT_FOUND_ERROR","MISSING_TEMPLATE_PARAMS_ERROR","INVALID_TEMPLATE_PARAMS_ERROR","RESULTS_BACKEND_NOT_CONFIGURED_ERROR","DML_NOT_ALLOWED_ERROR","INVALID_CTAS_QUERY_ERROR","INVALID_CVAS_QUERY_ERROR","SQLLAB_TIMEOUT_ERROR","RESULTS_BACKEND_ERROR","ASYNC_WORKERS_ERROR","GENERIC_COMMAND_ERROR","GENERIC_BACKEND_ERROR","INVALID_PAYLOAD_FORMAT_ERROR","INVALID_PAYLOAD_SCHEMA_ERROR","CtasEnum","TABLE","VIEW","QueryState","runningQueryStateList","RUNNING","STARTED","PENDING","FETCHING","SCHEDULED","concludedQueryStateList","STOPPED","FAILED","SUCCESS","TIMED_OUT","testQuery","dbId","sql","sqlEditorId","tab","tempTable","ctas","cached","errorMessage","extra","progress","isDataPreview","resultsKey","tempSchema","trackingUrl","templateParams","rows","queryLimit","limitingFactor","endDttm","duration","startDttm","time","user","userId","db","started","querylink","queryId","executedSql","output","actions","testQueryResults","results","displayLimitReached","expanded_columns","selected_columns","query","limit","testQueryResponse","defaultValue","val","String","defaultOrNaN","NaN","isNaN"],"sourceRoot":""}