{"version":3,"file":"29da2bf2c8e41938e71e.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/CardCollection.tsx","webpack://superset/./src/components/ListView/utils.ts","webpack://superset/./src/components/ListView/Filters/Search.tsx","webpack://superset/./src/components/ListView/Filters/Base.ts","webpack://superset/./src/components/ListView/Filters/Select.tsx","webpack://superset/./src/components/ListView/Filters/DateRange.tsx","webpack://superset/./src/components/ListView/Filters/index.tsx","webpack://superset/./src/components/ListView/CardSortSelect.tsx","webpack://superset/./src/components/ListView/ListView.tsx","webpack://superset/./src/components/ListView/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { TableInstance, Row } from 'react-table';\nimport { styled } from '@superset-ui/core';\nimport cx from 'classnames';\n\ninterface CardCollectionProps {\n  bulkSelectEnabled?: boolean;\n  loading: boolean;\n  prepareRow: TableInstance['prepareRow'];\n  renderCard?: (row: any) => React.ReactNode;\n  rows: TableInstance['rows'];\n  showThumbnails?: boolean;\n}\n\nconst CardContainer = styled.div<{ showThumbnails?: boolean }>`\n  ${({ theme, showThumbnails }) => `\n    display: grid;\n    grid-gap: ${theme.gridUnit * 12}px ${theme.gridUnit * 4}px;\n    grid-template-columns: repeat(auto-fit, 300px);\n    margin-top: ${theme.gridUnit * -6}px;\n    padding: ${\n      showThumbnails\n        ? `${theme.gridUnit * 8 + 3}px ${theme.gridUnit * 9}px`\n        : `${theme.gridUnit * 8 + 1}px ${theme.gridUnit * 9}px`\n    };\n  `}\n`;\n\nconst CardWrapper = styled.div`\n  border: 2px solid transparent;\n  &.card-selected {\n    border: 2px solid ${({ theme }) => theme.colors.primary.base};\n  }\n  &.bulk-select {\n    cursor: pointer;\n  }\n`;\n\nexport default function CardCollection({\n  bulkSelectEnabled,\n  loading,\n  prepareRow,\n  renderCard,\n  rows,\n  showThumbnails,\n}: CardCollectionProps) {\n  function handleClick(\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    toggleRowSelected: Row['toggleRowSelected'],\n  ) {\n    if (bulkSelectEnabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      toggleRowSelected();\n    }\n  }\n\n  if (!renderCard) return null;\n  return (\n    <CardContainer showThumbnails={showThumbnails}>\n      {loading &&\n        rows.length === 0 &&\n        [...new Array(25)].map((e, i) => (\n          <div key={i}>{renderCard({ loading })}</div>\n        ))}\n      {rows.length > 0 &&\n        rows.map(row => {\n          if (!renderCard) return null;\n          prepareRow(row);\n          return (\n            <CardWrapper\n              className={cx({\n                'card-selected': bulkSelectEnabled && row.isSelected,\n                'bulk-select': bulkSelectEnabled,\n              })}\n              key={row.id}\n              onClick={e => handleClick(e, row.toggleRowSelected)}\n              role=\"none\"\n            >\n              {renderCard({ ...row.original, loading })}\n            </CardWrapper>\n          );\n        })}\n    </CardContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useMemo, useState } from 'react';\nimport {\n  useFilters,\n  usePagination,\n  useRowSelect,\n  useRowState,\n  useSortBy,\n  useTable,\n} from 'react-table';\n\nimport {\n  NumberParam,\n  StringParam,\n  useQueryParams,\n  QueryParamConfig,\n} from 'use-query-params';\n\nimport rison from 'rison';\nimport { isEqual } from 'lodash';\nimport { PartialStylesConfig } from 'src/components/DeprecatedSelect';\nimport {\n  FetchDataConfig,\n  Filter,\n  FilterValue,\n  InternalFilter,\n  SortColumn,\n  ViewModeType,\n} from './types';\n\n// Define custom RisonParam for proper encoding/decoding; note that\n// %, &, +, and # must be encoded to avoid breaking the url\nconst RisonParam: QueryParamConfig<string, any> = {\n  encode: (data?: any | null) =>\n    data === undefined\n      ? undefined\n      : rison\n          .encode(data)\n          .replace(/%/g, '%25')\n          .replace(/&/g, '%26')\n          .replace(/\\+/g, '%2B')\n          .replace(/#/g, '%23'),\n  decode: (dataStr?: string | string[]) =>\n    dataStr === undefined || Array.isArray(dataStr)\n      ? undefined\n      : rison.decode(dataStr),\n};\n\nexport const SELECT_WIDTH = 200;\n\nexport class ListViewError extends Error {\n  name = 'ListViewError';\n}\n\n// removes element from a list, returns new list\nexport function removeFromList(list: any[], index: number): any[] {\n  return list.filter((_, i) => index !== i);\n}\n\n// apply update to elements of object list, returns new list\nfunction updateInList(list: any[], index: number, update: any): any[] {\n  const element = list.find((_, i) => index === i);\n\n  return [\n    ...list.slice(0, index),\n    { ...element, ...update },\n    ...list.slice(index + 1),\n  ];\n}\n\ntype QueryFilterState = {\n  [id: string]: FilterValue['value'];\n};\n\nfunction mergeCreateFilterValues(list: Filter[], updateObj: QueryFilterState) {\n  return list.map(({ id, urlDisplay, operator }) => {\n    const currentFilterId = urlDisplay || id;\n    const update = updateObj[currentFilterId];\n\n    return { id, urlDisplay, operator, value: update };\n  });\n}\n\n// convert filters from UI objects to data objects\nexport function convertFilters(fts: InternalFilter[]): FilterValue[] {\n  return fts\n    .filter(\n      f =>\n        !(\n          typeof f.value === 'undefined' ||\n          (Array.isArray(f.value) && !f.value.length)\n        ),\n    )\n    .map(({ value, operator, id }) => {\n      // handle between filter using 2 api filters\n      if (operator === 'between' && Array.isArray(value)) {\n        return [\n          {\n            value: value[0],\n            operator: 'gt',\n            id,\n          },\n          {\n            value: value[1],\n            operator: 'lt',\n            id,\n          },\n        ];\n      }\n      return {\n        value,\n        operator,\n        id,\n      };\n    })\n    .flat();\n}\n\n// convertFilters but to handle new decoded rison format\nexport function convertFiltersRison(\n  filterObj: any,\n  list: Filter[],\n): FilterValue[] {\n  const filters: FilterValue[] = [];\n  const refs = {};\n\n  Object.keys(filterObj).forEach(id => {\n    const filter: FilterValue = {\n      id,\n      value: filterObj[id],\n      // operator: filterObj[id][1], // TODO: can probably get rid of this\n    };\n\n    refs[id] = filter;\n    filters.push(filter);\n  });\n\n  // Add operators from filter list\n  list.forEach(value => {\n    const currentFilterId = value.urlDisplay || value.id;\n    const filter = refs[currentFilterId];\n\n    if (filter) {\n      filter.operator = value.operator;\n      filter.id = value.id;\n    }\n  });\n\n  return filters;\n}\n\nexport function extractInputValue(inputType: Filter['input'], event: any) {\n  if (!inputType || inputType === 'text') {\n    return event.currentTarget.value;\n  }\n  if (inputType === 'checkbox') {\n    return event.currentTarget.checked;\n  }\n\n  return null;\n}\n\ninterface UseListViewConfig {\n  fetchData: (conf: FetchDataConfig) => any;\n  columns: any[];\n  data: any[];\n  count: number;\n  initialPageSize: number;\n  initialSort?: SortColumn[];\n  bulkSelectMode?: boolean;\n  initialFilters?: Filter[];\n  bulkSelectColumnConfig?: {\n    id: string;\n    Header: (conf: any) => React.ReactNode;\n    Cell: (conf: any) => React.ReactNode;\n  };\n  renderCard?: boolean;\n  defaultViewMode?: ViewModeType;\n}\n\nexport function useListViewState({\n  fetchData,\n  columns,\n  data,\n  count,\n  initialPageSize,\n  initialFilters = [],\n  initialSort = [],\n  bulkSelectMode = false,\n  bulkSelectColumnConfig,\n  renderCard = false,\n  defaultViewMode = 'card',\n}: UseListViewConfig) {\n  const [query, setQuery] = useQueryParams({\n    filters: RisonParam,\n    pageIndex: NumberParam,\n    sortColumn: StringParam,\n    sortOrder: StringParam,\n    viewMode: StringParam,\n  });\n\n  const initialSortBy = useMemo(\n    () =>\n      query.sortColumn && query.sortOrder\n        ? [{ id: query.sortColumn, desc: query.sortOrder === 'desc' }]\n        : initialSort,\n    [query.sortColumn, query.sortOrder],\n  );\n\n  const initialState = {\n    filters: query.filters\n      ? convertFiltersRison(query.filters, initialFilters)\n      : [],\n    pageIndex: query.pageIndex || 0,\n    pageSize: initialPageSize,\n    sortBy: initialSortBy,\n  };\n\n  const [viewMode, setViewMode] = useState<ViewModeType>(\n    (query.viewMode as ViewModeType) ||\n      (renderCard ? defaultViewMode : 'table'),\n  );\n\n  const columnsWithSelect = useMemo(() => {\n    // add exact filter type so filters with falsey values are not filtered out\n    const columnsWithFilter = columns.map(f => ({ ...f, filter: 'exact' }));\n    return bulkSelectMode\n      ? [bulkSelectColumnConfig, ...columnsWithFilter]\n      : columnsWithFilter;\n  }, [bulkSelectMode, columns]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    setAllFilters,\n    selectedFlatRows,\n    toggleAllRowsSelected,\n    state: { pageIndex, pageSize, sortBy, filters },\n  } = useTable(\n    {\n      columns: columnsWithSelect,\n      count,\n      data,\n      disableFilters: true,\n      disableSortRemove: true,\n      initialState,\n      manualFilters: true,\n      manualPagination: true,\n      manualSortBy: true,\n      autoResetFilters: false,\n      pageCount: Math.ceil(count / initialPageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n    useRowState,\n    useRowSelect,\n  );\n\n  const [internalFilters, setInternalFilters] = useState<InternalFilter[]>(\n    query.filters && initialFilters.length\n      ? mergeCreateFilterValues(initialFilters, query.filters)\n      : [],\n  );\n\n  useEffect(() => {\n    if (initialFilters.length) {\n      setInternalFilters(\n        mergeCreateFilterValues(\n          initialFilters,\n          query.filters ? query.filters : {},\n        ),\n      );\n    }\n  }, [initialFilters]);\n\n  useEffect(() => {\n    // From internalFilters, produce a simplified obj\n    const filterObj = {};\n\n    internalFilters.forEach(filter => {\n      if (\n        filter.value !== undefined &&\n        (typeof filter.value !== 'string' || filter.value.length > 0)\n      ) {\n        const currentFilterId = filter.urlDisplay || filter.id;\n        filterObj[currentFilterId] = filter.value;\n      }\n    });\n\n    const queryParams: any = {\n      filters: Object.keys(filterObj).length ? filterObj : undefined,\n      pageIndex,\n    };\n    if (sortBy[0]) {\n      queryParams.sortColumn = sortBy[0].id;\n      queryParams.sortOrder = sortBy[0].desc ? 'desc' : 'asc';\n    }\n\n    if (renderCard) {\n      queryParams.viewMode = viewMode;\n    }\n\n    const method =\n      typeof query.pageIndex !== 'undefined' &&\n      queryParams.pageIndex !== query.pageIndex\n        ? 'push'\n        : 'replace';\n\n    setQuery(queryParams, method);\n\n    fetchData({ pageIndex, pageSize, sortBy, filters });\n  }, [fetchData, pageIndex, pageSize, sortBy, filters]);\n\n  useEffect(() => {\n    if (!isEqual(initialState.pageIndex, pageIndex)) {\n      gotoPage(initialState.pageIndex);\n    }\n  }, [query]);\n\n  const applyFilterValue = (index: number, value: any) => {\n    setInternalFilters(currentInternalFilters => {\n      // skip redundant updates\n      if (currentInternalFilters[index].value === value) {\n        return currentInternalFilters;\n      }\n\n      const update = { ...currentInternalFilters[index], value };\n      const updatedFilters = updateInList(\n        currentInternalFilters,\n        index,\n        update,\n      );\n\n      setAllFilters(convertFilters(updatedFilters));\n      gotoPage(0); // clear pagination on filter\n      return updatedFilters;\n    });\n  };\n\n  return {\n    canNextPage,\n    canPreviousPage,\n    getTableBodyProps,\n    getTableProps,\n    gotoPage,\n    headerGroups,\n    pageCount,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n    setAllFilters,\n    state: { pageIndex, pageSize, sortBy, filters, internalFilters, viewMode },\n    toggleAllRowsSelected,\n    applyFilterValue,\n    setViewMode,\n    query,\n  };\n}\n\nexport const filterSelectStyles: PartialStylesConfig = {\n  container: (provider, { getValue }) => ({\n    ...provider,\n    // dynamic width based on label string length\n    minWidth: `${Math.min(\n      12,\n      Math.max(5, 3 + getValue()[0].label.length / 2),\n    )}em`,\n  }),\n  control: provider => ({\n    ...provider,\n    borderWidth: 0,\n    boxShadow: 'none',\n    cursor: 'pointer',\n    backgroundColor: 'transparent',\n  }),\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { AntdInput } from 'src/components';\nimport { SELECT_WIDTH } from 'src/components/ListView/utils';\nimport { FormLabel } from 'src/components/Form';\nimport { BaseFilter, FilterHandler } from './Base';\n\ninterface SearchHeaderProps extends BaseFilter {\n  Header: string;\n  onSubmit: (val: string) => void;\n  name: string;\n}\n\nconst Container = styled.div`\n  width: ${SELECT_WIDTH}px;\n`;\n\nconst SearchIcon = styled(Icons.Search)`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n`;\n\nconst StyledInput = styled(AntdInput)`\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n`;\n\nfunction SearchFilter(\n  { Header, name, initialValue, onSubmit }: SearchHeaderProps,\n  ref: React.RefObject<FilterHandler>,\n) {\n  const [value, setValue] = useState(initialValue || '');\n  const handleSubmit = () => {\n    if (value) {\n      onSubmit(value.trim());\n    }\n  };\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.currentTarget.value);\n    if (e.currentTarget.value === '') {\n      onSubmit('');\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    clearFilter: () => {\n      setValue('');\n      onSubmit('');\n    },\n  }));\n\n  return (\n    <Container>\n      <FormLabel>{Header}</FormLabel>\n      <StyledInput\n        allowClear\n        data-test=\"filters-search\"\n        placeholder={t('Type a value')}\n        name={name}\n        value={value}\n        onChange={handleChange}\n        onPressEnter={handleSubmit}\n        onBlur={handleSubmit}\n        prefix={<SearchIcon iconSize=\"l\" />}\n      />\n    </Container>\n  );\n}\n\nexport default forwardRef(SearchFilter);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { SELECT_WIDTH } from 'src/components/ListView/utils';\n\nexport interface BaseFilter {\n  Header: ReactNode;\n  initialValue: any;\n}\n\nexport const FilterContainer = styled.div`\n  display: inline-flex;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  align-items: center;\n  width: ${SELECT_WIDTH}px;\n`;\n\nexport type FilterHandler = {\n  clearFilter: () => void;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useState,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { Filter, SelectOption } from 'src/components/ListView/types';\nimport { FormLabel } from 'src/components/Form';\nimport AsyncSelect from 'src/components/Select/AsyncSelect';\nimport { FilterContainer, BaseFilter, FilterHandler } from './Base';\n\ninterface SelectFilterProps extends BaseFilter {\n  fetchSelects?: Filter['fetchSelects'];\n  name?: string;\n  onSelect: (selected: SelectOption | undefined, isClear?: boolean) => void;\n  paginate?: boolean;\n  selects: Filter['selects'];\n}\n\nfunction SelectFilter(\n  {\n    Header,\n    name,\n    fetchSelects,\n    initialValue,\n    onSelect,\n    selects = [],\n  }: SelectFilterProps,\n  ref: React.RefObject<FilterHandler>,\n) {\n  const [selectedOption, setSelectedOption] = useState(initialValue);\n\n  const onChange = (selected: SelectOption) => {\n    onSelect(\n      selected ? { label: selected.label, value: selected.value } : undefined,\n    );\n    setSelectedOption(selected);\n  };\n\n  const onClear = () => {\n    onSelect(undefined, true);\n    setSelectedOption(undefined);\n  };\n\n  useImperativeHandle(ref, () => ({\n    clearFilter: () => {\n      onClear();\n    },\n  }));\n\n  const fetchAndFormatSelects = useMemo(\n    () => async (inputValue: string, page: number, pageSize: number) => {\n      if (fetchSelects) {\n        const selectValues = await fetchSelects(inputValue, page, pageSize);\n        return {\n          data: selectValues.data,\n          totalCount: selectValues.totalCount,\n        };\n      }\n      return {\n        data: [],\n        totalCount: 0,\n      };\n    },\n    [fetchSelects],\n  );\n\n  return (\n    <FilterContainer>\n      {fetchSelects ? (\n        <AsyncSelect\n          allowClear\n          ariaLabel={typeof Header === 'string' ? Header : name || t('Filter')}\n          data-test=\"filters-select\"\n          header={<FormLabel>{Header}</FormLabel>}\n          onChange={onChange}\n          onClear={onClear}\n          options={fetchAndFormatSelects}\n          placeholder={t('Select or type a value')}\n          showSearch\n          value={selectedOption}\n        />\n      ) : (\n        <Select\n          allowClear\n          ariaLabel={typeof Header === 'string' ? Header : name || t('Filter')}\n          data-test=\"filters-select\"\n          header={<FormLabel>{Header}</FormLabel>}\n          labelInValue\n          onChange={onChange}\n          onClear={onClear}\n          options={selects}\n          placeholder={t('Select or type a value')}\n          showSearch\n          value={selectedOption}\n        />\n      )}\n    </FilterContainer>\n  );\n}\nexport default forwardRef(SelectFilter);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useState,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport moment, { Moment } from 'moment';\nimport { styled, t } from '@superset-ui/core';\nimport { RangePicker } from 'src/components/DatePicker';\nimport { FormLabel } from 'src/components/Form';\nimport { BaseFilter, FilterHandler } from './Base';\n\ninterface DateRangeFilterProps extends BaseFilter {\n  onSubmit: (val: number[]) => void;\n  name: string;\n}\n\ntype ValueState = [number, number];\n\nconst RangeFilterContainer = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 360px;\n`;\n\nfunction DateRangeFilter(\n  { Header, initialValue, onSubmit }: DateRangeFilterProps,\n  ref: React.RefObject<FilterHandler>,\n) {\n  const [value, setValue] = useState<ValueState | null>(initialValue ?? null);\n  const momentValue = useMemo((): [Moment, Moment] | null => {\n    if (!value || (Array.isArray(value) && !value.length)) return null;\n    return [moment(value[0]), moment(value[1])];\n  }, [value]);\n\n  useImperativeHandle(ref, () => ({\n    clearFilter: () => {\n      setValue(null);\n      onSubmit([]);\n    },\n  }));\n\n  return (\n    <RangeFilterContainer>\n      <FormLabel>{Header}</FormLabel>\n      <RangePicker\n        placeholder={[t('Start date'), t('End date')]}\n        showTime\n        value={momentValue}\n        onChange={momentRange => {\n          if (!momentRange) {\n            setValue(null);\n            onSubmit([]);\n            return;\n          }\n          const changeValue = [\n            momentRange[0]?.valueOf() ?? 0,\n            momentRange[1]?.valueOf() ?? 0,\n          ] as ValueState;\n          setValue(changeValue);\n          onSubmit(changeValue);\n        }}\n      />\n    </RangeFilterContainer>\n  );\n}\n\nexport default forwardRef(DateRangeFilter);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  createRef,\n  forwardRef,\n  useImperativeHandle,\n  useMemo,\n} from 'react';\nimport { withTheme } from '@superset-ui/core';\n\nimport {\n  FilterValue,\n  Filters,\n  InternalFilter,\n  SelectOption,\n} from 'src/components/ListView/types';\nimport SearchFilter from './Search';\nimport SelectFilter from './Select';\nimport DateRangeFilter from './DateRange';\nimport { FilterHandler } from './Base';\n\ninterface UIFiltersProps {\n  filters: Filters;\n  internalFilters: InternalFilter[];\n  updateFilterValue: (id: number, value: FilterValue['value']) => void;\n}\n\nfunction UIFilters(\n  { filters, internalFilters = [], updateFilterValue }: UIFiltersProps,\n  ref: React.RefObject<{ clearFilters: () => void }>,\n) {\n  const filterRefs = useMemo(\n    () =>\n      Array.from({ length: filters.length }, () => createRef<FilterHandler>()),\n    [filters.length],\n  );\n\n  useImperativeHandle(ref, () => ({\n    clearFilters: () => {\n      filterRefs.forEach((filter: any) => {\n        filter.current?.clearFilter?.();\n      });\n    },\n  }));\n\n  return (\n    <>\n      {filters.map(\n        (\n          {\n            Header,\n            fetchSelects,\n            key,\n            id,\n            input,\n            paginate,\n            selects,\n            onFilterUpdate,\n          },\n          index,\n        ) => {\n          const initialValue = internalFilters?.[index]?.value;\n          if (input === 'select') {\n            return (\n              <SelectFilter\n                ref={filterRefs[index]}\n                Header={Header}\n                fetchSelects={fetchSelects}\n                initialValue={initialValue}\n                key={key}\n                name={id}\n                onSelect={(\n                  option: SelectOption | undefined,\n                  isClear?: boolean,\n                ) => {\n                  if (onFilterUpdate) {\n                    // Filter change triggers both onChange AND onClear, only want to track onChange\n                    if (!isClear) {\n                      onFilterUpdate(option);\n                    }\n                  }\n\n                  updateFilterValue(index, option);\n                }}\n                paginate={paginate}\n                selects={selects}\n              />\n            );\n          }\n          if (input === 'search' && typeof Header === 'string') {\n            return (\n              <SearchFilter\n                ref={filterRefs[index]}\n                Header={Header}\n                initialValue={initialValue}\n                key={key}\n                name={id}\n                onSubmit={(value: string) => {\n                  if (onFilterUpdate) {\n                    onFilterUpdate(value);\n                  }\n\n                  updateFilterValue(index, value);\n                }}\n              />\n            );\n          }\n          if (input === 'datetime_range') {\n            return (\n              <DateRangeFilter\n                ref={filterRefs[index]}\n                Header={Header}\n                initialValue={initialValue}\n                key={key}\n                name={id}\n                onSubmit={value => updateFilterValue(index, value)}\n              />\n            );\n          }\n          return null;\n        },\n      )}\n    </>\n  );\n}\n\nexport default withTheme(forwardRef(UIFilters));\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { FormLabel } from 'src/components/Form';\nimport { SELECT_WIDTH } from './utils';\nimport { CardSortSelectOption, FetchDataConfig, SortColumn } from './types';\n\nconst SortContainer = styled.div`\n  display: inline-flex;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  align-items: center;\n  text-align: left;\n  width: ${SELECT_WIDTH}px;\n`;\n\ninterface CardViewSelectSortProps {\n  onChange: (conf: FetchDataConfig) => any;\n  options: Array<CardSortSelectOption>;\n  initialSort?: SortColumn[];\n  pageIndex: number;\n  pageSize: number;\n}\n\nexport const CardSortSelect = ({\n  initialSort,\n  onChange,\n  options,\n  pageIndex,\n  pageSize,\n}: CardViewSelectSortProps) => {\n  const defaultSort =\n    (initialSort && options.find(({ id }) => id === initialSort[0].id)) ||\n    options[0];\n\n  const [value, setValue] = useState({\n    label: defaultSort.label,\n    value: defaultSort.value,\n  });\n\n  const formattedOptions = useMemo(\n    () => options.map(option => ({ label: option.label, value: option.value })),\n    [options],\n  );\n\n  const handleOnChange = (selected: { label: string; value: string }) => {\n    setValue(selected);\n    const originalOption = options.find(\n      ({ value }) => value === selected.value,\n    );\n    if (originalOption) {\n      const sortBy = [\n        {\n          id: originalOption.id,\n          desc: originalOption.desc,\n        },\n      ];\n      onChange({ pageIndex, pageSize, sortBy, filters: [] });\n    }\n  };\n\n  return (\n    <SortContainer>\n      <Select\n        ariaLabel={t('Sort')}\n        header={<FormLabel>{t('Sort')}</FormLabel>}\n        labelInValue\n        onChange={(value: CardSortSelectOption) => handleOnChange(value)}\n        options={formattedOptions}\n        showSearch\n        value={value}\n      />\n    </SortContainer>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, styled } from '@superset-ui/core';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport Alert from 'src/components/Alert';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport IndeterminateCheckbox from 'src/components/IndeterminateCheckbox';\nimport Pagination from 'src/components/Pagination';\nimport TableCollection from 'src/components/TableCollection';\nimport CardCollection from './CardCollection';\nimport FilterControls from './Filters';\nimport { CardSortSelect } from './CardSortSelect';\nimport {\n  FetchDataConfig,\n  Filters,\n  SortColumn,\n  CardSortSelectOption,\n  ViewModeType,\n} from './types';\nimport { ListViewError, useListViewState } from './utils';\nimport { EmptyStateBig, EmptyStateProps } from '../EmptyState';\n\nconst ListViewStyles = styled.div`\n  text-align: center;\n\n  .superset-list-view {\n    text-align: left;\n    border-radius: 4px 0;\n    margin: 0 ${({ theme }) => theme.gridUnit * 4}px;\n\n    .header {\n      display: flex;\n      padding-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n\n      & .controls {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: ${({ theme }) => theme.gridUnit * 6}px;\n        row-gap: ${({ theme }) => theme.gridUnit * 4}px;\n      }\n    }\n\n    .body.empty table {\n      margin-bottom: 0;\n    }\n\n    .body {\n      overflow-x: auto;\n    }\n\n    .ant-empty {\n      .ant-empty-image {\n        height: auto;\n      }\n    }\n  }\n\n  .pagination-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n  }\n\n  .row-count-container {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nconst BulkSelectWrapper = styled(Alert)`\n  ${({ theme }) => `\n    border-radius: 0;\n    margin-bottom: 0;\n    color: ${theme.colors.grayscale.dark1};\n    background-color: ${theme.colors.primary.light4};\n\n    .selectedCopy {\n      display: inline-block;\n      padding: ${theme.gridUnit * 2}px 0;\n    }\n\n    .deselect-all {\n      color: ${theme.colors.primary.base};\n      margin-left: ${theme.gridUnit * 4}px;\n    }\n\n    .divider {\n      margin: ${`${-theme.gridUnit * 2}px 0 ${-theme.gridUnit * 2}px ${\n        theme.gridUnit * 4\n      }px`};\n      width: 1px;\n      height: ${theme.gridUnit * 8}px;\n      box-shadow: inset -1px 0px 0px ${theme.colors.grayscale.light2};\n      display: inline-flex;\n      vertical-align: middle;\n      position: relative;\n    }\n\n    .ant-alert-close-icon {\n      margin-top: ${theme.gridUnit * 1.5}px;\n    }\n  `}\n`;\n\nconst bulkSelectColumnConfig = {\n  Cell: ({ row }: any) => (\n    <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} id={row.id} />\n  ),\n  Header: ({ getToggleAllRowsSelectedProps }: any) => (\n    <IndeterminateCheckbox\n      {...getToggleAllRowsSelectedProps()}\n      id=\"header-toggle-all\"\n    />\n  ),\n  id: 'selection',\n  size: 'sm',\n};\n\nconst ViewModeContainer = styled.div`\n  padding-right: ${({ theme }) => theme.gridUnit * 4}px;\n  margin-top: ${({ theme }) => theme.gridUnit * 5 + 1}px;\n  white-space: nowrap;\n  display: inline-block;\n\n  .toggle-button {\n    display: inline-block;\n    border-radius: ${({ theme }) => theme.gridUnit / 2}px;\n    padding: ${({ theme }) => theme.gridUnit}px;\n    padding-bottom: ${({ theme }) => theme.gridUnit * 0.5}px;\n\n    &:first-of-type {\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n\n  .active {\n    background-color: ${({ theme }) => theme.colors.grayscale.base};\n    svg {\n      color: ${({ theme }) => theme.colors.grayscale.light5};\n    }\n  }\n`;\n\nconst EmptyWrapper = styled.div`\n  padding: ${({ theme }) => theme.gridUnit * 40}px 0;\n\n  &.table {\n    background: ${({ theme }) => theme.colors.grayscale.light5};\n  }\n`;\n\nconst ViewModeToggle = ({\n  mode,\n  setMode,\n}: {\n  mode: 'table' | 'card';\n  setMode: (mode: 'table' | 'card') => void;\n}) => (\n  <ViewModeContainer>\n    <div\n      role=\"button\"\n      tabIndex={0}\n      onClick={e => {\n        e.currentTarget.blur();\n        setMode('card');\n      }}\n      className={cx('toggle-button', { active: mode === 'card' })}\n    >\n      <Icons.CardView />\n    </div>\n    <div\n      role=\"button\"\n      tabIndex={0}\n      onClick={e => {\n        e.currentTarget.blur();\n        setMode('table');\n      }}\n      className={cx('toggle-button', { active: mode === 'table' })}\n    >\n      <Icons.ListView />\n    </div>\n  </ViewModeContainer>\n);\n\nexport interface ListViewProps<T extends object = any> {\n  columns: any[];\n  data: T[];\n  count: number;\n  pageSize: number;\n  fetchData: (conf: FetchDataConfig) => any;\n  loading: boolean;\n  className?: string;\n  initialSort?: SortColumn[];\n  filters?: Filters;\n  bulkActions?: Array<{\n    key: string;\n    name: React.ReactNode;\n    onSelect: (rows: any[]) => any;\n    type?: 'primary' | 'secondary' | 'danger';\n  }>;\n  bulkSelectEnabled?: boolean;\n  disableBulkSelect?: () => void;\n  renderBulkSelectCopy?: (selects: any[]) => React.ReactNode;\n  renderCard?: (row: T & { loading: boolean }) => React.ReactNode;\n  cardSortSelectOptions?: Array<CardSortSelectOption>;\n  defaultViewMode?: ViewModeType;\n  highlightRowId?: number;\n  showThumbnails?: boolean;\n  emptyState?: EmptyStateProps;\n}\n\nfunction ListView<T extends object = any>({\n  columns,\n  data,\n  count,\n  pageSize: initialPageSize,\n  fetchData,\n  loading,\n  initialSort = [],\n  className = '',\n  filters = [],\n  bulkActions = [],\n  bulkSelectEnabled = false,\n  disableBulkSelect = () => {},\n  renderBulkSelectCopy = selected => t('%s Selected', selected.length),\n  renderCard,\n  showThumbnails,\n  cardSortSelectOptions,\n  defaultViewMode = 'card',\n  highlightRowId,\n  emptyState,\n}: ListViewProps<T>) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    pageCount = 1,\n    gotoPage,\n    applyFilterValue,\n    selectedFlatRows,\n    toggleAllRowsSelected,\n    setViewMode,\n    state: { pageIndex, pageSize, internalFilters, viewMode },\n    query,\n  } = useListViewState({\n    bulkSelectColumnConfig,\n    bulkSelectMode: bulkSelectEnabled && Boolean(bulkActions.length),\n    columns,\n    count,\n    data,\n    fetchData,\n    initialPageSize,\n    initialSort,\n    initialFilters: filters,\n    renderCard: Boolean(renderCard),\n    defaultViewMode,\n  });\n  const filterable = Boolean(filters.length);\n  if (filterable) {\n    const columnAccessors = columns.reduce(\n      (acc, col) => ({ ...acc, [col.id || col.accessor]: true }),\n      {},\n    );\n    filters.forEach(f => {\n      if (!columnAccessors[f.id]) {\n        throw new ListViewError(\n          `Invalid filter config, ${f.id} is not present in columns`,\n        );\n      }\n    });\n  }\n\n  const filterControlsRef = useRef<{ clearFilters: () => void }>(null);\n\n  const handleClearFilterControls = useCallback(() => {\n    if (query.filters) {\n      filterControlsRef.current?.clearFilters();\n    }\n  }, [query.filters]);\n\n  const cardViewEnabled = Boolean(renderCard);\n\n  useEffect(() => {\n    // discard selections if bulk select is disabled\n    if (!bulkSelectEnabled) toggleAllRowsSelected(false);\n  }, [bulkSelectEnabled, toggleAllRowsSelected]);\n\n  return (\n    <ListViewStyles>\n      <div data-test={className} className={`superset-list-view ${className}`}>\n        <div className=\"header\">\n          {cardViewEnabled && (\n            <ViewModeToggle mode={viewMode} setMode={setViewMode} />\n          )}\n          <div className=\"controls\">\n            {filterable && (\n              <FilterControls\n                ref={filterControlsRef}\n                filters={filters}\n                internalFilters={internalFilters}\n                updateFilterValue={applyFilterValue}\n              />\n            )}\n            {viewMode === 'card' && cardSortSelectOptions && (\n              <CardSortSelect\n                initialSort={initialSort}\n                onChange={fetchData}\n                options={cardSortSelectOptions}\n                pageIndex={pageIndex}\n                pageSize={pageSize}\n              />\n            )}\n          </div>\n        </div>\n        <div className={`body ${rows.length === 0 ? 'empty' : ''}`}>\n          {bulkSelectEnabled && (\n            <BulkSelectWrapper\n              data-test=\"bulk-select-controls\"\n              type=\"info\"\n              closable\n              showIcon={false}\n              onClose={disableBulkSelect}\n              message={\n                <>\n                  <div className=\"selectedCopy\" data-test=\"bulk-select-copy\">\n                    {renderBulkSelectCopy(selectedFlatRows)}\n                  </div>\n                  {Boolean(selectedFlatRows.length) && (\n                    <>\n                      <span\n                        data-test=\"bulk-select-deselect-all\"\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"deselect-all\"\n                        onClick={() => toggleAllRowsSelected(false)}\n                      >\n                        {t('Deselect all')}\n                      </span>\n                      <div className=\"divider\" />\n                      {bulkActions.map(action => (\n                        <Button\n                          data-test=\"bulk-select-action\"\n                          key={action.key}\n                          buttonStyle={action.type}\n                          cta\n                          onClick={() =>\n                            action.onSelect(\n                              selectedFlatRows.map(r => r.original),\n                            )\n                          }\n                        >\n                          {action.name}\n                        </Button>\n                      ))}\n                    </>\n                  )}\n                </>\n              }\n            />\n          )}\n          {viewMode === 'card' && (\n            <CardCollection\n              bulkSelectEnabled={bulkSelectEnabled}\n              prepareRow={prepareRow}\n              renderCard={renderCard}\n              rows={rows}\n              loading={loading}\n              showThumbnails={showThumbnails}\n            />\n          )}\n          {viewMode === 'table' && (\n            <TableCollection\n              getTableProps={getTableProps}\n              getTableBodyProps={getTableBodyProps}\n              prepareRow={prepareRow}\n              headerGroups={headerGroups}\n              rows={rows}\n              columns={columns}\n              loading={loading}\n              highlightRowId={highlightRowId}\n            />\n          )}\n          {!loading && rows.length === 0 && (\n            <EmptyWrapper className={viewMode}>\n              {query.filters ? (\n                <EmptyStateBig\n                  title={t('No results match your filter criteria')}\n                  description={t('Try different criteria to display results.')}\n                  image=\"filter-results.svg\"\n                  buttonAction={() => handleClearFilterControls()}\n                  buttonText={t('clear all filters')}\n                />\n              ) : (\n                <EmptyStateBig\n                  {...emptyState}\n                  title={emptyState?.title || t('No Data')}\n                  image={emptyState?.image || 'filter-results.svg'}\n                />\n              )}\n            </EmptyWrapper>\n          )}\n        </div>\n      </div>\n\n      {rows.length > 0 && (\n        <div className=\"pagination-container\">\n          <Pagination\n            totalPages={pageCount || 0}\n            currentPage={pageCount ? pageIndex + 1 : 0}\n            onChange={(p: number) => gotoPage(p - 1)}\n            hideFirstAndLastPageLinks\n          />\n          <div className=\"row-count-container\">\n            {!loading &&\n              t(\n                '%s-%s of %s',\n                pageSize * pageIndex + (rows.length && 1),\n                pageSize * pageIndex + rows.length,\n                count,\n              )}\n          </div>\n        </div>\n      )}\n    </ListViewStyles>\n  );\n}\n\nexport default ListView;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode } from 'react';\n\nexport interface SortColumn {\n  id: string;\n  desc?: boolean;\n}\n\nexport type SortColumns = SortColumn[];\n\nexport interface SelectOption {\n  label: string;\n  value: any;\n}\n\nexport interface CardSortSelectOption {\n  desc: boolean;\n  id: any;\n  label: string;\n  value: any;\n}\n\nexport interface Filter {\n  Header: ReactNode;\n  key: string;\n  id: string;\n  urlDisplay?: string;\n  operator?: FilterOperator;\n  input?:\n    | 'text'\n    | 'textarea'\n    | 'select'\n    | 'checkbox'\n    | 'search'\n    | 'datetime_range';\n  unfilteredLabel?: string;\n  selects?: SelectOption[];\n  onFilterOpen?: () => void;\n  onFilterUpdate?: (value?: any) => void;\n  fetchSelects?: (\n    filterValue: string,\n    page: number,\n    pageSize: number,\n  ) => Promise<{ data: SelectOption[]; totalCount: number }>;\n  paginate?: boolean;\n}\n\nexport type Filters = Filter[];\n\nexport type ViewModeType = 'card' | 'table';\n\nexport interface FilterValue {\n  id: string;\n  urlDisplay?: string;\n  operator?: string;\n  value:\n    | string\n    | boolean\n    | number\n    | null\n    | undefined\n    | string[]\n    | number[]\n    | { label: string; value: string | number };\n}\n\nexport interface FetchDataConfig {\n  pageIndex: number;\n  pageSize: number;\n  sortBy: SortColumns;\n  filters: FilterValue[];\n}\n\nexport interface InternalFilter extends FilterValue {\n  Header?: string;\n}\n\nexport enum FilterOperator {\n  startsWith = 'sw',\n  endsWith = 'ew',\n  contains = 'ct',\n  equals = 'eq',\n  notStartsWith = 'nsw',\n  notEndsWith = 'new',\n  notContains = 'nct',\n  notEquals = 'neq',\n  greaterThan = 'gt',\n  lessThan = 'lt',\n  relationManyMany = 'rel_m_m',\n  relationOneMany = 'rel_o_m',\n  titleOrSlug = 'title_or_slug',\n  nameOrDescription = 'name_or_description',\n  allText = 'all_text',\n  chartAllText = 'chart_all_text',\n  datasetIsNullOrEmpty = 'dataset_is_null_or_empty',\n  between = 'between',\n  dashboardIsFav = 'dashboard_is_favorite',\n  chartIsFav = 'chart_is_favorite',\n  chartIsCertified = 'chart_is_certified',\n  dashboardIsCertified = 'dashboard_is_certified',\n  datasetIsCertified = 'dataset_is_certified',\n  dashboardHasCreatedBy = 'dashboard_has_created_by',\n  chartHasCreatedBy = 'chart_has_created_by',\n  dashboardTags = 'dashboard_tags',\n  chartTags = 'chart_tags',\n  savedQueryTags = 'saved_query_tags',\n}\n"],"names":["CardContainer","styled","theme","showThumbnails","gridUnit","CardWrapper","colors","primary","base","CardCollection","bulkSelectEnabled","loading","prepareRow","renderCard","rows","length","Array","map","e","i","key","row","className","cx","isSelected","id","onClick","handleClick","event","toggleRowSelected","preventDefault","stopPropagation","role","original","RisonParam","encode","data","undefined","rison","replace","decode","dataStr","isArray","ListViewError","Error","name","mergeCreateFilterValues","list","updateObj","urlDisplay","operator","value","convertFiltersRison","filterObj","filters","refs","Object","keys","forEach","filter","push","currentFilterId","Container","SearchIcon","Icons","grayscale","light1","StyledInput","AntdInput","SearchFilter","ref","Header","initialValue","onSubmit","setValue","useState","handleSubmit","trim","useImperativeHandle","clearFilter","Form","allowClear","placeholder","t","onChange","currentTarget","onPressEnter","onBlur","prefix","iconSize","forwardRef","FilterContainer","typography","sizes","s","SelectFilter","fetchSelects","onSelect","selects","selectedOption","setSelectedOption","selected","label","onClear","fetchAndFormatSelects","useMemo","async","inputValue","page","pageSize","selectValues","totalCount","AsyncSelect","ariaLabel","header","options","showSearch","labelInValue","RangeFilterContainer","DateRangeFilter","momentValue","moment","showTime","momentRange","changeValue","valueOf","UIFilters","internalFilters","updateFilterValue","filterRefs","from","createRef","clearFilters","current","index","input","paginate","onFilterUpdate","Select","option","isClear","Search","DateRange","withTheme","SortContainer","CardSortSelect","initialSort","pageIndex","defaultSort","find","formattedOptions","originalOption","sortBy","desc","handleOnChange","ListViewStyles","BulkSelectWrapper","Alert","dark1","light4","light2","bulkSelectColumnConfig","Cell","IndeterminateCheckbox","getToggleRowSelectedProps","getToggleAllRowsSelectedProps","size","ViewModeContainer","light5","EmptyWrapper","ViewModeToggle","mode","setMode","tabIndex","blur","active","columns","count","initialPageSize","fetchData","bulkActions","disableBulkSelect","renderBulkSelectCopy","cardSortSelectOptions","defaultViewMode","highlightRowId","emptyState","getTableProps","getTableBodyProps","headerGroups","pageCount","gotoPage","applyFilterValue","selectedFlatRows","toggleAllRowsSelected","setViewMode","state","viewMode","query","initialFilters","bulkSelectMode","setQuery","useQueryParams","NumberParam","sortColumn","StringParam","sortOrder","initialSortBy","initialState","columnsWithSelect","columnsWithFilter","f","canPreviousPage","canNextPage","setAllFilters","useTable","disableFilters","disableSortRemove","manualFilters","manualPagination","manualSortBy","autoResetFilters","Math","ceil","useFilters","useSortBy","usePagination","useRowState","useRowSelect","setInternalFilters","useEffect","queryParams","method","currentInternalFilters","update","updatedFilters","element","_","slice","updateInList","flat","useListViewState","Boolean","filterable","columnAccessors","reduce","acc","col","accessor","filterControlsRef","useRef","handleClearFilterControls","useCallback","cardViewEnabled","type","closable","showIcon","onClose","message","action","Button","buttonStyle","cta","r","TableCollection","EmptyState","title","description","image","buttonAction","buttonText","Pagination","totalPages","currentPage","p","hideFirstAndLastPageLinks","FilterOperator"],"sourceRoot":""}