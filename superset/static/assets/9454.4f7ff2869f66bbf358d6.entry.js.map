{"version":3,"file":"9454.4f7ff2869f66bbf358d6.entry.js","mappings":"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","sources":["webpack://superset/./src/explore/actions/saveModalActions.js","webpack://superset/./src/explore/actions/datasourcesActions.ts","webpack://superset/./src/explore/actions/exploreActions.ts","webpack://superset/./src/dashboard/util/componentIsResizable.ts","webpack://superset/./src/dashboard/util/shouldWrapChildInRow.js","webpack://superset/./src/dashboard/util/newEntitiesFromDrop.js","webpack://superset/./src/dashboard/reducers/dashboardLayout.js","webpack://superset/./src/dashboard/util/dnd-reorder.js","webpack://superset/./src/dashboard/reducers/undoableDashboardLayout.js","webpack://superset/./src/utils/DebouncedMessageQueue.js","webpack://superset/./src/middleware/loggerMiddleware.js","webpack://superset/./src/views/store.ts","webpack://superset/./src/components/MessageToasts/reducers.js","webpack://superset/./src/dashboard/reducers/datasources.ts","webpack://superset/./src/explore/reducers/datasourcesReducer.ts","webpack://superset/./src/dashboard/reducers/dashboardInfo.js","webpack://superset/./src/dashboard/reducers/dashboardState.js","webpack://superset/./src/reports/reducers/reports.js","webpack://superset/./src/explore/reducers/saveModalReducer.js","webpack://superset/./src/explore/reducers/exploreReducer.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport rison from 'rison';\nimport { SupersetClient, t } from '@superset-ui/core';\nimport { addSuccessToast } from 'src/components/MessageToasts/actions';\nimport { buildV1ChartDataPayload } from '../exploreUtils';\n\nconst ADHOC_FILTER_REGEX = /^adhoc_filters/;\n\nexport const FETCH_DASHBOARDS_SUCCEEDED = 'FETCH_DASHBOARDS_SUCCEEDED';\nexport function fetchDashboardsSucceeded(choices) {\n  return { type: FETCH_DASHBOARDS_SUCCEEDED, choices };\n}\n\nexport const FETCH_DASHBOARDS_FAILED = 'FETCH_DASHBOARDS_FAILED';\nexport function fetchDashboardsFailed(userId) {\n  return { type: FETCH_DASHBOARDS_FAILED, userId };\n}\n\nexport const SET_SAVE_CHART_MODAL_VISIBILITY =\n  'SET_SAVE_CHART_MODAL_VISIBILITY';\nexport function setSaveChartModalVisibility(isVisible) {\n  return { type: SET_SAVE_CHART_MODAL_VISIBILITY, isVisible };\n}\n\nexport function fetchDashboards(userId) {\n  return function fetchDashboardsThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `/dashboardasync/api/read?_flt_0_owners=${userId}`,\n    })\n      .then(({ json }) => {\n        const choices = json.pks.map((id, index) => ({\n          value: id,\n          label: (json.result[index] || {}).dashboard_title,\n        }));\n        choices.sort((a, b) =>\n          a.label.localeCompare(b.label, {\n            sensitivity: 'base',\n            numeric: true,\n          }),\n        );\n\n        return dispatch(fetchDashboardsSucceeded(choices));\n      })\n      .catch(() => dispatch(fetchDashboardsFailed(userId)));\n  };\n}\n\nexport const SAVE_SLICE_FAILED = 'SAVE_SLICE_FAILED';\nexport function saveSliceFailed() {\n  return { type: SAVE_SLICE_FAILED };\n}\nexport const SAVE_SLICE_SUCCESS = 'SAVE_SLICE_SUCCESS';\nexport function saveSliceSuccess(data) {\n  return { type: SAVE_SLICE_SUCCESS, data };\n}\n\nexport const REMOVE_SAVE_MODAL_ALERT = 'REMOVE_SAVE_MODAL_ALERT';\nexport function removeSaveModalAlert() {\n  return { type: REMOVE_SAVE_MODAL_ALERT };\n}\n\nexport const getSlicePayload = (\n  sliceName,\n  formDataWithNativeFilters,\n  dashboards,\n  owners,\n) => {\n  const adhocFilters = Object.entries(formDataWithNativeFilters).reduce(\n    (acc, [key, value]) =>\n      ADHOC_FILTER_REGEX.test(key)\n        ? { ...acc, [key]: value?.filter(f => !f.isExtra) }\n        : acc,\n    {},\n  );\n  const formData = {\n    ...formDataWithNativeFilters,\n    ...adhocFilters,\n    dashboards,\n  };\n\n  const [datasourceId, datasourceType] = formData.datasource.split('__');\n  const payload = {\n    params: JSON.stringify(formData),\n    slice_name: sliceName,\n    viz_type: formData.viz_type,\n    datasource_id: parseInt(datasourceId, 10),\n    datasource_type: datasourceType,\n    dashboards,\n    owners,\n    query_context: JSON.stringify(\n      buildV1ChartDataPayload({\n        formData,\n        force: false,\n        resultFormat: 'json',\n        resultType: 'full',\n        setDataMask: null,\n        ownState: null,\n      }),\n    ),\n  };\n  return payload;\n};\n\nconst addToasts = (isNewSlice, sliceName, addedToDashboard) => {\n  const toasts = [];\n  if (isNewSlice) {\n    toasts.push(addSuccessToast(t('Chart [%s] has been saved', sliceName)));\n  } else {\n    toasts.push(\n      addSuccessToast(t('Chart [%s] has been overwritten', sliceName)),\n    );\n  }\n\n  if (addedToDashboard) {\n    if (addedToDashboard.new) {\n      toasts.push(\n        addSuccessToast(\n          t(\n            'Dashboard [%s] just got created and chart [%s] was added to it',\n            addedToDashboard.title,\n            sliceName,\n          ),\n        ),\n      );\n    } else {\n      toasts.push(\n        addSuccessToast(\n          t(\n            'Chart [%s] was added to dashboard [%s]',\n            sliceName,\n            addedToDashboard.title,\n          ),\n        ),\n      );\n    }\n  }\n\n  return toasts;\n};\n\n//  Update existing slice\nexport const updateSlice =\n  ({ slice_id: sliceId, owners }, sliceName, dashboards, addedToDashboard) =>\n  async (dispatch, getState) => {\n    const {\n      explore: {\n        form_data: { url_params: _, ...formData },\n      },\n    } = getState();\n    try {\n      const response = await SupersetClient.put({\n        endpoint: `/api/v1/chart/${sliceId}`,\n        jsonPayload: getSlicePayload(sliceName, formData, dashboards, owners),\n      });\n\n      dispatch(saveSliceSuccess());\n      addToasts(false, sliceName, addedToDashboard).map(dispatch);\n      return response.json;\n    } catch (error) {\n      dispatch(saveSliceFailed());\n      throw error;\n    }\n  };\n\n//  Create new slice\nexport const createSlice =\n  (sliceName, dashboards, addedToDashboard) => async (dispatch, getState) => {\n    const {\n      explore: {\n        form_data: { url_params: _, ...formData },\n      },\n    } = getState();\n    try {\n      const response = await SupersetClient.post({\n        endpoint: `/api/v1/chart/`,\n        jsonPayload: getSlicePayload(sliceName, formData, dashboards),\n      });\n\n      dispatch(saveSliceSuccess());\n      addToasts(true, sliceName, addedToDashboard).map(dispatch);\n      return response.json;\n    } catch (error) {\n      dispatch(saveSliceFailed());\n      throw error;\n    }\n  };\n\n//  Create new dashboard\nexport const createDashboard = dashboardName => async dispatch => {\n  try {\n    const response = await SupersetClient.post({\n      endpoint: `/api/v1/dashboard/`,\n      jsonPayload: { dashboard_title: dashboardName },\n    });\n\n    return response.json;\n  } catch (error) {\n    dispatch(saveSliceFailed());\n    throw error;\n  }\n};\n\n//  Get existing dashboard from ID\nexport const getDashboard = dashboardId => async dispatch => {\n  try {\n    const response = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${dashboardId}`,\n    });\n\n    return response.json;\n  } catch (error) {\n    dispatch(saveSliceFailed());\n    throw error;\n  }\n};\n\n//  Get dashboards the slice is added to\nexport const getSliceDashboards = slice => async dispatch => {\n  try {\n    const response = await SupersetClient.get({\n      endpoint: `/api/v1/chart/${slice.slice_id}?q=${rison.encode({\n        columns: ['dashboards.id'],\n      })}`,\n    });\n\n    return response.json.result.dashboards.map(({ id }) => id);\n  } catch (error) {\n    dispatch(saveSliceFailed());\n    throw error;\n  }\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Dispatch, AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Dataset } from '@superset-ui/chart-controls';\nimport { SupersetClient } from '@superset-ui/core';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { updateFormDataByDatasource } from './exploreActions';\nimport { ExplorePageState } from '../types';\n\nexport const SET_DATASOURCE = 'SET_DATASOURCE';\nexport interface SetDatasource {\n  type: string;\n  datasource: Dataset;\n}\nexport function setDatasource(datasource: Dataset) {\n  return { type: SET_DATASOURCE, datasource };\n}\n\nexport function saveDataset({\n  schema,\n  sql,\n  database,\n  templateParams,\n  datasourceName,\n  columns,\n}: Omit<SqlLabPostRequest['data'], 'dbId'> & { database: { id: number } }) {\n  return async function (dispatch: ThunkDispatch<any, undefined, AnyAction>) {\n    // Create a dataset object\n    try {\n      const {\n        json: { data },\n      } = await SupersetClient.post({\n        endpoint: '/superset/sqllab_viz/',\n        postPayload: {\n          data: {\n            schema,\n            sql,\n            dbId: database?.id,\n            templateParams,\n            datasourceName,\n            metrics: [],\n            columns,\n          },\n        },\n      });\n      // Update form_data to point to new dataset\n      dispatch(changeDatasource(data));\n      return data;\n    } catch (error) {\n      getClientErrorObject(error).then(e => {\n        dispatch(addDangerToast(e.error));\n      });\n      throw error;\n    }\n  };\n}\n\nexport function changeDatasource(newDatasource: Dataset) {\n  return function (dispatch: Dispatch, getState: () => ExplorePageState) {\n    const {\n      explore: { datasource: prevDatasource },\n    } = getState();\n    dispatch(setDatasource(newDatasource));\n    dispatch(updateFormDataByDatasource(prevDatasource, newDatasource));\n  };\n}\n\nexport const datasourcesActions = {\n  setDatasource,\n  changeDatasource,\n  saveDataset,\n};\n\nexport type AnyDatasourcesAction = SetDatasource;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { Dataset } from '@superset-ui/chart-controls';\nimport { t, SupersetClient, QueryFormData } from '@superset-ui/core';\nimport { Dispatch } from 'redux';\nimport {\n  addDangerToast,\n  toastActions,\n} from 'src/components/MessageToasts/actions';\nimport { Slice } from 'src/types/Chart';\nimport { SaveActionType } from 'src/explore/types';\n\nconst FAVESTAR_BASE_URL = '/superset/favstar/slice';\n\nexport const UPDATE_FORM_DATA_BY_DATASOURCE = 'UPDATE_FORM_DATA_BY_DATASOURCE';\nexport function updateFormDataByDatasource(\n  prevDatasource: Dataset,\n  newDatasource: Dataset,\n) {\n  return {\n    type: UPDATE_FORM_DATA_BY_DATASOURCE,\n    prevDatasource,\n    newDatasource,\n  };\n}\n\nexport const POST_DATASOURCE_STARTED = 'POST_DATASOURCE_STARTED';\nexport const FETCH_DATASOURCE_SUCCEEDED = 'FETCH_DATASOURCE_SUCCEEDED';\nexport function fetchDatasourceSucceeded() {\n  return { type: FETCH_DATASOURCE_SUCCEEDED };\n}\n\nexport const FETCH_DATASOURCES_STARTED = 'FETCH_DATASOURCES_STARTED';\nexport function fetchDatasourcesStarted() {\n  return { type: FETCH_DATASOURCES_STARTED };\n}\n\nexport const FETCH_DATASOURCES_SUCCEEDED = 'FETCH_DATASOURCES_SUCCEEDED';\nexport function fetchDatasourcesSucceeded() {\n  return { type: FETCH_DATASOURCES_SUCCEEDED };\n}\n\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred: boolean) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport const FETCH_FAVE_STAR = 'FETCH_FAVE_STAR';\nexport function fetchFaveStar(sliceId: string) {\n  return function (dispatch: Dispatch) {\n    SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${sliceId}/count/`,\n    }).then(({ json }) => {\n      if (json.count > 0) {\n        dispatch(toggleFaveStar(true));\n      }\n    });\n  };\n}\n\nexport const SAVE_FAVE_STAR = 'SAVE_FAVE_STAR';\nexport function saveFaveStar(sliceId: string, isStarred: boolean) {\n  return function (dispatch: Dispatch) {\n    const urlSuffix = isStarred ? 'unselect' : 'select';\n    SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${sliceId}/${urlSuffix}/`,\n    })\n      .then(() => dispatch(toggleFaveStar(!isStarred)))\n      .catch(() => {\n        dispatch(\n          addDangerToast(t('An error occurred while starring this chart')),\n        );\n      });\n  };\n}\n\nexport const SET_FIELD_VALUE = 'SET_FIELD_VALUE';\nexport function setControlValue(\n  controlName: string,\n  value: any,\n  validationErrors?: any[],\n) {\n  return { type: SET_FIELD_VALUE, controlName, value, validationErrors };\n}\n\nexport const SET_EXPLORE_CONTROLS = 'UPDATE_EXPLORE_CONTROLS';\nexport function setExploreControls(formData: QueryFormData) {\n  return { type: SET_EXPLORE_CONTROLS, formData };\n}\n\nexport const SET_FORM_DATA = 'UPDATE_FORM_DATA';\nexport function setFormData(formData: QueryFormData) {\n  return { type: SET_FORM_DATA, formData };\n}\n\nexport const UPDATE_CHART_TITLE = 'UPDATE_CHART_TITLE';\nexport function updateChartTitle(sliceName: string) {\n  return { type: UPDATE_CHART_TITLE, sliceName };\n}\n\nexport const SET_SAVE_ACTION = 'SET_SAVE_ACTION';\nexport function setSaveAction(saveAction: SaveActionType | null) {\n  return { type: SET_SAVE_ACTION, saveAction };\n}\n\nexport const CREATE_NEW_SLICE = 'CREATE_NEW_SLICE';\nexport function createNewSlice(\n  can_add: boolean,\n  can_download: boolean,\n  can_overwrite: boolean,\n  slice: Slice,\n  form_data: QueryFormData,\n) {\n  return {\n    type: CREATE_NEW_SLICE,\n    can_add,\n    can_download,\n    can_overwrite,\n    slice,\n    form_data,\n  };\n}\n\nexport const SLICE_UPDATED = 'SLICE_UPDATED';\nexport function sliceUpdated(slice: Slice) {\n  return { type: SLICE_UPDATED, slice };\n}\n\nexport const SET_FORCE_QUERY = 'SET_FORCE_QUERY';\nexport function setForceQuery(force: boolean) {\n  return {\n    type: SET_FORCE_QUERY,\n    force,\n  };\n}\n\nexport const exploreActions = {\n  ...toastActions,\n  fetchDatasourcesStarted,\n  fetchDatasourcesSucceeded,\n  toggleFaveStar,\n  fetchFaveStar,\n  saveFaveStar,\n  setControlValue,\n  setExploreControls,\n  updateChartTitle,\n  createNewSlice,\n  sliceUpdated,\n  setForceQuery,\n};\n\nexport type ExploreActions = typeof exploreActions;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  COLUMN_TYPE,\n  CHART_TYPE,\n  MARKDOWN_TYPE,\n  DYNAMIC_TYPE,\n} from './componentTypes';\n\nexport default function componentIsResizable(entity: { type: string }) {\n  return (\n    [COLUMN_TYPE, CHART_TYPE, MARKDOWN_TYPE, DYNAMIC_TYPE].indexOf(\n      entity.type,\n    ) > -1\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DASHBOARD_GRID_TYPE,\n  CHART_TYPE,\n  COLUMN_TYPE,\n  MARKDOWN_TYPE,\n  TAB_TYPE,\n} from './componentTypes';\n\nconst typeToWrapChildLookup = {\n  [DASHBOARD_GRID_TYPE]: {\n    [CHART_TYPE]: true,\n    [COLUMN_TYPE]: true,\n    [MARKDOWN_TYPE]: true,\n  },\n\n  [TAB_TYPE]: {\n    [CHART_TYPE]: true,\n    [COLUMN_TYPE]: true,\n    [MARKDOWN_TYPE]: true,\n  },\n};\n\nexport default function shouldWrapChildInRow({ parentType, childType }) {\n  if (!parentType || !childType) return false;\n\n  const wrapChildLookup = typeToWrapChildLookup[parentType];\n  if (!wrapChildLookup) return false;\n\n  return Boolean(wrapChildLookup[childType]);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport componentIsResizable from './componentIsResizable';\nimport shouldWrapChildInRow from './shouldWrapChildInRow';\nimport newComponentFactory from './newComponentFactory';\nimport getComponentWidthFromDrop from './getComponentWidthFromDrop';\n\nimport { ROW_TYPE, TABS_TYPE, TAB_TYPE } from './componentTypes';\n\nexport default function newEntitiesFromDrop({ dropResult, layout }) {\n  const { dragging, destination } = dropResult;\n\n  const dragType = dragging.type;\n  const dropEntity = layout[destination.id];\n  const dropType = dropEntity.type;\n  let newDropChild = newComponentFactory(dragType, dragging.meta);\n  newDropChild.parents = (dropEntity.parents || []).concat(dropEntity.id);\n\n  if (componentIsResizable(dragging)) {\n    newDropChild.meta.width = // don't set a 0 width\n      getComponentWidthFromDrop({ dropResult, layout }) || undefined;\n  }\n\n  const wrapChildInRow = shouldWrapChildInRow({\n    parentType: dropType,\n    childType: dragType,\n  });\n\n  const newEntities = {\n    [newDropChild.id]: newDropChild,\n  };\n\n  if (wrapChildInRow) {\n    const rowWrapper = newComponentFactory(ROW_TYPE);\n    rowWrapper.children = [newDropChild.id];\n    rowWrapper.parents = (dropEntity.parents || []).concat(dropEntity.id);\n    newEntities[rowWrapper.id] = rowWrapper;\n    newDropChild.parents = rowWrapper.parents.concat(rowWrapper.id);\n    newDropChild = rowWrapper;\n  } else if (dragType === TABS_TYPE) {\n    // create a new tab component\n    const tabChild = newComponentFactory(TAB_TYPE);\n    tabChild.parents = (dropEntity.parents || []).concat(dropEntity.id);\n    newDropChild.children = [tabChild.id];\n    newEntities[tabChild.id] = tabChild;\n  }\n\n  const nextDropChildren = [...dropEntity.children];\n  nextDropChildren.splice(destination.index, 0, newDropChild.id);\n\n  newEntities[destination.id] = {\n    ...dropEntity,\n    children: nextDropChildren,\n  };\n\n  return newEntities;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DASHBOARD_ROOT_ID,\n  DASHBOARD_GRID_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n  DASHBOARD_HEADER_ID,\n} from '../util/constants';\nimport componentIsResizable from '../util/componentIsResizable';\nimport findParentId from '../util/findParentId';\nimport getComponentWidthFromDrop from '../util/getComponentWidthFromDrop';\nimport updateComponentParentsList from '../util/updateComponentParentsList';\nimport newComponentFactory from '../util/newComponentFactory';\nimport newEntitiesFromDrop from '../util/newEntitiesFromDrop';\nimport reorderItem from '../util/dnd-reorder';\nimport shouldWrapChildInRow from '../util/shouldWrapChildInRow';\nimport { ROW_TYPE, TAB_TYPE, TABS_TYPE } from '../util/componentTypes';\n\nimport {\n  UPDATE_COMPONENTS,\n  UPDATE_COMPONENTS_PARENTS_LIST,\n  DELETE_COMPONENT,\n  CREATE_COMPONENT,\n  MOVE_COMPONENT,\n  CREATE_TOP_LEVEL_TABS,\n  DELETE_TOP_LEVEL_TABS,\n  DASHBOARD_TITLE_CHANGED,\n} from '../actions/dashboardLayout';\n\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport function recursivelyDeleteChildren(\n  componentId,\n  componentParentId,\n  nextComponents,\n) {\n  // delete child and it's children\n  const component = nextComponents?.[componentId];\n  if (component) {\n    // eslint-disable-next-line no-param-reassign\n    delete nextComponents[componentId];\n\n    const { children = [] } = component;\n    children?.forEach?.(childId => {\n      recursivelyDeleteChildren(childId, componentId, nextComponents);\n    });\n\n    const parent = nextComponents?.[componentParentId];\n    if (Array.isArray(parent?.children)) {\n      // may have been deleted in another recursion\n      const componentIndex = parent.children.indexOf(componentId);\n      if (componentIndex > -1) {\n        const nextChildren = [...parent.children];\n        nextChildren.splice(componentIndex, 1);\n        // eslint-disable-next-line no-param-reassign\n        nextComponents[componentParentId] = {\n          ...parent,\n          children: nextChildren,\n        };\n      }\n    }\n  }\n}\n\nconst actionHandlers = {\n  [HYDRATE_DASHBOARD](state, action) {\n    return {\n      ...action.data.dashboardLayout.present,\n    };\n  },\n\n  [UPDATE_COMPONENTS](state, action) {\n    const {\n      payload: { nextComponents },\n    } = action;\n    return {\n      ...state,\n      ...nextComponents,\n    };\n  },\n\n  [DELETE_COMPONENT](state, action) {\n    const {\n      payload: { id, parentId },\n    } = action;\n\n    if (!parentId || !id || !state[id] || !state[parentId]) return state;\n\n    const nextComponents = { ...state };\n\n    recursivelyDeleteChildren(id, parentId, nextComponents);\n    const nextParent = nextComponents[parentId];\n    if (nextParent?.type === ROW_TYPE && nextParent?.children?.length === 0) {\n      const grandparentId = findParentId({\n        childId: parentId,\n        layout: nextComponents,\n      });\n      recursivelyDeleteChildren(parentId, grandparentId, nextComponents);\n    }\n\n    return nextComponents;\n  },\n\n  [CREATE_COMPONENT](state, action) {\n    const {\n      payload: { dropResult },\n    } = action;\n\n    const newEntities = newEntitiesFromDrop({ dropResult, layout: state });\n\n    return {\n      ...state,\n      ...newEntities,\n    };\n  },\n\n  [MOVE_COMPONENT](state, action) {\n    const {\n      payload: { dropResult },\n    } = action;\n    const { source, destination, dragging } = dropResult;\n\n    if (!source || !destination || !dragging) return state;\n\n    const nextEntities = reorderItem({\n      entitiesMap: state,\n      source,\n      destination,\n    });\n\n    if (componentIsResizable(nextEntities[dragging.id])) {\n      // update component width if it changed\n      const nextWidth =\n        getComponentWidthFromDrop({\n          dropResult,\n          layout: state,\n        }) || undefined; // don't set a 0 width\n      if ((nextEntities[dragging.id].meta || {}).width !== nextWidth) {\n        nextEntities[dragging.id] = {\n          ...nextEntities[dragging.id],\n          meta: {\n            ...nextEntities[dragging.id].meta,\n            width: nextWidth,\n          },\n        };\n      }\n    }\n\n    // wrap the dragged component in a row depending on destination type\n    const wrapInRow = shouldWrapChildInRow({\n      parentType: destination.type,\n      childType: dragging.type,\n    });\n\n    if (wrapInRow) {\n      const destinationEntity = nextEntities[destination.id];\n      const destinationChildren = destinationEntity.children;\n      const newRow = newComponentFactory(ROW_TYPE);\n      newRow.children = [destinationChildren[destination.index]];\n      newRow.parents = (destinationEntity.parents || []).concat(destination.id);\n      destinationChildren[destination.index] = newRow.id;\n      nextEntities[newRow.id] = newRow;\n    }\n\n    return {\n      ...state,\n      ...nextEntities,\n    };\n  },\n\n  [CREATE_TOP_LEVEL_TABS](state, action) {\n    const {\n      payload: { dropResult },\n    } = action;\n    const { source, dragging } = dropResult;\n\n    // move children of current root to be children of the dragging tab\n    const rootComponent = state[DASHBOARD_ROOT_ID];\n    const topLevelId = rootComponent.children[0];\n    const topLevelComponent = state[topLevelId];\n\n    if (source.id !== NEW_COMPONENTS_SOURCE_ID) {\n      // component already exists\n      const draggingTabs = state[dragging.id];\n      const draggingTabId = draggingTabs.children[0];\n      const draggingTab = state[draggingTabId];\n\n      // move all children except the one that is dragging\n      const childrenToMove = [...topLevelComponent.children].filter(\n        id => id !== dragging.id,\n      );\n\n      return {\n        ...state,\n        [DASHBOARD_ROOT_ID]: {\n          ...rootComponent,\n          children: [dragging.id],\n        },\n        [topLevelId]: {\n          ...topLevelComponent,\n          children: [],\n        },\n        [draggingTabId]: {\n          ...draggingTab,\n          children: [...draggingTab.children, ...childrenToMove],\n        },\n      };\n    }\n\n    // create new component\n    const newEntities = newEntitiesFromDrop({ dropResult, layout: state });\n    const newEntitiesArray = Object.values(newEntities);\n    const tabComponent = newEntitiesArray.find(\n      component => component.type === TAB_TYPE,\n    );\n    const tabsComponent = newEntitiesArray.find(\n      component => component.type === TABS_TYPE,\n    );\n\n    tabComponent.children = [...topLevelComponent.children];\n    newEntities[topLevelId] = { ...topLevelComponent, children: [] };\n    newEntities[DASHBOARD_ROOT_ID] = {\n      ...rootComponent,\n      children: [tabsComponent.id],\n    };\n\n    return {\n      ...state,\n      ...newEntities,\n    };\n  },\n\n  [DELETE_TOP_LEVEL_TABS](state) {\n    const rootComponent = state[DASHBOARD_ROOT_ID];\n    const topLevelId = rootComponent.children[0];\n    const topLevelTabs = state[topLevelId];\n\n    if (topLevelTabs.type !== TABS_TYPE) return state;\n\n    let childrenToMove = [];\n    const nextEntities = { ...state };\n\n    topLevelTabs.children.forEach(tabId => {\n      const tabComponent = state[tabId];\n      childrenToMove = [...childrenToMove, ...tabComponent.children];\n      delete nextEntities[tabId];\n    });\n\n    delete nextEntities[topLevelId];\n\n    nextEntities[DASHBOARD_ROOT_ID] = {\n      ...rootComponent,\n      children: [DASHBOARD_GRID_ID],\n    };\n\n    nextEntities[DASHBOARD_GRID_ID] = {\n      ...state[DASHBOARD_GRID_ID],\n      children: childrenToMove,\n    };\n\n    return nextEntities;\n  },\n\n  [UPDATE_COMPONENTS_PARENTS_LIST](state) {\n    const nextState = {\n      ...state,\n    };\n\n    updateComponentParentsList({\n      currentComponent: nextState[DASHBOARD_ROOT_ID],\n      layout: nextState,\n    });\n\n    return {\n      ...nextState,\n    };\n  },\n\n  [DASHBOARD_TITLE_CHANGED](state, action) {\n    return {\n      ...state,\n      [DASHBOARD_HEADER_ID]: {\n        ...state[DASHBOARD_HEADER_ID],\n        meta: {\n          ...state[DASHBOARD_HEADER_ID].meta,\n          text: action.text,\n        },\n      },\n    };\n  },\n};\n\nexport default function layoutReducer(state = {}, action) {\n  if (action.type in actionHandlers) {\n    const handler = actionHandlers[action.type];\n    return handler(state, action);\n  }\n\n  return state;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport function reorder(list, startIndex, endIndex) {\n  const result = [...list];\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n\nexport default function reorderItem({ entitiesMap, source, destination }) {\n  const current = [...entitiesMap[source.id].children];\n  const next = [...entitiesMap[destination.id].children];\n  const target = current[source.index];\n\n  // moving to same list\n  if (source.id === destination.id) {\n    const reordered = reorder(current, source.index, destination.index);\n\n    const result = {\n      ...entitiesMap,\n      [source.id]: {\n        ...entitiesMap[source.id],\n        children: reordered,\n      },\n    };\n\n    return result;\n  }\n\n  // moving to different list\n  current.splice(source.index, 1); // remove from original\n  next.splice(destination.index, 0, target); // insert into next\n\n  const result = {\n    ...entitiesMap,\n    [source.id]: {\n      ...entitiesMap[source.id],\n      children: current,\n    },\n    [destination.id]: {\n      ...entitiesMap[destination.id],\n      children: next,\n    },\n  };\n\n  return result;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport undoable, { includeAction } from 'redux-undo';\nimport { UNDO_LIMIT } from '../util/constants';\nimport {\n  UPDATE_COMPONENTS,\n  DELETE_COMPONENT,\n  CREATE_COMPONENT,\n  CREATE_TOP_LEVEL_TABS,\n  DELETE_TOP_LEVEL_TABS,\n  RESIZE_COMPONENT,\n  MOVE_COMPONENT,\n  HANDLE_COMPONENT_DROP,\n} from '../actions/dashboardLayout';\n\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nimport dashboardLayout from './dashboardLayout';\n\nexport default undoable(dashboardLayout, {\n  // +1 because length of history seems max out at limit - 1\n  // +1 again so we can detect if we've exceeded the limit\n  limit: UNDO_LIMIT + 2,\n  ignoreInitialState: true,\n  filter: includeAction([\n    HYDRATE_DASHBOARD,\n    UPDATE_COMPONENTS,\n    DELETE_COMPONENT,\n    CREATE_COMPONENT,\n    CREATE_TOP_LEVEL_TABS,\n    DELETE_TOP_LEVEL_TABS,\n    RESIZE_COMPONENT,\n    MOVE_COMPONENT,\n    HANDLE_COMPONENT_DROP,\n  ]),\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { debounce } from 'lodash';\n\nclass DebouncedMessageQueue {\n  constructor({\n    callback = () => {},\n    sizeThreshold = 1000,\n    delayThreshold = 1000,\n  }) {\n    this.queue = [];\n    this.sizeThreshold = sizeThreshold;\n    this.delayThreshold = delayThreshold;\n\n    this.trigger = debounce(this.trigger.bind(this), this.delayThreshold);\n    this.callback = callback;\n  }\n\n  append(eventData) {\n    this.queue.push(eventData);\n    this.trigger();\n  }\n\n  trigger() {\n    if (this.queue.length > 0) {\n      const events = this.queue.splice(0, this.sizeThreshold);\n      this.callback.call(null, events);\n\n      // If there are remaining items, call it again.\n      if (this.queue.length > 0) {\n        this.trigger();\n      }\n    }\n  }\n}\n\nexport default DebouncedMessageQueue;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n/* eslint prefer-const: 2 */\nimport shortid from 'shortid';\nimport { SupersetClient } from '@superset-ui/core';\n\nimport { safeStringify } from '../utils/safeStringify';\nimport { LOG_EVENT } from '../logger/actions';\nimport { LOG_EVENT_TYPE_TIMING } from '../logger/LogUtils';\nimport DebouncedMessageQueue from '../utils/DebouncedMessageQueue';\n\nconst LOG_ENDPOINT = '/superset/log/?explode=events';\nconst sendBeacon = events => {\n  if (events.length <= 0) {\n    return;\n  }\n\n  let endpoint = LOG_ENDPOINT;\n  const { source, source_id } = events[0];\n  // backend logs treat these request params as first-class citizens\n  if (source === 'dashboard') {\n    endpoint += `&dashboard_id=${source_id}`;\n  } else if (source === 'slice') {\n    endpoint += `&slice_id=${source_id}`;\n  }\n\n  if (navigator.sendBeacon) {\n    const formData = new FormData();\n    formData.append('events', safeStringify(events));\n    if (SupersetClient.getGuestToken()) {\n      // if we have a guest token, we need to send it for auth via the form\n      formData.append('guest_token', SupersetClient.getGuestToken());\n    }\n    navigator.sendBeacon(endpoint, formData);\n  } else {\n    SupersetClient.post({\n      endpoint,\n      postPayload: { events },\n      parseMethod: null,\n    });\n  }\n};\n\n// beacon API has data size limit = 2^16.\n// assume avg each log entry has 2^6 characters\nconst MAX_EVENTS_PER_REQUEST = 1024;\nconst logMessageQueue = new DebouncedMessageQueue({\n  callback: sendBeacon,\n  sizeThreshold: MAX_EVENTS_PER_REQUEST,\n  delayThreshold: 1000,\n});\nlet lastEventId = 0;\nconst loggerMiddleware = store => next => action => {\n  if (action.type !== LOG_EVENT) {\n    return next(action);\n  }\n\n  const { dashboardInfo, explore, impressionId, dashboardLayout, sqlLab } =\n    store.getState();\n  let logMetadata = {\n    impression_id: impressionId,\n    version: 'v2',\n  };\n  if (dashboardInfo?.id) {\n    logMetadata = {\n      source: 'dashboard',\n      source_id: dashboardInfo.id,\n      ...logMetadata,\n    };\n  } else if (explore?.slice) {\n    logMetadata = {\n      source: 'explore',\n      source_id: explore.slice ? explore.slice.slice_id : 0,\n      ...logMetadata,\n    };\n  } else if (sqlLab) {\n    const editor = sqlLab.queryEditors.find(\n      ({ id }) => id === sqlLab.tabHistory.slice(-1)[0],\n    );\n    logMetadata = {\n      source: 'sqlLab',\n      source_id: editor?.id,\n      db_id: editor?.dbId,\n      schema: editor?.schema,\n    };\n  }\n\n  const { eventName } = action.payload;\n  let { eventData = {} } = action.payload;\n  eventData = {\n    ...logMetadata,\n    ts: new Date().getTime(),\n    event_name: eventName,\n    ...eventData,\n  };\n  if (LOG_EVENT_TYPE_TIMING.has(eventName)) {\n    eventData = {\n      ...eventData,\n      event_type: 'timing',\n      trigger_event: lastEventId,\n    };\n  } else {\n    lastEventId = shortid.generate();\n    eventData = {\n      ...eventData,\n      event_type: 'user',\n      event_id: lastEventId,\n      visibility: document.visibilityState,\n    };\n  }\n\n  if (eventData.target_id && dashboardLayout?.present?.[eventData.target_id]) {\n    const { meta } = dashboardLayout.present[eventData.target_id];\n    // chart name or tab/header text\n    eventData.target_name = meta.chartId ? meta.sliceName : meta.text;\n  }\n\n  logMessageQueue.append(eventData);\n  return eventData;\n};\n\nexport default loggerMiddleware;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Store,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport messageToastReducer from 'src/components/MessageToasts/reducers';\nimport { initEnhancer } from 'src/reduxUtils';\nimport charts from 'src/components/Chart/chartReducer';\nimport dataMask from 'src/dataMask/reducer';\nimport reports from 'src/reports/reducers/reports';\nimport dashboardInfo from 'src/dashboard/reducers/dashboardInfo';\nimport dashboardState from 'src/dashboard/reducers/dashboardState';\nimport dashboardFilters from 'src/dashboard/reducers/dashboardFilters';\nimport nativeFilters from 'src/dashboard/reducers/nativeFilters';\nimport dashboardDatasources from 'src/dashboard/reducers/datasources';\nimport sliceEntities from 'src/dashboard/reducers/sliceEntities';\nimport dashboardLayout from 'src/dashboard/reducers/undoableDashboardLayout';\nimport logger from 'src/middleware/loggerMiddleware';\nimport saveModal from 'src/explore/reducers/saveModalReducer';\nimport explore from 'src/explore/reducers/exploreReducer';\nimport exploreDatasources from 'src/explore/reducers/datasourcesReducer';\nimport { DatasourcesState } from 'src/dashboard/types';\nimport {\n  DatasourcesActionPayload,\n  DatasourcesAction,\n} from 'src/dashboard/actions/datasources';\nimport shortid from 'shortid';\nimport {\n  BootstrapUser,\n  UndefinedUser,\n  UserWithPermissionsAndRoles,\n} from 'src/types/bootstrapTypes';\nimport { AnyDatasourcesAction } from 'src/explore/actions/datasourcesActions';\nimport { HydrateExplore } from 'src/explore/actions/hydrateExplore';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { Dataset } from '@superset-ui/chart-controls';\n\n// Some reducers don't do anything, and redux is just used to reference the initial \"state\".\n// This may change later, as the client application takes on more responsibilities.\nconst noopReducer =\n  <STATE = unknown>(initialState: STATE) =>\n  (state: STATE = initialState) =>\n    state;\n\nconst bootstrapData = getBootstrapData();\n\nexport const USER_LOADED = 'USER_LOADED';\n\nexport type UserLoadedAction = {\n  type: typeof USER_LOADED;\n  user: UserWithPermissionsAndRoles;\n};\n\nconst userReducer = (\n  user = bootstrapData.user || {},\n  action: UserLoadedAction,\n): BootstrapUser | UndefinedUser => {\n  if (action.type === USER_LOADED) {\n    return action.user;\n  }\n  return user;\n};\n\n// TODO: This reducer is a combination of the Dashboard and Explore reducers.\n// The correct way of handling this is to unify the actions and reducers from both\n// modules in shared files. This involves a big refactor to unify the parameter types\n// and move files around. We should tackle this in a specific PR.\nconst CombinedDatasourceReducers = (\n  datasources: DatasourcesState | undefined | { [key: string]: Dataset },\n  action: DatasourcesActionPayload | AnyDatasourcesAction | HydrateExplore,\n) => {\n  if (action.type === DatasourcesAction.SET_DATASOURCES) {\n    return dashboardDatasources(\n      datasources as DatasourcesState | undefined,\n      action as DatasourcesActionPayload,\n    );\n  }\n  return exploreDatasources(\n    datasources as { [key: string]: Dataset },\n    action as AnyDatasourcesAction | HydrateExplore,\n  );\n};\n\n// exported for tests\nexport const rootReducer = combineReducers({\n  messageToasts: messageToastReducer,\n  common: noopReducer(bootstrapData.common),\n  user: userReducer,\n  impressionId: noopReducer(shortid.generate()),\n  charts,\n  datasources: CombinedDatasourceReducers,\n  dashboardInfo,\n  dashboardFilters,\n  dataMask,\n  nativeFilters,\n  dashboardState,\n  dashboardLayout,\n  sliceEntities,\n  reports,\n  saveModal,\n  explore,\n});\n\nexport const store: Store = createStore(\n  rootReducer,\n  {},\n  compose(applyMiddleware(thunk, logger), initEnhancer(false)),\n);\n\n/* In some cases the jinja template injects two seperate React apps into basic.html\n * One for the top navigation Menu and one for the application below the Menu\n * The first app to connect to the Redux debugger wins which is the menu blocking\n * the application from being able to connect to the redux debugger.\n * setupStore with disableDebugger true enables the menu.tsx component to avoid connecting\n * to redux debugger so the application can connect to redux debugger\n */\nexport function setupStore(disableDegugger = false): Store {\n  return createStore(\n    rootReducer,\n    {},\n    compose(\n      applyMiddleware(thunk, logger),\n      initEnhancer(false, undefined, disableDegugger),\n    ),\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ADD_TOAST, REMOVE_TOAST } from './actions';\n\nexport default function messageToastsReducer(toasts = [], action) {\n  switch (action.type) {\n    case ADD_TOAST: {\n      const { payload: toast } = action;\n      const result = toasts.slice();\n      if (!toast.noDuplicate || !result.find(x => x.text === toast.text)) {\n        return [toast, ...toasts];\n      }\n      return toasts;\n    }\n\n    case REMOVE_TOAST: {\n      const {\n        payload: { id },\n      } = action;\n      return [...toasts].filter(toast => toast.id !== id);\n    }\n\n    default:\n      return toasts;\n  }\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { keyBy } from 'lodash';\nimport { DatasourcesState } from 'src/dashboard/types';\nimport {\n  DatasourcesActionPayload,\n  DatasourcesAction,\n} from '../actions/datasources';\n\nexport default function datasourcesReducer(\n  datasources: DatasourcesState | undefined,\n  action: DatasourcesActionPayload,\n) {\n  if (action.type === DatasourcesAction.SET_DATASOURCES) {\n    return {\n      ...datasources,\n      ...keyBy(action.datasources, 'uid'),\n    };\n  }\n  if (action.type === DatasourcesAction.SET_DATASOURCE) {\n    return {\n      ...datasources,\n      [action.key]: action.datasource,\n    };\n  }\n  return datasources || {};\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Dataset } from '@superset-ui/chart-controls';\nimport { getDatasourceUid } from 'src/utils/getDatasourceUid';\nimport {\n  AnyDatasourcesAction,\n  SET_DATASOURCE,\n} from '../actions/datasourcesActions';\nimport { HYDRATE_EXPLORE, HydrateExplore } from '../actions/hydrateExplore';\n\nexport default function datasourcesReducer(\n  // TODO: change type to include other datasource types\n  datasources: { [key: string]: Dataset },\n  action: AnyDatasourcesAction | HydrateExplore,\n) {\n  if (action.type === SET_DATASOURCE) {\n    return {\n      ...datasources,\n      [getDatasourceUid(action.datasource)]: action.datasource,\n    };\n  }\n  if (action.type === HYDRATE_EXPLORE) {\n    return { ...(action as HydrateExplore).data.datasources };\n  }\n  return datasources || {};\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  DASHBOARD_INFO_UPDATED,\n  SET_FILTER_BAR_ORIENTATION,\n  SET_CROSS_FILTERS_ENABLED,\n} from '../actions/dashboardInfo';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport default function dashboardStateReducer(state = {}, action) {\n  switch (action.type) {\n    case DASHBOARD_INFO_UPDATED:\n      return {\n        ...state,\n        ...action.newInfo,\n        // server-side compare last_modified_time in second level\n        last_modified_time: Math.round(new Date().getTime() / 1000),\n      };\n    case HYDRATE_DASHBOARD:\n      return {\n        ...state,\n        ...action.data.dashboardInfo,\n        // set async api call data\n      };\n    case SET_FILTER_BAR_ORIENTATION:\n      return {\n        ...state,\n        filterBarOrientation: action.filterBarOrientation,\n      };\n    case SET_CROSS_FILTERS_ENABLED:\n      return {\n        ...state,\n        crossFiltersEnabled: action.crossFiltersEnabled,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport {\n  ADD_SLICE,\n  ON_CHANGE,\n  ON_SAVE,\n  REMOVE_SLICE,\n  SET_COLOR_SCHEME,\n  SET_EDIT_MODE,\n  SET_MAX_UNDO_HISTORY_EXCEEDED,\n  SET_UNSAVED_CHANGES,\n  SHOW_BUILDER_PANE,\n  TOGGLE_EXPAND_SLICE,\n  TOGGLE_FAVE_STAR,\n  TOGGLE_PUBLISHED,\n  UPDATE_CSS,\n  SET_REFRESH_FREQUENCY,\n  ON_REFRESH,\n  ON_REFRESH_SUCCESS,\n  SET_DIRECT_PATH,\n  SET_FOCUSED_FILTER_FIELD,\n  UNSET_FOCUSED_FILTER_FIELD,\n  SET_ACTIVE_TABS,\n  SET_FULL_SIZE_CHART_ID,\n  ON_FILTERS_REFRESH,\n  ON_FILTERS_REFRESH_SUCCESS,\n  SET_DATASETS_STATUS,\n  SET_OVERRIDE_CONFIRM,\n  SAVE_DASHBOARD_STARTED,\n  SAVE_DASHBOARD_FINISHED,\n} from '../actions/dashboardState';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport default function dashboardStateReducer(state = {}, action) {\n  const actionHandlers = {\n    [HYDRATE_DASHBOARD]() {\n      return { ...state, ...action.data.dashboardState };\n    },\n    [UPDATE_CSS]() {\n      return { ...state, css: action.css };\n    },\n    [ADD_SLICE]() {\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.add(action.slice.slice_id);\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds),\n      };\n    },\n    [REMOVE_SLICE]() {\n      const { sliceId } = action;\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.delete(sliceId);\n\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds),\n      };\n    },\n    [TOGGLE_FAVE_STAR]() {\n      return { ...state, isStarred: action.isStarred };\n    },\n    [TOGGLE_PUBLISHED]() {\n      return { ...state, isPublished: action.isPublished };\n    },\n    [SET_EDIT_MODE]() {\n      return {\n        ...state,\n        editMode: action.editMode,\n      };\n    },\n    [SET_MAX_UNDO_HISTORY_EXCEEDED]() {\n      const { maxUndoHistoryExceeded = true } = action.payload;\n      return { ...state, maxUndoHistoryExceeded };\n    },\n    [SHOW_BUILDER_PANE]() {\n      return { ...state };\n    },\n    [SET_COLOR_SCHEME]() {\n      return {\n        ...state,\n        colorScheme: action.colorScheme,\n        updatedColorScheme: true,\n      };\n    },\n    [TOGGLE_EXPAND_SLICE]() {\n      const updatedExpandedSlices = { ...state.expandedSlices };\n      const { sliceId } = action;\n      if (updatedExpandedSlices[sliceId]) {\n        delete updatedExpandedSlices[sliceId];\n      } else {\n        updatedExpandedSlices[sliceId] = true;\n      }\n      return { ...state, expandedSlices: updatedExpandedSlices };\n    },\n    [ON_CHANGE]() {\n      return { ...state, hasUnsavedChanges: true };\n    },\n    [SAVE_DASHBOARD_STARTED]() {\n      return {\n        ...state,\n        dashboardIsSaving: true,\n      };\n    },\n    [SAVE_DASHBOARD_FINISHED]() {\n      return {\n        ...state,\n        dashboardIsSaving: false,\n      };\n    },\n    [ON_SAVE]() {\n      return {\n        ...state,\n        hasUnsavedChanges: false,\n        maxUndoHistoryExceeded: false,\n        editMode: false,\n        updatedColorScheme: false,\n        // server-side returns last_modified_time for latest change\n        lastModifiedTime: action.lastModifiedTime,\n      };\n    },\n    [SET_UNSAVED_CHANGES]() {\n      const { hasUnsavedChanges } = action.payload;\n      return { ...state, hasUnsavedChanges };\n    },\n    [SET_REFRESH_FREQUENCY]() {\n      return {\n        ...state,\n        refreshFrequency: action.refreshFrequency,\n        shouldPersistRefreshFrequency: action.isPersistent,\n        hasUnsavedChanges: action.isPersistent,\n      };\n    },\n    [ON_REFRESH]() {\n      return {\n        ...state,\n        isRefreshing: true,\n      };\n    },\n    [ON_FILTERS_REFRESH]() {\n      return {\n        ...state,\n        isFiltersRefreshing: true,\n      };\n    },\n    [ON_FILTERS_REFRESH_SUCCESS]() {\n      return {\n        ...state,\n        isFiltersRefreshing: false,\n      };\n    },\n    [ON_REFRESH_SUCCESS]() {\n      return {\n        ...state,\n        isRefreshing: false,\n      };\n    },\n    [SET_DIRECT_PATH]() {\n      return {\n        ...state,\n        directPathToChild: action.path,\n        directPathLastUpdated: Date.now(),\n      };\n    },\n    [SET_ACTIVE_TABS]() {\n      const newActiveTabs = new Set(state.activeTabs);\n      newActiveTabs.delete(action.prevTabId);\n      newActiveTabs.add(action.tabId);\n      return {\n        ...state,\n        activeTabs: Array.from(newActiveTabs),\n      };\n    },\n    [SET_OVERRIDE_CONFIRM]() {\n      return {\n        ...state,\n        overwriteConfirmMetadata: action.overwriteConfirmMetadata,\n      };\n    },\n    [SET_FOCUSED_FILTER_FIELD]() {\n      return {\n        ...state,\n        focusedFilterField: {\n          chartId: action.chartId,\n          column: action.column,\n        },\n      };\n    },\n    [UNSET_FOCUSED_FILTER_FIELD]() {\n      // dashboard only has 1 focused filter field at a time,\n      // but when user switch different filter boxes,\n      // browser didn't always fire onBlur and onFocus events in order.\n      if (\n        !state.focusedFilterField ||\n        action.chartId !== state.focusedFilterField.chartId ||\n        action.column !== state.focusedFilterField.column\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        focusedFilterField: null,\n      };\n    },\n    [SET_FULL_SIZE_CHART_ID]() {\n      return {\n        ...state,\n        fullSizeChartId: action.chartId,\n      };\n    },\n    [SET_DATASETS_STATUS]() {\n      return {\n        ...state,\n        datasetsStatus: action.status,\n      };\n    },\n  };\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { SET_REPORT, ADD_REPORT, EDIT_REPORT } from '../actions/reports';\n\nexport default function reportsReducer(state = {}, action) {\n  const actionHandlers = {\n    [SET_REPORT]() {\n      const { report, resourceId, creationMethod, filterField } = action;\n      // For now report count should only be one, but we are checking in case\n      // functionality changes.\n      const reportObject = report.result?.find(\n        report => report[filterField] === resourceId,\n      );\n\n      if (reportObject) {\n        return {\n          ...state,\n          [creationMethod]: {\n            ...state[creationMethod],\n            [resourceId]: reportObject,\n          },\n        };\n      }\n      if (state?.[creationMethod]?.[resourceId]) {\n        // remove the empty report from state\n        const newState = { ...state };\n        delete newState[creationMethod][resourceId];\n        return newState;\n      }\n      return { ...state };\n    },\n\n    [ADD_REPORT]() {\n      const { result, id } = action.json;\n      const report = { ...result, id };\n      const reportTypeId = report.dashboard || report.chart;\n      // this is the id of either the chart or the dashboard associated with the report.\n\n      return {\n        ...state,\n        [report.creation_method]: {\n          ...state[report.creation_method],\n          [reportTypeId]: report,\n        },\n      };\n    },\n\n    [EDIT_REPORT]() {\n      const report = {\n        ...action.json.result,\n        id: action.json.id,\n      };\n      const reportTypeId = report.dashboard || report.chart;\n\n      return {\n        ...state,\n        [report.creation_method]: {\n          ...state[report.creation_method],\n          [reportTypeId]: report,\n        },\n      };\n    },\n  };\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport * as actions from '../actions/saveModalActions';\nimport { HYDRATE_EXPLORE } from '../actions/hydrateExplore';\n\nexport default function saveModalReducer(state = {}, action) {\n  const actionHandlers = {\n    [actions.SET_SAVE_CHART_MODAL_VISIBILITY]() {\n      return { ...state, isVisible: action.isVisible };\n    },\n    [actions.FETCH_DASHBOARDS_SUCCEEDED]() {\n      return { ...state, dashboards: action.choices };\n    },\n    [actions.FETCH_DASHBOARDS_FAILED]() {\n      return {\n        ...state,\n        saveModalAlert: `fetching dashboards failed for ${action.userId}`,\n      };\n    },\n    [actions.SAVE_SLICE_FAILED]() {\n      return { ...state, saveModalAlert: 'Failed to save slice' };\n    },\n    [actions.SAVE_SLICE_SUCCESS](data) {\n      return { ...state, data };\n    },\n    [actions.REMOVE_SAVE_MODAL_ALERT]() {\n      return { ...state, saveModalAlert: null };\n    },\n    [HYDRATE_EXPLORE]() {\n      return { ...action.data.saveModal };\n    },\n  };\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { ensureIsArray } from '@superset-ui/core';\nimport { DYNAMIC_PLUGIN_CONTROLS_READY } from 'src/components/Chart/chartAction';\nimport { getControlsState } from 'src/explore/store';\nimport {\n  getControlConfig,\n  getControlStateFromControlConfig,\n  getControlValuesCompatibleWithDatasource,\n  StandardizedFormData,\n} from 'src/explore/controlUtils';\nimport * as actions from 'src/explore/actions/exploreActions';\nimport { HYDRATE_EXPLORE } from '../actions/hydrateExplore';\n\nexport default function exploreReducer(state = {}, action) {\n  const actionHandlers = {\n    [DYNAMIC_PLUGIN_CONTROLS_READY]() {\n      return {\n        ...state,\n        controls: action.controlsState,\n      };\n    },\n    [actions.TOGGLE_FAVE_STAR]() {\n      return {\n        ...state,\n        isStarred: action.isStarred,\n      };\n    },\n    [actions.POST_DATASOURCE_STARTED]() {\n      return {\n        ...state,\n        isDatasourceMetaLoading: true,\n      };\n    },\n    [actions.UPDATE_FORM_DATA_BY_DATASOURCE]() {\n      const newFormData = { ...state.form_data };\n      const { prevDatasource, newDatasource } = action;\n      const controls = { ...state.controls };\n      const controlsTransferred = [];\n\n      if (\n        prevDatasource.id !== newDatasource.id ||\n        prevDatasource.type !== newDatasource.type\n      ) {\n        newFormData.datasource = newDatasource.uid;\n      }\n      // reset control values for column/metric related controls\n      Object.entries(controls).forEach(([controlName, controlState]) => {\n        if (\n          // for direct column select controls\n          controlState.valueKey === 'column_name' ||\n          // for all other controls\n          'savedMetrics' in controlState ||\n          'columns' in controlState ||\n          ('options' in controlState && !Array.isArray(controlState.options))\n        ) {\n          newFormData[controlName] = getControlValuesCompatibleWithDatasource(\n            newDatasource,\n            controlState,\n            controlState.value,\n          );\n          if (\n            ensureIsArray(newFormData[controlName]).length > 0 &&\n            newFormData[controlName] !== controls[controlName].default\n          ) {\n            controlsTransferred.push(controlName);\n          }\n        }\n      });\n\n      const newState = {\n        ...state,\n        controls,\n        datasource: action.newDatasource,\n      };\n      return {\n        ...newState,\n        form_data: newFormData,\n        controls: getControlsState(newState, newFormData),\n        controlsTransferred,\n      };\n    },\n    [actions.FETCH_DATASOURCES_STARTED]() {\n      return {\n        ...state,\n        isDatasourcesLoading: true,\n      };\n    },\n    [actions.SET_FIELD_VALUE]() {\n      const { controlName, value, validationErrors } = action;\n      let new_form_data = { ...state.form_data, [controlName]: value };\n      const old_metrics_data = state.form_data.metrics;\n      const new_column_config = state.form_data.column_config;\n\n      const vizType = new_form_data.viz_type;\n\n      // if the controlName is metrics, and the metric column name is updated,\n      // need to update column config as well to keep the previou config.\n      if (controlName === 'metrics' && old_metrics_data && new_column_config) {\n        value.forEach((item, index) => {\n          if (\n            item?.label !== old_metrics_data[index]?.label &&\n            !!new_column_config[old_metrics_data[index]?.label]\n          ) {\n            new_column_config[item.label] =\n              new_column_config[old_metrics_data[index].label];\n\n            delete new_column_config[old_metrics_data[index].label];\n          }\n        });\n        new_form_data.column_config = new_column_config;\n      }\n\n      // Use the processed control config (with overrides and everything)\n      // if `controlName` does not existing in current controls,\n      const controlConfig =\n        state.controls[action.controlName] ||\n        getControlConfig(action.controlName, vizType) ||\n        {};\n\n      // will call validators again\n      const control = {\n        ...getControlStateFromControlConfig(controlConfig, state, action.value),\n      };\n\n      const column_config = {\n        ...state.controls.column_config,\n        ...(new_column_config && { value: new_column_config }),\n      };\n\n      const newState = {\n        ...state,\n        controls: {\n          ...state.controls,\n          [controlName]: control,\n          ...(controlName === 'metrics' && { column_config }),\n        },\n      };\n\n      const rerenderedControls = {};\n      if (Array.isArray(control.rerender)) {\n        control.rerender.forEach(controlName => {\n          rerenderedControls[controlName] = {\n            ...getControlStateFromControlConfig(\n              newState.controls[controlName],\n              newState,\n              newState.controls[controlName].value,\n            ),\n          };\n        });\n      }\n\n      // combine newly detected errors with errors from `onChange` event of\n      // each control component (passed via reducer action).\n      const errors = control.validationErrors || [];\n      (validationErrors || []).forEach(err => {\n        // skip duplicated errors\n        if (!errors.includes(err)) {\n          errors.push(err);\n        }\n      });\n      const hasErrors = errors && errors.length > 0;\n\n      const isVizSwitch =\n        action.controlName === 'viz_type' &&\n        action.value !== state.controls.viz_type.value;\n      let currentControlsState = state.controls;\n      if (isVizSwitch) {\n        // get StandardizedFormData from source form_data\n        const sfd = new StandardizedFormData(state.form_data);\n        const transformed = sfd.transform(action.value, state);\n        new_form_data = transformed.formData;\n        currentControlsState = transformed.controlsState;\n      }\n\n      return {\n        ...state,\n        form_data: new_form_data,\n        triggerRender: control.renderTrigger && !hasErrors,\n        controls: {\n          ...currentControlsState,\n          [action.controlName]: {\n            ...control,\n            validationErrors: errors,\n          },\n          ...rerenderedControls,\n        },\n      };\n    },\n    [actions.SET_EXPLORE_CONTROLS]() {\n      return {\n        ...state,\n        controls: getControlsState(state, action.formData),\n      };\n    },\n    [actions.SET_FORM_DATA]() {\n      return {\n        ...state,\n        form_data: action.formData,\n      };\n    },\n    [actions.UPDATE_CHART_TITLE]() {\n      return {\n        ...state,\n        sliceName: action.sliceName,\n      };\n    },\n    [actions.SET_SAVE_ACTION]() {\n      return {\n        ...state,\n        saveAction: action.saveAction,\n      };\n    },\n    [actions.CREATE_NEW_SLICE]() {\n      return {\n        ...state,\n        slice: action.slice,\n        controls: getControlsState(state, action.form_data),\n        can_add: action.can_add,\n        can_download: action.can_download,\n        can_overwrite: action.can_overwrite,\n      };\n    },\n    [actions.SLICE_UPDATED]() {\n      return {\n        ...state,\n        slice: {\n          ...state.slice,\n          ...action.slice,\n          owners: action.slice.owners\n            ? action.slice.owners.map(owner => owner.value)\n            : null,\n        },\n        sliceName: action.slice.slice_name ?? state.sliceName,\n        metadata: {\n          ...state.metadata,\n          owners: action.slice.owners\n            ? action.slice.owners.map(owner => owner.label)\n            : null,\n        },\n      };\n    },\n    [actions.SET_FORCE_QUERY]() {\n      return {\n        ...state,\n        force: action.force,\n      };\n    },\n    [HYDRATE_EXPLORE]() {\n      return {\n        ...action.data.explore,\n      };\n    },\n  };\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}\n"],"names":["ADHOC_FILTER_REGEX","FETCH_DASHBOARDS_SUCCEEDED","fetchDashboardsSucceeded","choices","type","FETCH_DASHBOARDS_FAILED","fetchDashboardsFailed","userId","SET_SAVE_CHART_MODAL_VISIBILITY","setSaveChartModalVisibility","isVisible","fetchDashboards","dispatch","SupersetClient","endpoint","then","json","pks","map","id","index","value","label","result","dashboard_title","sort","a","b","localeCompare","sensitivity","numeric","catch","SAVE_SLICE_FAILED","saveSliceFailed","SAVE_SLICE_SUCCESS","saveSliceSuccess","data","REMOVE_SAVE_MODAL_ALERT","removeSaveModalAlert","getSlicePayload","sliceName","formDataWithNativeFilters","dashboards","owners","adhocFilters","Object","entries","reduce","acc","key","test","filter","f","isExtra","formData","datasourceId","datasourceType","datasource","split","params","JSON","stringify","slice_name","viz_type","datasource_id","parseInt","datasource_type","query_context","buildV1ChartDataPayload","force","resultFormat","resultType","setDataMask","ownState","addToasts","isNewSlice","addedToDashboard","toasts","push","addSuccessToast","t","new","title","updateSlice","slice_id","sliceId","getState","explore","form_data","url_params","_","response","jsonPayload","error","createSlice","async","createDashboard","dashboardName","getDashboard","dashboardId","getSliceDashboards","slice","rison","columns","SET_DATASOURCE","setDatasource","changeDatasource","newDatasource","prevDatasource","updateFormDataByDatasource","datasourcesActions","saveDataset","schema","sql","database","templateParams","datasourceName","postPayload","dbId","metrics","getClientErrorObject","e","addDangerToast","FAVESTAR_BASE_URL","UPDATE_FORM_DATA_BY_DATASOURCE","POST_DATASOURCE_STARTED","FETCH_DATASOURCE_SUCCEEDED","fetchDatasourceSucceeded","FETCH_DATASOURCES_STARTED","fetchDatasourcesStarted","FETCH_DATASOURCES_SUCCEEDED","fetchDatasourcesSucceeded","TOGGLE_FAVE_STAR","toggleFaveStar","isStarred","FETCH_FAVE_STAR","fetchFaveStar","count","SAVE_FAVE_STAR","saveFaveStar","urlSuffix","SET_FIELD_VALUE","setControlValue","controlName","validationErrors","SET_EXPLORE_CONTROLS","setExploreControls","SET_FORM_DATA","setFormData","UPDATE_CHART_TITLE","updateChartTitle","SET_SAVE_ACTION","setSaveAction","saveAction","CREATE_NEW_SLICE","createNewSlice","can_add","can_download","can_overwrite","SLICE_UPDATED","sliceUpdated","SET_FORCE_QUERY","setForceQuery","exploreActions","toastActions","componentIsResizable","entity","COLUMN_TYPE","CHART_TYPE","MARKDOWN_TYPE","DYNAMIC_TYPE","indexOf","typeToWrapChildLookup","DASHBOARD_GRID_TYPE","TAB_TYPE","shouldWrapChildInRow","parentType","childType","wrapChildLookup","Boolean","newEntitiesFromDrop","dropResult","layout","dragging","destination","dragType","dropEntity","dropType","newDropChild","newComponentFactory","meta","parents","concat","width","getComponentWidthFromDrop","undefined","wrapChildInRow","newEntities","rowWrapper","ROW_TYPE","children","TABS_TYPE","tabChild","nextDropChildren","splice","recursivelyDeleteChildren","componentId","componentParentId","nextComponents","component","forEach","childId","parent","Array","isArray","componentIndex","nextChildren","actionHandlers","HYDRATE_DASHBOARD","state","action","dashboardLayout","present","UPDATE_COMPONENTS","payload","DELETE_COMPONENT","parentId","nextParent","length","findParentId","CREATE_COMPONENT","MOVE_COMPONENT","source","nextEntities","entitiesMap","current","next","target","reordered","list","startIndex","endIndex","removed","reorder","reorderItem","nextWidth","destinationEntity","destinationChildren","newRow","CREATE_TOP_LEVEL_TABS","rootComponent","DASHBOARD_ROOT_ID","topLevelId","topLevelComponent","NEW_COMPONENTS_SOURCE_ID","draggingTabId","draggingTab","childrenToMove","newEntitiesArray","values","tabComponent","find","tabsComponent","DELETE_TOP_LEVEL_TABS","topLevelTabs","tabId","DASHBOARD_GRID_ID","UPDATE_COMPONENTS_PARENTS_LIST","nextState","updateComponentParentsList","currentComponent","DASHBOARD_TITLE_CHANGED","DASHBOARD_HEADER_ID","text","undoable","handler","limit","UNDO_LIMIT","ignoreInitialState","includeAction","RESIZE_COMPONENT","HANDLE_COMPONENT_DROP","logMessageQueue","constructor","callback","sizeThreshold","delayThreshold","this","queue","trigger","bind","append","eventData","events","call","source_id","navigator","sendBeacon","FormData","safeStringify","parseMethod","lastEventId","store","LOG_EVENT","dashboardInfo","impressionId","sqlLab","logMetadata","impression_id","version","editor","queryEditors","tabHistory","db_id","eventName","ts","Date","getTime","event_name","LOG_EVENT_TYPE_TIMING","event_type","trigger_event","shortid","event_id","visibility","document","visibilityState","target_id","target_name","chartId","noopReducer","initialState","bootstrapData","getBootstrapData","USER_LOADED","rootReducer","combineReducers","messageToasts","ADD_TOAST","toast","noDuplicate","x","REMOVE_TOAST","common","user","charts","datasources","DatasourcesAction","dashboardDatasources","getDatasourceUid","HYDRATE_EXPLORE","exploreDatasources","DASHBOARD_INFO_UPDATED","newInfo","last_modified_time","Math","round","SET_FILTER_BAR_ORIENTATION","filterBarOrientation","SET_CROSS_FILTERS_ENABLED","crossFiltersEnabled","dashboardFilters","dataMask","nativeFilters","dashboardState","UPDATE_CSS","css","ADD_SLICE","updatedSliceIds","Set","sliceIds","add","from","REMOVE_SLICE","delete","TOGGLE_PUBLISHED","isPublished","SET_EDIT_MODE","editMode","SET_MAX_UNDO_HISTORY_EXCEEDED","maxUndoHistoryExceeded","SHOW_BUILDER_PANE","SET_COLOR_SCHEME","colorScheme","updatedColorScheme","TOGGLE_EXPAND_SLICE","updatedExpandedSlices","expandedSlices","ON_CHANGE","hasUnsavedChanges","SAVE_DASHBOARD_STARTED","dashboardIsSaving","SAVE_DASHBOARD_FINISHED","ON_SAVE","lastModifiedTime","SET_UNSAVED_CHANGES","SET_REFRESH_FREQUENCY","refreshFrequency","shouldPersistRefreshFrequency","isPersistent","ON_REFRESH","isRefreshing","ON_FILTERS_REFRESH","isFiltersRefreshing","ON_FILTERS_REFRESH_SUCCESS","ON_REFRESH_SUCCESS","SET_DIRECT_PATH","directPathToChild","path","directPathLastUpdated","now","SET_ACTIVE_TABS","newActiveTabs","activeTabs","prevTabId","SET_OVERRIDE_CONFIRM","overwriteConfirmMetadata","SET_FOCUSED_FILTER_FIELD","focusedFilterField","column","UNSET_FOCUSED_FILTER_FIELD","SET_FULL_SIZE_CHART_ID","fullSizeChartId","SET_DATASETS_STATUS","datasetsStatus","status","sliceEntities","reports","SET_REPORT","report","resourceId","creationMethod","filterField","reportObject","newState","ADD_REPORT","reportTypeId","dashboard","chart","creation_method","EDIT_REPORT","saveModal","actions","saveModalAlert","DYNAMIC_PLUGIN_CONTROLS_READY","controls","controlsState","isDatasourceMetaLoading","newFormData","controlsTransferred","uid","controlState","valueKey","options","getControlValuesCompatibleWithDatasource","ensureIsArray","default","getControlsState","isDatasourcesLoading","new_form_data","old_metrics_data","new_column_config","column_config","vizType","item","controlConfig","getControlConfig","control","getControlStateFromControlConfig","rerenderedControls","rerender","errors","err","hasErrors","isVizSwitch","currentControlsState","transformed","StandardizedFormData","transform","triggerRender","renderTrigger","owner","metadata","createStore","compose","applyMiddleware","thunk","logger","initEnhancer","setupStore","disableDegugger"],"sourceRoot":""}