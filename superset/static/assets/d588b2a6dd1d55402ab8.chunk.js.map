{"version":3,"file":"d588b2a6dd1d55402ab8.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/Pie/EchartsPie.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/utils/eventHandlers.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { PieChartTransformedProps } from './types';\nimport Echart from '../components/Echart';\nimport { allEventHandlers } from '../utils/eventHandlers';\n\nexport default function EchartsPie(props: PieChartTransformedProps) {\n  const { height, width, echartOptions, selectedValues, refs } = props;\n\n  const eventHandlers = allEventHandlers(props);\n\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n      eventHandlers={eventHandlers}\n      selectedValues={selectedValues}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n} from 'react';\nimport { styled } from '@superset-ui/core';\nimport { ECharts, init } from 'echarts';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: React.Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<ECharts>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  BinaryQueryObjectFilterClause,\n  ContextMenuFilters,\n  DataMask,\n  QueryFormColumn,\n} from '@superset-ui/core';\nimport {\n  BaseTransformedProps,\n  CrossFilterTransformedProps,\n  EventHandlers,\n} from '../types';\n\nexport type Event = {\n  name: string;\n  event: { stop: () => void; event: PointerEvent };\n};\n\nconst getCrossFilterDataMask =\n  (\n    selectedValues: Record<number, string>,\n    groupby: QueryFormColumn[],\n    labelMap: Record<string, string[]>,\n  ) =>\n  (value: string) => {\n    const selected = Object.values(selectedValues);\n    let values: string[];\n    if (selected.includes(value)) {\n      values = selected.filter(v => v !== value);\n    } else {\n      values = [value];\n    }\n\n    const groupbyValues = values.map(value => labelMap[value]);\n\n    return {\n      dataMask: {\n        extraFormData: {\n          filters:\n            values.length === 0\n              ? []\n              : groupby.map((col, idx) => {\n                  const val = groupbyValues.map(v => v[idx]);\n                  if (val === null || val === undefined)\n                    return {\n                      col,\n                      op: 'IS NULL' as const,\n                    };\n                  return {\n                    col,\n                    op: 'IN' as const,\n                    val: val as (string | number | boolean)[],\n                  };\n                }),\n        },\n        filterState: {\n          value: groupbyValues.length ? groupbyValues : null,\n          selectedValues: values.length ? values : null,\n        },\n      },\n      isCurrentValueSelected: selected.includes(value),\n    };\n  };\n\nexport const clickEventHandler =\n  (\n    getCrossFilterDataMask: (\n      value: string,\n    ) => ContextMenuFilters['crossFilter'],\n    setDataMask: (dataMask: DataMask) => void,\n    emitCrossFilters?: boolean,\n  ) =>\n  ({ name }: { name: string }) => {\n    if (!emitCrossFilters) {\n      return;\n    }\n    const dataMask = getCrossFilterDataMask(name)?.dataMask;\n    if (dataMask) {\n      setDataMask(dataMask);\n    }\n  };\n\nexport const contextMenuEventHandler =\n  (\n    groupby: (BaseTransformedProps<any> &\n      CrossFilterTransformedProps)['groupby'],\n    onContextMenu: BaseTransformedProps<any>['onContextMenu'],\n    labelMap: Record<string, string[]>,\n    getCrossFilterDataMask: (\n      value: string,\n    ) => ContextMenuFilters['crossFilter'],\n  ) =>\n  (e: Event) => {\n    if (onContextMenu) {\n      e.event.stop();\n      const pointerEvent = e.event.event;\n      const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n      if (groupby.length > 0) {\n        const values = labelMap[e.name];\n        groupby.forEach((dimension, i) =>\n          drillToDetailFilters.push({\n            col: dimension,\n            op: '==',\n            val: values[i],\n            formattedVal: String(values[i]),\n          }),\n        );\n      }\n      onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n        drillToDetail: drillToDetailFilters,\n        crossFilter: getCrossFilterDataMask(e.name),\n      });\n    }\n  };\n\nexport const allEventHandlers = (\n  transformedProps: BaseTransformedProps<any> & CrossFilterTransformedProps,\n) => {\n  const {\n    groupby,\n    onContextMenu,\n    setDataMask,\n    labelMap,\n    emitCrossFilters,\n    selectedValues,\n  } = transformedProps;\n  const eventHandlers: EventHandlers = {\n    click: clickEventHandler(\n      getCrossFilterDataMask(selectedValues, groupby, labelMap),\n      setDataMask,\n      emitCrossFilters,\n    ),\n    contextmenu: contextMenuEventHandler(\n      groupby,\n      onContextMenu,\n      labelMap,\n      getCrossFilterDataMask(selectedValues, groupby, labelMap),\n    ),\n  };\n  return eventHandlers;\n};\n"],"names":["EchartsPie","props","height","width","echartOptions","selectedValues","refs","eventHandlers","allEventHandlers","Styles","styled","Echart","ref","zrEventHandlers","divRef","useRef","chartRef","currentSelection","useMemo","Object","keys","previousSelection","useImperativeHandle","getEchartInstance","current","useEffect","init","entries","forEach","name","handler","off","on","getZr","setOption","dispatchAction","type","dataIndex","filter","value","length","handleSizeChange","useCallback","resize","dispose","useLayoutEffect","forwardRef","getCrossFilterDataMask","groupby","labelMap","selected","values","v","groupbyValues","map","dataMask","extraFormData","filters","col","idx","val","op","filterState","isCurrentValueSelected","clickEventHandler","setDataMask","emitCrossFilters","contextMenuEventHandler","onContextMenu","e","event","stop","pointerEvent","drillToDetailFilters","dimension","i","push","formattedVal","String","clientX","clientY","drillToDetail","crossFilter","transformedProps","click","contextmenu"],"sourceRoot":""}