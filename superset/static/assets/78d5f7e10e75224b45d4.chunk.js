(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[3831],{21497:(e,t,n)=>{"use strict";n.d(t,{Z:()=>de});var i=n(78918),o=n(80744),s=n(98452),r=n(95772),a=n(93844),l=n(51331),c=n(1113),u=n(53982),g=n(95432),d=n(1953),f=n(4912),h=n(98949),p=n(73838),y=n(38550);const x=()=>{},m={10241:9987,10240:9729,10242:33071,10243:33071};function v(e,t,n,i){return n===t.width&&i===t.height?t:(e.canvas.height=i,e.canvas.width=n,e.clearRect(0,0,e.canvas.width,e.canvas.height),e.drawImage(t,0,0,t.width,t.height,0,0,n,i),e.canvas)}function _(e){return e&&(e.id||e.url)}function b(e,t,n){for(let i=0;i<t.length;i++){const{icon:o,xOffset:s}=t[i];e[_(o)]={...o,x:s,y:n}}}class P{constructor(e,{onUpdate:t=x,onError:n=x}){this.gl=e,this.onUpdate=t,this.onError=n,this._loadOptions=null,this._getIcon=null,this._texture=null,this._externalTexture=null,this._mapping={},this._pendingCount=0,this._autoPacking=!1,this._xOffset=0,this._yOffset=0,this._rowHeight=0,this._buffer=4,this._canvasWidth=1024,this._canvasHeight=0,this._canvas=null}finalize(){var e;null===(e=this._texture)||void 0===e||e.delete()}getTexture(){return this._texture||this._externalTexture}getIconMapping(e){const t=this._autoPacking?_(e):e;return this._mapping[t]||{}}setProps({loadOptions:e,autoPacking:t,iconAtlas:n,iconMapping:i,data:o,getIcon:s}){e&&(this._loadOptions=e),void 0!==t&&(this._autoPacking=t),s&&(this._getIcon=s),i&&(this._mapping=i),n&&this._updateIconAtlas(n),this._autoPacking&&(o||s)&&"undefined"!=typeof document&&(this._canvas=this._canvas||document.createElement("canvas"),this._updateAutoPacking(o))}get isLoaded(){return 0===this._pendingCount}_updateIconAtlas(e){var t;null===(t=this._texture)||void 0===t||t.delete(),this._texture=null,this._externalTexture=e,this.onUpdate()}_updateAutoPacking(e){const t=Object.values(function(e,t,n){if(!e||!t)return null;n=n||{};const i={},{iterable:o,objectInfo:s}=(0,y.jB)(e);for(const e of o){s.index++;const o=t(e,s),r=_(o);if(!o)throw new Error("Icon is missing.");if(!o.url)throw new Error("Icon url is missing.");i[r]||n[r]&&o.url===n[r].url||(i[r]={...o,source:e,sourceIndex:s.index})}return i}(e,this._getIcon,this._mapping)||{});if(t.length>0){const{mapping:e,xOffset:n,yOffset:i,rowHeight:o,canvasHeight:s}=function({icons:e,buffer:t,mapping:n={},xOffset:i=0,yOffset:o=0,rowHeight:s=0,canvasWidth:r}){let a=[];for(let l=0;l<e.length;l++){const c=e[l];if(!n[_(c)]){const{height:e,width:l}=c;i+l+t>r&&(b(n,a,o),i=0,o=s+o+t,s=0,a=[]),a.push({icon:c,xOffset:i}),i=i+l+t,s=Math.max(s,e)}}return a.length>0&&b(n,a,o),{mapping:n,rowHeight:s,xOffset:i,yOffset:o,canvasWidth:r,canvasHeight:(l=s+o+t,Math.pow(2,Math.ceil(Math.log2(l))))};var l}({icons:t,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset});this._rowHeight=o,this._mapping=e,this._xOffset=n,this._yOffset=i,this._canvasHeight=s,this._texture||(this._texture=new f.Z(this.gl,{width:this._canvasWidth,height:this._canvasHeight,parameters:m})),this._texture.height!==this._canvasHeight&&(this._texture=function(e,t,n,i){const o=t.width,s=t.height,r=(0,g.h)(t,{width:n,height:i});return(0,d.Lv)(t,r,{targetY:0,width:o,height:s}),t.delete(),r}(this.gl,this._texture,this._canvasWidth,this._canvasHeight)),this.onUpdate(),this._loadIcons(t)}}_loadIcons(e){const t=this._canvas.getContext("2d");for(const n of e)this._pendingCount++,(0,p.z)(n.url,h.S,this._loadOptions).then((e=>{const i=_(n),{x:o,y:s,width:r,height:a}=this._mapping[i],l=v(t,e,r,a);this._texture.setSubImageData({data:l,x:o,y:s,width:r,height:a}),this._texture.generateMipmap(),this.onUpdate()})).catch((e=>{this.onError({url:n.url,source:n.source,sourceIndex:n.sourceIndex,loadOptions:this._loadOptions,error:e})})).finally((()=>{this._pendingCount--}))}}const C=[0,0,0,255],S={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:e=>e.position},getIcon:{type:"accessor",value:e=>e.icon},getColor:{type:"accessor",value:C},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},onIconError:{type:"function",value:null,compare:!1,optional:!0}};class M extends r.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME icon-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute vec4 instanceIconFrames;\nattribute float instanceColorModes;\nattribute vec2 instanceOffsets;\nattribute vec2 instancePixelOffset;\n\nuniform float sizeScale;\nuniform vec2 iconsTextureDim;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform bool billboard;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = angle * PI / 180.0;\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n\n  vec2 iconSize = instanceIconFrames.zw;\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale), \n    sizeMinPixels, sizeMaxPixels\n  );\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\n  pixelOffset += instancePixelOffset;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTextureCoords = mix(\n    instanceIconFrames.xy,\n    instanceIconFrames.xy + iconSize,\n    (positions.xy + 1.0) / 2.0\n  ) / iconsTextureDim;\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n\n  vColorMode = instanceColorModes;\n}\n",fs:"#define SHADER_NAME icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float alphaCutoff;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\n  float a = texColor.a * opacity * vColor.a;\n\n  if (a < alphaCutoff) {\n    discard;\n  }\n\n  gl_FragColor = vec4(color, a);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[a.Z,l.Z]})}initializeState(){this.state={iconManager:new P(this.context.gl,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})},this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:5121,accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:C},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState({oldProps:e,props:t,changeFlags:n}){super.updateState({props:t,oldProps:e,changeFlags:n});const i=this.getAttributeManager(),{iconAtlas:o,iconMapping:s,data:r,getIcon:a}=t,{iconManager:l}=this.state;l.setProps({loadOptions:t.loadOptions});let c=!1;if(o||this.internalState.isAsyncPropLoading("iconAtlas")?(e.iconAtlas!==t.iconAtlas&&l.setProps({iconAtlas:o,autoPacking:!1}),e.iconMapping!==t.iconMapping&&(l.setProps({iconMapping:s}),c=!0)):l.setProps({autoPacking:!0}),(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getIcon))&&l.setProps({data:r,getIcon:a}),c&&(i.invalidate("instanceOffsets"),i.invalidate("instanceIconFrames"),i.invalidate("instanceColorModes")),n.extensionsChanged){var u;const{gl:e}=this.context;null===(u=this.state.model)||void 0===u||u.delete(),this.state.model=this._getModel(e),i.invalidateAll()}}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(){super.finalizeState(),this.state.iconManager.finalize()}draw({uniforms:e}){const{sizeScale:t,sizeMinPixels:n,sizeMaxPixels:i,sizeUnits:o,billboard:s,alphaCutoff:r}=this.props,{iconManager:a}=this.state,{viewport:l}=this.context,c=a.getTexture();c&&this.state.model.setUniforms(e).setUniforms({iconsTexture:c,iconsTextureDim:[c.width,c.height],sizeScale:t*("pixels"===o?l.metersPerPixel:1),sizeMinPixels:n,sizeMaxPixels:i,billboard:s,alphaCutoff:r}).draw()}_getModel(e){return new c.Z(e,{...this.getShaders(),id:this.props.id,geometry:new u.Z({drawMode:6,attributes:{positions:{size:2,value:new Float32Array([-1,-1,-1,1,1,1,1,-1])}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(e){const{onIconError:t}=this.getCurrentLayer().props;t?t(e):o.Z.error(e.error)()}getInstanceOffset(e){const t=this.state.iconManager.getIconMapping(e);return[t.width/2-t.anchorX||0,t.height/2-t.anchorY||0]}getInstanceColorMode(e){return this.state.iconManager.getIconMapping(e).mask?1:0}getInstanceIconFrame(e){const t=this.state.iconManager.getIconMapping(e);return[t.x||0,t.y||0,t.width||0,t.height||0]}}M.layerName="IconLayer",M.defaultProps=S;var z=n(28569);const L=[];class O extends M{getShaders(){return{...super.getShaders(),fs:"#define SHADER_NAME multi-icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float gamma;\nuniform bool sdf;\nuniform float alphaCutoff;\nuniform float buffer;\nuniform float outlineBuffer;\nuniform vec4 outlineColor;\n\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  if (!picking_uActive) {\n    float alpha = texture2D(iconsTexture, vTextureCoords).a;\n    vec4 color = vColor;\n    if (sdf) {\n      float distance = alpha;\n      alpha = smoothstep(buffer - gamma, buffer + gamma, distance);\n\n      if (outlineBuffer > 0.0) {\n        float inFill = alpha;\n        float inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\n        color = mix(outlineColor, vColor, inFill);\n        alpha = inBorder;\n      }\n    }\n    float a = alpha * color.a;\n    \n    if (a < alphaCutoff) {\n      discard;\n    }\n\n    gl_FragColor = vec4(color.rgb, a * opacity);\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n"}}initializeState(){super.initializeState(),this.getAttributeManager().addInstanced({instanceOffsets:{size:2,accessor:"getIconOffsets"},instancePickingColors:{type:5121,size:3,accessor:(e,{index:t,target:n})=>this.encodePickingColor(t,n)}})}updateState(e){super.updateState(e);const{props:t,oldProps:n}=e;let{outlineColor:i}=t;i!==n.outlineColor&&(i=i.map((e=>e/255)),i[3]=Number.isFinite(i[3])?i[3]:1,this.setState({outlineColor:i})),!t.sdf&&t.outlineWidth&&o.Z.warn("".concat(this.id,": fontSettings.sdf is required to render outline"))()}draw(e){const{sdf:t,smoothing:n,outlineWidth:i}=this.props,{outlineColor:o}=this.state;e.uniforms={...e.uniforms,buffer:.75,outlineBuffer:i?Math.max(n,.75*(1-i)):-1,gamma:n,sdf:Boolean(t),outlineColor:o},super.draw(e)}getInstanceOffset(e){return e?Array.from(e).map((e=>super.getInstanceOffset(e))):L}getInstanceColorMode(e){return 1}getInstanceIconFrame(e){return e?Array.from(e).map((e=>super.getInstanceIconFrame(e))):L}}O.layerName="MultiIconLayer",O.defaultProps={getIconOffsets:{type:"accessor",value:e=>e.offsets},alphaCutoff:.001,smoothing:.1,outlineWidth:0,outlineColor:{type:"color",value:[0,0,0,255]}};var F=n(49296),w=n.n(F);const A=[];function I(e,t,n,i){let o=0;for(let s=t;s<n;s++){const t=e[s];let n=null;const r=i&&i[t];r&&(n=r.width),o+=n}return o}function T(e,t,n,i,o,s){let r=t,a=0;for(let l=t;l<n;l++){const t=I(e,l,l+1,o);a+t>i&&(r<l&&s.push(l),r=l,a=0),a+=t}return a}function k(e,t,n,i,o=0,s){void 0===s&&(s=e.length);const r=[];return"break-all"===t?T(e,o,s,n,i,r):function(e,t,n,i,o,s){let r=t,a=t,l=t,c=0;for(let u=t;u<n;u++)if(" "===e[u]?l=u+1:" "!==e[u+1]&&u+1!==n||(l=u+1),l>a){let t=I(e,a,l,o);c+t>i&&(r<a&&(s.push(a),r=a,c=0),t>i&&(t=T(e,a,l,i,o,s),r=s[s.length-1])),a=l,c+=t}}(e,o,s,n,i,r),r}function E(e,t,n,i,s,r){let a=0,l=0;for(let r=t;r<n;r++){const t=e[r],n=i[t];n?(l||(l=n.height),s[r]=a+n.width/2,a+=n.width):(o.Z.warn("Missing character: ".concat(t," (").concat(t.codePointAt(0),")"))(),s[r]=a,a+=32)}r[0]=a,r[1]=l}function W(e,t,n,i,o){const s=(e=Array.from(e)).length,r=new Array(s),a=new Array(s),l=new Array(s),c=("break-word"===n||"break-all"===n)&&isFinite(i)&&i>0,u=[0,0],g=[];let d=0,f=0,h=0;for(let p=0;p<=s;p++){const y=e[p];if("\n"!==y&&p!==s||(h=p),h>f){const s=c?k(e,n,i,o,f,h):A;for(let n=0;n<=s.length;n++){const i=0===n?f:s[n-1],c=n<s.length?s[n]:h;E(e,i,c,o,r,g);for(let e=i;e<c;e++)a[e]=d+g[1]/2,l[e]=g[0];d+=g[1]*t,u[0]=Math.max(u[0],g[0])}f=h}"\n"===y&&(r[f]=0,a[f]=0,l[f]=0,f++)}return u[1]=d,{x:r,y:a,rowWidth:l,size:u}}const R=function(){const e=[];for(let t=32;t<128;t++)e.push(String.fromCharCode(t));return e}(),B="Monaco, monospace",j="normal",D=new class{constructor(e=5){this.limit=e,this.clear()}clear(){this._cache={},this._order=[]}get(e){const t=this._cache[e];return t&&(this._deleteOrder(e),this._appendOrder(e)),t}set(e,t){this._cache[e]?(this.delete(e),this._cache[e]=t,this._appendOrder(e)):(Object.keys(this._cache).length===this.limit&&this.delete(this._order[0]),this._cache[e]=t,this._appendOrder(e))}delete(e){this._cache[e]&&(this._deleteCache(e),this._deleteOrder(e))}_deleteCache(e){delete this._cache[e]}_deleteOrder(e){const t=this._order.findIndex((t=>t===e));t>=0&&this._order.splice(t,1)}_appendOrder(e){this._order.push(e)}}(3),U=["fontFamily","fontWeight","characterSet","fontSize","sdf","buffer","cutoff","radius"];function N(e,t){for(let n=0;n<e.length;n++)t.data[4*n+3]=e[n]}function Z(e,t,n,i){e.font="".concat(i," ").concat(n,"px ").concat(t),e.fillStyle="#000",e.textBaseline="baseline",e.textAlign="left"}class G{constructor(){this.props={fontFamily:B,fontWeight:j,characterSet:R,fontSize:64,buffer:4,sdf:!1,cutoff:.25,radius:12},this._key=null,this._atlas=null}get texture(){return this._atlas}get mapping(){return this._atlas&&this._atlas.mapping}get scale(){return 1.2}setProps(e={}){U.forEach((t=>{t in e&&(this.props[t]=e[t])}));const t=this._key;this._key=this._getKey();const n=function(e,t){const n=D.get(e);if(!n)return t;const i=[],o=n.mapping;let s=Object.keys(o);s=new Set(s);let r=t;return r instanceof Array&&(r=new Set(r)),r.forEach((e=>{s.has(e)||i.push(e)})),i}(this._key,this.props.characterSet),i=D.get(this._key);if(i&&0===n.length)return void(this._key!==t&&(this._atlas=i));const o=this._generateFontAtlas(this._key,n,i);this._atlas=o,D.set(this._key,o)}_generateFontAtlas(e,t,n){const{fontFamily:i,fontWeight:o,fontSize:s,buffer:r,sdf:a,radius:l,cutoff:c}=this.props;let u=n&&n.data;u||(u=document.createElement("canvas"),u.width=1024);const g=u.getContext("2d");Z(g,i,s,o);const{mapping:d,canvasHeight:f,xOffset:h,yOffset:p}=function({characterSet:e,getFontWidth:t,fontHeight:n,buffer:i,maxCanvasWidth:o,mapping:s={},xOffset:r=0,yOffset:a=0}){let l=0,c=r,u=0;for(const r of e)if(!s[r]){const e=t(r,u++);c+e+2*i>o&&(c=0,l++),s[r]={x:c+i,y:a+l*(n+2*i)+i,width:e,height:n},c+=e+2*i}const g=n+2*i;return{mapping:s,xOffset:c,yOffset:a+l*g,canvasHeight:(d=a+(l+1)*g,Math.pow(2,Math.ceil(Math.log2(d))))};var d}({getFontWidth:e=>g.measureText(e).width,fontHeight:1.2*s,buffer:r,characterSet:t,maxCanvasWidth:1024,...n&&{mapping:n.mapping,xOffset:n.xOffset,yOffset:n.yOffset}});if(u.height!==f){const e=g.getImageData(0,0,u.width,u.height);u.height=f,g.putImageData(e,0,0)}if(Z(g,i,s,o),a){const e=new(w())(s,r,l,c,i,o),n=g.getImageData(0,0,e.size,e.size);for(const i of t)N(e.draw(i),n),g.putImageData(n,d[i].x-r,d[i].y+r)}else for(const e of t)g.fillText(e,d[e].x,d[e].y+.9*s);return{xOffset:h,yOffset:p,mapping:d,data:u,width:u.width,height:u.height}}_getKey(){const{fontFamily:e,fontWeight:t,fontSize:n,buffer:i,sdf:o,radius:s,cutoff:r}=this.props;return o?"".concat(e," ").concat(t," ").concat(n," ").concat(i," ").concat(s," ").concat(r):"".concat(e," ").concat(t," ").concat(n," ").concat(i)}}const H={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,padding:{type:"array",value:[0,0,0,0]},getPosition:{type:"accessor",value:e=>e.position},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getBoundingRect:{type:"accessor",value:[0,0,0,0]},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1}};class K extends r.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME text-background-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute vec4 instanceRects;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec2 instancePixelOffsets;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform bool billboard;\nuniform float opacity;\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform vec4 padding;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = radians(angle);\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n  vLineWidth = instanceLineWidths;\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale),\n    sizeMinPixels, sizeMaxPixels\n  );\n\n  dimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\n\n  vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\n  pixelOffset += instancePixelOffsets;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME text-background-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool stroked;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec2 pixelPosition = uv * dimensions;\n  if (stroked) {\n    float distToEdge = min(\n      min(pixelPosition.x, dimensions.x - pixelPosition.x),\n      min(pixelPosition.y, dimensions.y - pixelPosition.y)\n    );\n    float isBorder = smoothedge(distToEdge, vLineWidth);\n    gl_FragColor = mix(vFillColor, vLineColor, isBorder);\n  } else {\n    gl_FragColor = vFillColor;\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[a.Z,l.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instanceRects:{size:4,accessor:"getBoundingRect"},instancePixelOffsets:{size:2,transition:!0,accessor:"getPixelOffset"},instanceFillColors:{size:4,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState({props:e,oldProps:t,changeFlags:n}){if(super.updateState({props:e,oldProps:t,changeFlags:n}),n.extensionsChanged){var i;const{gl:e}=this.context;null===(i=this.state.model)||void 0===i||i.delete(),this.state.model=this._getModel(e),this.getAttributeManager().invalidateAll()}}draw({uniforms:e}){const{viewport:t}=this.context,{billboard:n,sizeScale:i,sizeUnits:o,sizeMinPixels:s,sizeMaxPixels:r,getLineWidth:a}=this.props;let{padding:l}=this.props;const c="pixels"===o?t.metersPerPixel:1;l.length<4&&(l=[l[0],l[1],l[0],l[1]]),this.state.model.setUniforms(e).setUniforms({billboard:n,stroked:Boolean(a),padding:l,sizeScale:i*c,sizeMinPixels:s,sizeMaxPixels:r}).draw()}_getModel(e){return new c.Z(e,{...this.getShaders(),id:this.props.id,geometry:new u.Z({drawMode:6,vertexCount:4,attributes:{positions:{size:2,value:new Float32Array([0,0,1,0,1,1,0,1])}}}),isInstanced:!0})}}K.layerName="TextBackgroundLayer",K.defaultProps=H;const V={fontSize:64,buffer:4,sdf:!1,radius:12,cutoff:.25,smoothing:.1},J={start:1,middle:0,end:-1},X={top:1,center:0,bottom:-1},q=[0,0,0,255],Y=["fontSize","buffer","sdf","radius","cutoff"],Q={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,background:!1,getBackgroundColor:{type:"accessor",value:[255,255,255,255]},getBorderColor:{type:"accessor",value:q},getBorderWidth:{type:"accessor",value:0},backgroundPadding:{type:"array",value:[0,0,0,0]},characterSet:{type:"object",value:R},fontFamily:B,fontWeight:j,lineHeight:1,outlineWidth:{type:"number",value:0,min:0},outlineColor:{type:"color",value:q},fontSettings:{},wordBreak:"break-word",maxWidth:{type:"number",value:-1},getText:{type:"accessor",value:e=>e.text},getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:q},getSize:{type:"accessor",value:32},getAngle:{type:"accessor",value:0},getTextAnchor:{type:"accessor",value:"middle"},getAlignmentBaseline:{type:"accessor",value:"center"},getPixelOffset:{type:"accessor",value:[0,0]},backgroundColor:{deprecatedFor:["background","getBackgroundColor"]}};class $ extends i.Z{initializeState(){this.state={styleVersion:0,fontAtlasManager:new G}}updateState({props:e,oldProps:t,changeFlags:n}){const i=n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getText),o=this.state.characterSet;i&&this._updateText();const s=o!==this.state.characterSet||this._fontChanged(t,e);s&&this._updateFontAtlas(t,e),(s||e.lineHeight!==t.lineHeight||e.wordBreak!==t.wordBreak||e.maxWidth!==t.maxWidth)&&this.setState({styleVersion:this.state.styleVersion+1})}getPickingInfo({info:e}){return e.object=e.index>=0?this.props.data[e.index]:null,e}_updateFontAtlas(e,t){const{fontSettings:n,fontFamily:i,fontWeight:o}=t,{fontAtlasManager:s,characterSet:r}=this.state;s.setProps({...V,...n,characterSet:r,fontFamily:i,fontWeight:o})}_fontChanged(e,t){if(e.fontFamily!==t.fontFamily||e.fontWeight!==t.fontWeight)return!0;if(e.fontSettings===t.fontSettings)return!1;const n=e.fontSettings||{},i=t.fontSettings||{};return Y.some((e=>n[e]!==i[e]))}_updateText(){const{data:e,characterSet:t}=this.props,n=e.attributes&&e.attributes.getText;let i,{getText:o}=this.props,{startIndices:s}=e;const r="auto"===t&&new Set;if(n&&s){const{texts:t,characterCount:a}=function({value:e,length:t,stride:n,offset:i,startIndices:o,characterSet:s}){const r=e.BYTES_PER_ELEMENT,a=n?n/r:1,l=i?i/r:0,c=o[t]||Math.ceil((e.length-l)/a),u=s&&new Set,g=new Array(t);let d=e;if(a>1||l>0){d=new e.constructor(c);for(let t=0;t<c;t++)d[t]=e[t*a+l]}for(let e=0;e<t;e++){const t=o[e],n=o[e+1]||c,i=d.subarray(t,n);g[e]=String.fromCodePoint.apply(null,i),u&&i.forEach(u.add,u)}if(u)for(const e of u)s.add(String.fromCodePoint(e));return{texts:g,characterCount:c}}({...ArrayBuffer.isView(n)?{value:n}:n,length:e.length,startIndices:s,characterSet:r});i=a,o=(e,{index:n})=>t[n]}else{const{iterable:t,objectInfo:n}=(0,y.jB)(e);s=[0],i=0;for(const e of t){n.index++;const t=Array.from(o(e,n)||"");r&&t.forEach(r.add,r),i+=t.length,s.push(i)}}this.setState({getText:o,startIndices:s,numInstances:i,characterSet:r||t})}getBoundingRect(e,t){const n=this.state.fontAtlasManager.mapping,{getText:i}=this.state,{wordBreak:o,maxWidth:s,lineHeight:r,getTextAnchor:a,getAlignmentBaseline:l}=this.props,c=i(e,t)||"",{size:[u,g]}=W(c,r,o,s,n);return[(J["function"==typeof a?a(e,t):a]-1)*u/2,(X["function"==typeof l?l(e,t):l]-1)*g/2,u,g]}getIconOffsets(e,t){const n=this.state.fontAtlasManager.mapping,{getText:i}=this.state,{wordBreak:o,maxWidth:s,lineHeight:r,getTextAnchor:a,getAlignmentBaseline:l}=this.props,c=i(e,t)||"",{x:u,y:g,rowWidth:d,size:[f,h]}=W(c,r,o,s,n),p=J["function"==typeof a?a(e,t):a],y=X["function"==typeof l?l(e,t):l],x=u.length,m=new Array(2*x);let v=0;for(let e=0;e<x;e++){const t=(1-p)*(f-d[e])/2;m[v++]=(p-1)*f/2+t+u[e],m[v++]=(y-1)*h/2+g[e]}return m}renderLayers(){const{startIndices:e,numInstances:t,getText:n,fontAtlasManager:{scale:i,texture:o,mapping:s},styleVersion:r}=this.state,{data:a,_dataDiff:l,getPosition:c,getColor:u,getSize:g,getAngle:d,getPixelOffset:f,getBackgroundColor:h,getBorderColor:p,getBorderWidth:y,backgroundPadding:x,background:m,billboard:v,fontSettings:_,outlineWidth:b,outlineColor:P,sizeScale:C,sizeUnits:S,sizeMinPixels:M,sizeMaxPixels:z,transitions:L,updateTriggers:F}=this.props,w=this.getSubLayerClass("characters",O),A=this.getSubLayerClass("background",K);return[m&&new A({getFillColor:h,getLineColor:p,getLineWidth:y,padding:x,getPosition:c,getSize:g,getAngle:d,getPixelOffset:f,billboard:v,sizeScale:C/this.state.fontAtlasManager.props.fontSize,sizeUnits:S,sizeMinPixels:M,sizeMaxPixels:z,transitions:L&&{getPosition:L.getPosition,getAngle:L.getAngle,getSize:L.getSize,getFillColor:L.getBackgroundColor,getLineColor:L.getBorderColor,getLineWidth:L.getBorderWidth,getPixelOffset:L.getPixelOffset}},this.getSubLayerProps({id:"background",updateTriggers:{getPosition:F.getPosition,getAngle:F.getAngle,getSize:F.getSize,getFillColor:F.getBackgroundColor,getLineColor:F.getBorderColor,getLineWidth:F.getBorderWidth,getPixelOffset:F.getPixelOffset,getBoundingRect:{getText:F.getText,getTextAnchor:F.getTextAnchor,getAlignmentBaseline:F.getAlignmentBaseline,styleVersion:r}}}),{data:a.attributes?{length:a.length,attributes:a.attributes.background||{}}:a,_dataDiff:l,autoHighlight:!1,getBoundingRect:this.getBoundingRect.bind(this)}),new w({sdf:_.sdf,smoothing:Number.isFinite(_.smoothing)?_.smoothing:V.smoothing,outlineWidth:b,outlineColor:P,iconAtlas:o,iconMapping:s,getPosition:c,getColor:u,getSize:g,getAngle:d,getPixelOffset:f,billboard:v,sizeScale:C*i,sizeUnits:S,sizeMinPixels:M*i,sizeMaxPixels:z*i,transitions:L&&{getPosition:L.getPosition,getAngle:L.getAngle,getColor:L.getColor,getSize:L.getSize,getPixelOffset:L.getPixelOffset}},this.getSubLayerProps({id:"characters",updateTriggers:{getIcon:F.getText,getPosition:F.getPosition,getAngle:F.getAngle,getColor:F.getColor,getSize:F.getSize,getPixelOffset:F.getPixelOffset,getIconOffsets:{getText:F.getText,getTextAnchor:F.getTextAnchor,getAlignmentBaseline:F.getAlignmentBaseline,styleVersion:r}}}),{data:a,_dataDiff:l,startIndices:e,numInstances:t,getIconOffsets:this.getIconOffsets.bind(this),getIcon:n})]}}$.layerName="TextLayer",$.defaultProps=Q;var ee=n(62112),te=n(71435);const ne={circle:{type:z.Z,props:{filled:"filled",stroked:"stroked",lineWidthMaxPixels:"lineWidthMaxPixels",lineWidthMinPixels:"lineWidthMinPixels",lineWidthScale:"lineWidthScale",lineWidthUnits:"lineWidthUnits",pointRadiusMaxPixels:"radiusMaxPixels",pointRadiusMinPixels:"radiusMinPixels",pointRadiusScale:"radiusScale",pointRadiusUnits:"radiusUnits",getFillColor:"getFillColor",getLineColor:"getLineColor",getLineWidth:"getLineWidth",getPointRadius:"getRadius"}},icon:{type:M,props:{iconAtlas:"iconAtlas",iconMapping:"iconMapping",iconSizeMaxPixels:"sizeMaxPixels",iconSizeMinPixels:"sizeMinPixels",iconSizeScale:"sizeScale",iconSizeUnits:"sizeUnits",getIcon:"getIcon",getIconAngle:"getAngle",getIconColor:"getColor",getIconPixelOffset:"getPixelOffset",getIconSize:"getSize"}},text:{type:$,props:{textSizeMaxPixels:"sizeMaxPixels",textSizeMinPixels:"sizeMinPixels",textSizeScale:"sizeScale",textSizeUnits:"sizeUnits",textBackground:"background",textBackgroundPadding:"backgroundPadding",textFontFamily:"fontFamily",textFontWeight:"fontWeight",textLineHeight:"lineHeight",textMaxWidth:"maxWidth",textOutlineColor:"outlineColor",textOutlineWidth:"outlineWidth",textWordBreak:"wordBreak",textCharacterSet:"characterSet",getText:"getText",getTextAngle:"getAngle",getTextColor:"getColor",getTextPixelOffset:"getPixelOffset",getTextSize:"getSize",getTextAnchor:"getTextAnchor",getTextAlignmentBaseline:"getAlignmentBaseline",getTextBackgroundColor:"getBackgroundColor",getTextBorderColor:"getBorderColor",getTextBorderWidth:"getBorderWidth"}}},ie={type:ee.Z,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",getLineColor:"getColor",getLineWidth:"getWidth"}},oe={type:te.Z,props:{extruded:"extruded",filled:"filled",wireframe:"wireframe",elevationScale:"elevationScale",material:"material",getElevation:"getElevation",getFillColor:"getFillColor",getLineColor:"getLineColor"}};function se({type:e,props:t}){const n={};for(const i in t)n[i]=e.defaultProps[t[i]];return n}function re(e,t){const{transitions:n,updateTriggers:i}=e.props,o={updateTriggers:{},transitions:n&&{getPosition:n.geometry}};for(const s in t){const r=t[s];let a=e.props[s];s.startsWith("get")&&(a=e.getSubLayerAccessor(a),o.updateTriggers[r]=i[s],n&&(o.transitions[r]=n[s])),o[r]=a}return o}function ae(e,t,n={}){const i={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},{startRow:s=0,endRow:r=e.length}=n;for(let n=s;n<r;n++){const s=e[n];o.Z.assert(s&&s.geometry,"GeoJSON does not have geometry");const{geometry:r}=s;if("GeometryCollection"===r.type){o.Z.assert(Array.isArray(r.geometries),"GeoJSON does not have geometries array");const{geometries:e}=r;for(let o=0;o<e.length;o++)le(e[o],i,t,s,n)}else le(r,i,t,s,n)}return i}function le(e,t,n,i,s){const{type:r,coordinates:a}=e,{pointFeatures:l,lineFeatures:c,polygonFeatures:u,polygonOutlineFeatures:g}=t;if(function(e,t){let n=ce[e];for(o.Z.assert(n,"Unknown GeoJSON type ".concat(e));t&&--n>0;)t=t[0];return t&&Number.isFinite(t[0])}(r,a))switch(r){case"Point":l.push(n({geometry:e},i,s));break;case"MultiPoint":a.forEach((e=>{l.push(n({geometry:{type:"Point",coordinates:e}},i,s))}));break;case"LineString":c.push(n({geometry:e},i,s));break;case"MultiLineString":a.forEach((e=>{c.push(n({geometry:{type:"LineString",coordinates:e}},i,s))}));break;case"Polygon":u.push(n({geometry:e},i,s)),a.forEach((e=>{g.push(n({geometry:{type:"LineString",coordinates:e}},i,s))}));break;case"MultiPolygon":a.forEach((e=>{u.push(n({geometry:{type:"Polygon",coordinates:e}},i,s)),e.forEach((e=>{g.push(n({geometry:{type:"LineString",coordinates:e}},i,s))}))}))}else o.Z.warn("".concat(r," coordinates are malformed"))()}const ce={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};function ue(e){return e.geometry.coordinates}const ge={...se(ne.circle),...se(ne.icon),...se(ne.text),...se(ie),...se(oe),stroked:!0,filled:!0,extruded:!1,wireframe:!1,iconAtlas:{type:"object",value:null},iconMapping:{type:"object",value:{}},getIcon:{type:"accessor",value:e=>e.properties.icon},getText:{type:"accessor",value:e=>e.properties.text},pointType:"circle",getRadius:{deprecatedFor:"getPointRadius"}};class de extends i.Z{initializeState(){this.state={layerProps:{},features:{}},this.props.getLineDashArray&&o.Z.removed("getLineDashArray","PathStyleExtension")()}updateState({props:e,changeFlags:t}){if(!t.dataChanged)return;const{data:n}=this.props,i=n&&"points"in n&&"polygons"in n&&"lines"in n;this.setState({binary:i}),i?this._updateStateBinary({props:e,changeFlags:t}):this._updateStateJSON({props:e,changeFlags:t})}_updateStateBinary({props:e,changeFlags:t}){const n=function(e,t){const n={points:{},lines:{},polygons:{},polygonsOutline:{}},{points:i,lines:o,polygons:s}=e,r=function(e,t){const n={points:null,lines:null,polygons:null};for(const i in n){const o=e[i].globalFeatureIds.value;n[i]=new Uint8ClampedArray(3*o.length);const s=[];for(let e=0;e<o.length;e++)t(o[e],s),n[i][3*e+0]=s[0],n[i][3*e+1]=s[1],n[i][3*e+2]=s[2]}return n}(e,t);return n.points.data={length:i.positions.value.length/i.positions.size,attributes:{getPosition:i.positions,instancePickingColors:{size:3,value:r.points}},properties:i.properties,numericProps:i.numericProps,featureIds:i.featureIds},n.lines.data={length:o.pathIndices.value.length-1,startIndices:o.pathIndices.value,attributes:{getPath:o.positions,instancePickingColors:{size:3,value:r.lines}},properties:o.properties,numericProps:o.numericProps,featureIds:o.featureIds},n.lines._pathType="open",n.polygons.data={length:s.polygonIndices.value.length-1,startIndices:s.polygonIndices.value,attributes:{getPolygon:s.positions,pickingColors:{size:3,value:r.polygons}},properties:s.properties,numericProps:s.numericProps,featureIds:s.featureIds},n.polygons._normalize=!1,s.triangles&&(n.polygons.data.attributes.indices=s.triangles.value),n.polygonsOutline.data={length:s.primitivePolygonIndices.value.length-1,startIndices:s.primitivePolygonIndices.value,attributes:{getPath:s.positions,instancePickingColors:{size:3,value:r.polygons}},properties:s.properties,numericProps:s.numericProps,featureIds:s.featureIds},n.polygonsOutline._pathType="open",n}(e.data,this.encodePickingColor);this.setState({layerProps:n})}_updateStateJSON({props:e,changeFlags:t}){const n=function(e){if(Array.isArray(e))return e;switch(o.Z.assert(e.type,"GeoJSON does not have type"),e.type){case"Feature":return[e];case"FeatureCollection":return o.Z.assert(Array.isArray(e.features),"GeoJSON does not have features array"),e.features;default:return[{geometry:e}]}}(e.data),i=this.getSubLayerRow.bind(this);let r={};const a={};if(Array.isArray(t.dataChanged)){const e=this.state.features;for(const t in e)r[t]=e[t].slice(),a[t]=[];for(const o of t.dataChanged){const t=ae(n,i,o);for(const n in e)a[n].push((0,s.b)({data:r[n],getIndex:e=>e.__source.index,dataRange:o,replace:t[n]}))}}else r=ae(n,i);const l=function(e,t){const n={points:{},lines:{},polygons:{},polygonsOutline:{}},{pointFeatures:i,lineFeatures:o,polygonFeatures:s,polygonOutlineFeatures:r}=e;return n.points.data=i,n.points._dataDiff=t.pointFeatures&&(()=>t.pointFeatures),n.points.getPosition=ue,n.lines.data=o,n.lines._dataDiff=t.lineFeatures&&(()=>t.lineFeatures),n.lines.getPath=ue,n.polygons.data=s,n.polygons._dataDiff=t.polygonFeatures&&(()=>t.polygonFeatures),n.polygons.getPolygon=ue,n.polygonsOutline.data=r,n.polygonsOutline._dataDiff=t.polygonOutlineFeatures&&(()=>t.polygonOutlineFeatures),n.polygonsOutline.getPath=ue,n}(r,a);this.setState({features:r,featuresDiff:a,layerProps:l})}_updateAutoHighlight(e){const t="".concat(this.id,"-points-"),n=e.sourceLayer.id.startsWith(t);for(const i of this.getSubLayers())i.id.startsWith(t)===n&&i.updateAutoHighlight(e)}_renderPolygonLayer(){const{extruded:e,wireframe:t}=this.props,{layerProps:n}=this.state,i="polygons-fill",o=this.shouldRenderSubLayer(i,n.polygons.data)&&this.getSubLayerClass(i,oe.type);if(o){const s=re(this,oe.props),r=e&&t;return r||delete s.getLineColor,s.updateTriggers.lineColors=r,new o(s,this.getSubLayerProps({id:i,updateTriggers:s.updateTriggers}),n.polygons)}return null}_renderLineLayers(){const{extruded:e,stroked:t}=this.props,{layerProps:n}=this.state,i="polygons-stroke",o="linestrings",s=!e&&t&&this.shouldRenderSubLayer(i,n.polygonsOutline.data)&&this.getSubLayerClass(i,ie.type),r=this.shouldRenderSubLayer(o,n.lines.data)&&this.getSubLayerClass(o,ie.type);if(s||r){const e=re(this,ie.props);return[s&&new s(e,this.getSubLayerProps({id:i,updateTriggers:e.updateTriggers}),n.polygonsOutline),r&&new r(e,this.getSubLayerProps({id:o,updateTriggers:e.updateTriggers}),n.lines)]}return null}_renderPointLayers(){const{pointType:e}=this.props,{layerProps:t,binary:n}=this.state;let{highlightedObjectIndex:i}=this.props;!n&&Number.isFinite(i)&&(i=t.points.data.findIndex((e=>e.__source.index===i)));const o=new Set(e.split("+")),s=[];for(const e of o){const n="points-".concat(e),o=ne[e],r=o&&this.shouldRenderSubLayer(n,t.points.data)&&this.getSubLayerClass(n,o.type);if(r){const e=re(this,o.props);s.push(new r(e,this.getSubLayerProps({id:n,updateTriggers:e.updateTriggers,highlightedObjectIndex:i}),t.points))}}return s}renderLayers(){const{extruded:e}=this.props,t=this._renderPolygonLayer();return[!e&&t,this._renderLineLayers(),this._renderPointLayers(),e&&t]}getSubLayerAccessor(e){const{binary:t}=this.state;return t&&"function"==typeof e?(t,n)=>{const{data:i,index:o}=n,s=function(e,t){if(!e)return null;const n="startIndices"in e?e.startIndices[t]:t,i=e.featureIds.value[n];return-1!==n?function(e,t,n){const i={properties:{...e.properties[t]}};for(const t in e.numericProps)i.properties[t]=e.numericProps[t].value[n];return i}(e,i,n):null}(i,o);return e(s,n)}:super.getSubLayerAccessor(e)}}de.layerName="GeoJsonLayer",de.defaultProps=ge},28569:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var i=n(95772),o=n(93844),s=n(51331),r=n(1113),a=n(53982);const l=[0,0,0,255],c={radiusUnits:"meters",radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,billboard:!1,getPosition:{type:"accessor",value:e=>e.position},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:l},getLineColor:{type:"accessor",value:l},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class u extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\nuniform bool billboard;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  if (billboard) {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = positions * outerRadiusPixels;\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n  }\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\nuniform float stroked;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\n  float inCircle = smoothedge(distToCenter, outerRadiusPixels);\n\n  if (inCircle == 0.0) {\n    discard;\n  }\n\n  if (stroked > 0.5) {\n    float isLine = smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter);\n    if (filled) {\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        discard;\n      }\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n    }\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  gl_FragColor.a *= inCircle;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,s.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState({props:e,oldProps:t,changeFlags:n}){if(super.updateState({props:e,oldProps:t,changeFlags:n}),n.extensionsChanged){var i;const{gl:e}=this.context;null===(i=this.state.model)||void 0===i||i.delete(),this.state.model=this._getModel(e),this.getAttributeManager().invalidateAll()}}draw({uniforms:e}){const{viewport:t}=this.context,{radiusUnits:n,radiusScale:i,radiusMinPixels:o,radiusMaxPixels:s,stroked:r,filled:a,billboard:l,lineWidthUnits:c,lineWidthScale:u,lineWidthMinPixels:g,lineWidthMaxPixels:d}=this.props,f="pixels"===n?t.metersPerPixel:1,h="pixels"===c?t.metersPerPixel:1;this.state.model.setUniforms(e).setUniforms({stroked:r?1:0,filled:a,billboard:l,radiusScale:i*f,radiusMinPixels:o,radiusMaxPixels:s,lineWidthScale:u*h,lineWidthMinPixels:g,lineWidthMaxPixels:d}).draw()}_getModel(e){return new r.Z(e,{...this.getShaders(),id:this.props.id,geometry:new a.Z({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,1,0])}}}),isInstanced:!0})}}u.layerName="ScatterplotLayer",u.defaultProps=c},76613:e=>{function t(e){if(!(this instanceof t))return new t(e);this._bbox=e||[1/0,1/0,-1/0,-1/0],this._valid=!!e}e.exports=t,t.prototype.include=function(e){return this._valid=!0,this._bbox[0]=Math.min(this._bbox[0],e[0]),this._bbox[1]=Math.min(this._bbox[1],e[1]),this._bbox[2]=Math.max(this._bbox[2],e[0]),this._bbox[3]=Math.max(this._bbox[3],e[1]),this},t.prototype.equals=function(e){var n;return n=e instanceof t?e.bbox():e,this._bbox[0]==n[0]&&this._bbox[1]==n[1]&&this._bbox[2]==n[2]&&this._bbox[3]==n[3]},t.prototype.center=function(e){return this._valid?[(this._bbox[0]+this._bbox[2])/2,(this._bbox[1]+this._bbox[3])/2]:null},t.prototype.union=function(e){var n;return this._valid=!0,n=e instanceof t?e.bbox():e,this._bbox[0]=Math.min(this._bbox[0],n[0]),this._bbox[1]=Math.min(this._bbox[1],n[1]),this._bbox[2]=Math.max(this._bbox[2],n[2]),this._bbox[3]=Math.max(this._bbox[3],n[3]),this},t.prototype.bbox=function(){return this._valid?this._bbox:null},t.prototype.contains=function(e){if(!e)return this._fastContains();if(!this._valid)return null;var t=e[0],n=e[1];return this._bbox[0]<=t&&this._bbox[1]<=n&&this._bbox[2]>=t&&this._bbox[3]>=n},t.prototype.intersect=function(e){return this._valid?(n=e instanceof t?e.bbox():e,!(this._bbox[0]>n[2]||this._bbox[2]<n[0]||this._bbox[3]<n[1]||this._bbox[1]>n[3])):null;var n},t.prototype._fastContains=function(){if(!this._valid)return new Function("return null;");var e="return "+this._bbox[0]+"<= ll[0] &&"+this._bbox[1]+"<= ll[1] &&"+this._bbox[2]+">= ll[0] &&"+this._bbox[3]+">= ll[1]";return new Function("ll",e)},t.prototype.polygon=function(){return this._valid?{type:"Polygon",coordinates:[[[this._bbox[0],this._bbox[1]],[this._bbox[2],this._bbox[1]],[this._bbox[2],this._bbox[3]],[this._bbox[0],this._bbox[3]],[this._bbox[0],this._bbox[1]]]]}:null}},7829:e=>{e.exports=function(e){return function e(t){return Array.isArray(t)&&t.length&&"number"==typeof t[0]?[t]:t.reduce((function(t,n){return Array.isArray(n)&&Array.isArray(n[0])?t.concat(e(n)):(t.push(n),t)}),[])}(e)}},34506:(e,t,n)=>{var i=n(99340),o=n(63),s=n(7829);o instanceof Function||(o=o.default),e.exports=function(e){if(!e)return[];var t=o(i(e)),n=[];return t.features.forEach((function(e){e.geometry&&(n=n.concat(s(e.geometry.coordinates)))})),n}},29319:(e,t,n)=>{var i=n(34506),o=n(13692),s=n(76613),r={features:["FeatureCollection"],coordinates:["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"],geometry:["Feature"],geometries:["GeometryCollection"]},a=Object.keys(r);function l(e){for(var t=s(),n=i(e),o=0;o<n.length;o++)t.include(n[o]);return t}e.exports=function(e){return l(e).bbox()},e.exports.polygon=function(e){return l(e).polygon()},e.exports.bboxify=function(e){return o(e).map((function(e){e&&a.some((function(t){return!!e[t]&&-1!==r[t].indexOf(e.type)}))&&(e.bbox=l(e).bbox(),this.update(e))}))}},99340:e=>{e.exports=function(e){if(!e||!e.type)return null;var n=t[e.type];return n?"geometry"===n?{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:e}]}:"feature"===n?{type:"FeatureCollection",features:[e]}:"featurecollection"===n?e:void 0:null};var t={Point:"geometry",MultiPoint:"geometry",LineString:"geometry",MultiLineString:"geometry",Polygon:"geometry",MultiPolygon:"geometry",GeometryCollection:"geometry",Feature:"feature",FeatureCollection:"featurecollection"}},49296:e=>{"use strict";e.exports=n,e.exports.default=n;var t=1e20;function n(e,t,n,i,o,s){this.fontSize=e||24,this.buffer=void 0===t?3:t,this.cutoff=i||.25,this.fontFamily=o||"sans-serif",this.fontWeight=s||"normal",this.radius=n||8;var r=this.size=this.fontSize+2*this.buffer,a=r+2*this.buffer;this.canvas=document.createElement("canvas"),this.canvas.width=this.canvas.height=r,this.ctx=this.canvas.getContext("2d"),this.ctx.font=this.fontWeight+" "+this.fontSize+"px "+this.fontFamily,this.ctx.textAlign="left",this.ctx.fillStyle="black",this.gridOuter=new Float64Array(a*a),this.gridInner=new Float64Array(a*a),this.f=new Float64Array(a),this.z=new Float64Array(a+1),this.v=new Uint16Array(a),this.useMetrics=void 0!==this.ctx.measureText("A").actualBoundingBoxLeft,this.middle=Math.round(r/2*(navigator.userAgent.indexOf("Gecko/")>=0?1.2:1))}function i(e,t,n,i,s,r){for(var a=0;a<t;a++)o(e,a,t,n,i,s,r);for(var l=0;l<n;l++)o(e,l*t,1,t,i,s,r)}function o(e,n,i,o,s,r,a){var l,c,u,g;for(r[0]=0,a[0]=-t,a[1]=t,l=0;l<o;l++)s[l]=e[n+l*i];for(l=1,c=0,u=0;l<o;l++){do{g=r[c],u=(s[l]-s[g]+l*l-g*g)/(l-g)/2}while(u<=a[c]&&--c>-1);r[++c]=l,a[c]=u,a[c+1]=t}for(l=0,c=0;l<o;l++){for(;a[c+1]<l;)c++;g=r[c],e[n+l*i]=s[g]+(l-g)*(l-g)}}n.prototype._draw=function(e,n){var o,s,r,a,l,c,u,g,d,f=this.ctx.measureText(e),h=f.width,p=2*this.buffer;n&&this.useMetrics?(l=Math.floor(f.actualBoundingBoxAscent),g=this.buffer+Math.ceil(f.actualBoundingBoxAscent),c=this.buffer,u=this.buffer,o=(s=Math.min(this.size,Math.ceil(f.actualBoundingBoxRight-f.actualBoundingBoxLeft)))+p,r=(a=Math.min(this.size-c,Math.ceil(f.actualBoundingBoxAscent+f.actualBoundingBoxDescent)))+p,this.ctx.textBaseline="alphabetic"):(o=s=this.size,r=a=this.size,l=19*this.fontSize/24,c=u=0,g=this.middle,this.ctx.textBaseline="middle"),s&&a&&(this.ctx.clearRect(u,c,s,a),this.ctx.fillText(e,this.buffer,g),d=this.ctx.getImageData(u,c,s,a));var y=new Uint8ClampedArray(o*r);return function(e,n,i,o,s,r,a){r.fill(t,0,n*i),a.fill(0,0,n*i);for(var l=(n-o)/2,c=0;c<s;c++)for(var u=0;u<o;u++){var g=(c+l)*n+u+l,d=e.data[4*(c*o+u)+3]/255;if(1===d)r[g]=0,a[g]=t;else if(0===d)r[g]=t,a[g]=0;else{var f=Math.max(0,.5-d),h=Math.max(0,d-.5);r[g]=f*f,a[g]=h*h}}}(d,o,r,s,a,this.gridOuter,this.gridInner),i(this.gridOuter,o,r,this.f,this.v,this.z),i(this.gridInner,o,r,this.f,this.v,this.z),function(e,t,n,i,o,s,r){for(var a=0;a<t*n;a++){var l=Math.sqrt(i[a])-Math.sqrt(o[a]);e[a]=Math.round(255-255*(l/s+r))}}(y,o,r,this.gridOuter,this.gridInner,this.radius,this.cutoff),{data:y,metrics:{width:s,height:a,sdfWidth:o,sdfHeight:r,top:l,left:0,advance:h}}},n.prototype.draw=function(e){return this._draw(e,!1).data},n.prototype.drawWithMetrics=function(e){return this._draw(e,!0)}},63:(e,t,n)=>{"use strict";function i(e){switch(e&&e.type||null){case"FeatureCollection":return e.features=e.features.reduce((function(e,t){return e.concat(i(t))}),[]),e;case"Feature":return e.geometry?i(e.geometry).map((function(t){var n={type:"Feature",properties:JSON.parse(JSON.stringify(e.properties)),geometry:t};return void 0!==e.id&&(n.id=e.id),n})):[e];case"MultiPoint":return e.coordinates.map((function(e){return{type:"Point",coordinates:e}}));case"MultiPolygon":return e.coordinates.map((function(e){return{type:"Polygon",coordinates:e}}));case"MultiLineString":return e.coordinates.map((function(e){return{type:"LineString",coordinates:e}}));case"GeometryCollection":return e.geometries.map(i).reduce((function(e,t){return e.concat(t)}),[]);case"Point":case"Polygon":case"LineString":return[e]}}n.r(t),n.d(t,{default:()=>i})},13692:e=>{var t=e.exports=function(e){return new n(e)};function n(e){this.value=e}function i(e,t,n){var i=[],r=[],u=!0;return function e(g){var d=n?o(g):g,f={},h=!0,p={node:d,node_:g,path:[].concat(i),parent:r[r.length-1],parents:r,key:i.slice(-1)[0],isRoot:0===i.length,level:i.length,circular:null,update:function(e,t){p.isRoot||(p.parent.node[p.key]=e),p.node=e,t&&(h=!1)},delete:function(e){delete p.parent.node[p.key],e&&(h=!1)},remove:function(e){a(p.parent.node)?p.parent.node.splice(p.key,1):delete p.parent.node[p.key],e&&(h=!1)},keys:null,before:function(e){f.before=e},after:function(e){f.after=e},pre:function(e){f.pre=e},post:function(e){f.post=e},stop:function(){u=!1},block:function(){h=!1}};if(!u)return p;function y(){if("object"==typeof p.node&&null!==p.node){p.keys&&p.node_===p.node||(p.keys=s(p.node)),p.isLeaf=0==p.keys.length;for(var e=0;e<r.length;e++)if(r[e].node_===g){p.circular=r[e];break}}else p.isLeaf=!0,p.keys=null;p.notLeaf=!p.isLeaf,p.notRoot=!p.isRoot}y();var x=t.call(p,p.node);return void 0!==x&&p.update&&p.update(x),f.before&&f.before.call(p,p.node),h?("object"!=typeof p.node||null===p.node||p.circular||(r.push(p),y(),l(p.keys,(function(t,o){i.push(t),f.pre&&f.pre.call(p,p.node[t],t);var s=e(p.node[t]);n&&c.call(p.node,t)&&(p.node[t]=s.node),s.isLast=o==p.keys.length-1,s.isFirst=0==o,f.post&&f.post.call(p,s),i.pop()})),r.pop()),f.after&&f.after.call(p,p.node),p):p}(e).node}function o(e){if("object"==typeof e&&null!==e){var t;if(a(e))t=[];else if("[object Date]"===r(e))t=new Date(e.getTime?e.getTime():e);else if("[object RegExp]"===r(e))t=new RegExp(e);else if(function(e){return"[object Error]"===r(e)}(e))t={message:e.message};else if(function(e){return"[object Boolean]"===r(e)}(e))t=new Boolean(e);else if(function(e){return"[object Number]"===r(e)}(e))t=new Number(e);else if(function(e){return"[object String]"===r(e)}(e))t=new String(e);else if(Object.create&&Object.getPrototypeOf)t=Object.create(Object.getPrototypeOf(e));else if(e.constructor===Object)t={};else{var n=e.constructor&&e.constructor.prototype||e.__proto__||{},i=function(){};i.prototype=n,t=new i}return l(s(e),(function(n){t[n]=e[n]})),t}return e}n.prototype.get=function(e){for(var t=this.value,n=0;n<e.length;n++){var i=e[n];if(!t||!c.call(t,i)){t=void 0;break}t=t[i]}return t},n.prototype.has=function(e){for(var t=this.value,n=0;n<e.length;n++){var i=e[n];if(!t||!c.call(t,i))return!1;t=t[i]}return!0},n.prototype.set=function(e,t){for(var n=this.value,i=0;i<e.length-1;i++){var o=e[i];c.call(n,o)||(n[o]={}),n=n[o]}return n[e[i]]=t,t},n.prototype.map=function(e){return i(this.value,e,!0)},n.prototype.forEach=function(e){return this.value=i(this.value,e,!1),this.value},n.prototype.reduce=function(e,t){var n=1===arguments.length,i=n?this.value:t;return this.forEach((function(t){this.isRoot&&n||(i=e.call(this,i,t))})),i},n.prototype.paths=function(){var e=[];return this.forEach((function(t){e.push(this.path)})),e},n.prototype.nodes=function(){var e=[];return this.forEach((function(t){e.push(this.node)})),e},n.prototype.clone=function(){var e=[],t=[];return function n(i){for(var r=0;r<e.length;r++)if(e[r]===i)return t[r];if("object"==typeof i&&null!==i){var a=o(i);return e.push(i),t.push(a),l(s(i),(function(e){a[e]=n(i[e])})),e.pop(),t.pop(),a}return i}(this.value)};var s=Object.keys||function(e){var t=[];for(var n in e)t.push(n);return t};function r(e){return Object.prototype.toString.call(e)}var a=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},l=function(e,t){if(e.forEach)return e.forEach(t);for(var n=0;n<e.length;n++)t(e[n],n,e)};l(s(n.prototype),(function(e){t[e]=function(t){var i=[].slice.call(arguments,1),o=new n(t);return o[e].apply(o,i)}}));var c=Object.hasOwnProperty||function(e,t){return t in e}}}]);
//# sourceMappingURL=78d5f7e10e75224b45d4.chunk.js.map
