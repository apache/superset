{"version":3,"file":"5ff3e8b7a73a7bbed35f.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.glsl.js","webpack://superset/./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.js","webpack://superset/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.js","webpack://superset/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.glsl.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/components/Legend.jsx","webpack://superset/./node_modules/d3-hexbin/src/hexbin.js","webpack://superset/./node_modules/@deck.gl/aggregation-layers/dist/esm/hexagon-layer/hexagon-layer.js","webpack://superset/./node_modules/@deck.gl/aggregation-layers/dist/esm/hexagon-layer/hexagon-aggregator.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Hex/Hex.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/factory.tsx"],"sourcesContent":["export default \"#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\\n\\nstruct AmbientLight {\\n vec3 color;\\n};\\n\\nstruct PointLight {\\n vec3 color;\\n vec3 position;\\n vec3 attenuation;\\n};\\n\\nstruct DirectionalLight {\\n  vec3 color;\\n  vec3 direction;\\n};\\n\\nuniform AmbientLight lighting_uAmbientLight;\\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\\nuniform int lighting_uPointLightCount;\\nuniform int lighting_uDirectionalLightCount;\\n\\nuniform bool lighting_uEnabled;\\n\\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\\n  return pointLight.attenuation.x\\n       + pointLight.attenuation.y * distance\\n       + pointLight.attenuation.z * distance * distance;\\n}\\n\\n#endif\\n\";\n//# sourceMappingURL=lights.glsl.js.map","import lightingShader from './lights.glsl';\nconst INITIAL_MODULE_OPTIONS = {\n  lightSources: {}\n};\n\nfunction convertColor({\n  color = [0, 0, 0],\n  intensity = 1.0\n} = {}) {\n  return color.map(component => component * intensity / 255.0);\n}\n\nfunction getLightSourceUniforms({\n  ambientLight,\n  pointLights = [],\n  directionalLights = []\n}) {\n  const lightSourceUniforms = {};\n\n  if (ambientLight) {\n    lightSourceUniforms['lighting_uAmbientLight.color'] = convertColor(ambientLight);\n  } else {\n    lightSourceUniforms['lighting_uAmbientLight.color'] = [0, 0, 0];\n  }\n\n  pointLights.forEach((pointLight, index) => {\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].color\")] = convertColor(pointLight);\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].position\")] = pointLight.position;\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].attenuation\")] = pointLight.attenuation || [1, 0, 0];\n  });\n  lightSourceUniforms.lighting_uPointLightCount = pointLights.length;\n  directionalLights.forEach((directionalLight, index) => {\n    lightSourceUniforms[\"lighting_uDirectionalLight[\".concat(index, \"].color\")] = convertColor(directionalLight);\n    lightSourceUniforms[\"lighting_uDirectionalLight[\".concat(index, \"].direction\")] = directionalLight.direction;\n  });\n  lightSourceUniforms.lighting_uDirectionalLightCount = directionalLights.length;\n  return lightSourceUniforms;\n}\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if ('lightSources' in opts) {\n    const {\n      ambientLight,\n      pointLights,\n      directionalLights\n    } = opts.lightSources || {};\n    const hasLights = ambientLight || pointLights && pointLights.length > 0 || directionalLights && directionalLights.length > 0;\n\n    if (!hasLights) {\n      return {\n        lighting_uEnabled: false\n      };\n    }\n\n    return Object.assign({}, getLightSourceUniforms({\n      ambientLight,\n      pointLights,\n      directionalLights\n    }), {\n      lighting_uEnabled: true\n    });\n  }\n\n  if ('lights' in opts) {\n    const lightSources = {\n      pointLights: [],\n      directionalLights: []\n    };\n\n    for (const light of opts.lights || []) {\n      switch (light.type) {\n        case 'ambient':\n          lightSources.ambientLight = light;\n          break;\n\n        case 'directional':\n          lightSources.directionalLights.push(light);\n          break;\n\n        case 'point':\n          lightSources.pointLights.push(light);\n          break;\n\n        default:\n      }\n    }\n\n    return getUniforms({\n      lightSources\n    });\n  }\n\n  return {};\n}\n\nexport const lights = {\n  name: 'lights',\n  vs: lightingShader,\n  fs: lightingShader,\n  getUniforms,\n  defines: {\n    MAX_LIGHTS: 3\n  }\n};\n//# sourceMappingURL=lights.js.map","import { lights } from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  const {\n    ambient = 0.35,\n    diffuse = 0.6,\n    shininess = 32,\n    specularColor = [30, 30, 30]\n  } = material;\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  const {\n    material\n  } = opts;\n\n  if (!material) {\n    return {\n      lighting_uEnabled: false\n    };\n  }\n\n  return getMaterialUniforms(material);\n}\n\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};\n//# sourceMappingURL=phong-lighting.js.map","export default \"\\nuniform float lighting_uAmbient;\\nuniform float lighting_uDiffuse;\\nuniform float lighting_uShininess;\\nuniform vec3  lighting_uSpecularColor;\\n\\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\\n    vec3 halfway_direction = normalize(light_direction + view_direction);\\n    float lambertian = dot(light_direction, normal_worldspace);\\n    float specular = 0.0;\\n    if (lambertian > 0.0) {\\n      float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\\n      specular = pow(specular_angle, lighting_uShininess);\\n    }\\n    lambertian = max(lambertian, 0.0);\\n    return (lambertian * lighting_uDiffuse * surfaceColor + specular * lighting_uSpecularColor) * color;\\n}\\n\\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\\n  vec3 lightColor = surfaceColor;\\n\\n  if (lighting_uEnabled) {\\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\\n    lightColor = lighting_uAmbient * surfaceColor * lighting_uAmbientLight.color;\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uPointLightCount) {\\n        break;\\n      }\\n      PointLight pointLight = lighting_uPointLight[i];\\n      vec3 light_position_worldspace = pointLight.position;\\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\\n    }\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uDirectionalLightCount) {\\n        break;\\n      }\\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\\n    }\\n  }\\n  return lightColor;\\n}\\n\\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\\n  vec3 lightColor = vec3(0, 0, 0);\\n  vec3 surfaceColor = vec3(0, 0, 0);\\n\\n  if (lighting_uEnabled) {\\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uPointLightCount) {\\n        break;\\n      }\\n      PointLight pointLight = lighting_uPointLight[i];\\n      vec3 light_position_worldspace = pointLight.position;\\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\\n    }\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uDirectionalLightCount) {\\n        break;\\n      }\\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\\n    }\\n  }\\n  return lightColor;\\n}\\n\";\n//# sourceMappingURL=phong-lighting.glsl.js.map","/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatNumber, styled } from '@superset-ui/core';\n\nconst StyledLegend = styled.div`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    position: absolute;\n    background: ${theme.colors.grayscale.light5};\n    box-shadow: 0 0 ${theme.gridUnit}px ${theme.colors.grayscale.light2};\n    margin: ${theme.gridUnit * 6}px;\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 5}px;\n    outline: none;\n    overflow-y: scroll;\n    max-height: 200px;\n\n    & ul {\n      list-style: none;\n      padding-left: 0;\n      margin: 0;\n\n      & li a {\n        color: ${theme.colors.grayscale.base};\n        text-decoration: none;\n\n        & span {\n          margin-right: ${theme.gridUnit * 3}px;\n        }\n      }\n    }\n  `}\n`;\n\nconst categoryDelimiter = ' - ';\n\nconst propTypes = {\n  categories: PropTypes.object,\n  forceCategorical: PropTypes.bool,\n  format: PropTypes.string,\n  position: PropTypes.oneOf([null, 'tl', 'tr', 'bl', 'br']),\n  showSingleCategory: PropTypes.func,\n  toggleCategory: PropTypes.func,\n};\n\nconst defaultProps = {\n  categories: {},\n  forceCategorical: false,\n  format: null,\n  position: 'tr',\n  showSingleCategory: () => {},\n  toggleCategory: () => {},\n};\n\nexport default class Legend extends React.PureComponent {\n  format(value) {\n    if (!this.props.format || this.props.forceCategorical) {\n      return value;\n    }\n\n    const numValue = parseFloat(value);\n\n    return formatNumber(this.props.format, numValue);\n  }\n\n  formatCategoryLabel(k) {\n    if (!this.props.format) {\n      return k;\n    }\n\n    if (k.includes(categoryDelimiter)) {\n      const values = k.split(categoryDelimiter);\n\n      return (\n        this.format(values[0]) + categoryDelimiter + this.format(values[1])\n      );\n    }\n\n    return this.format(k);\n  }\n\n  render() {\n    if (\n      Object.keys(this.props.categories).length === 0 ||\n      this.props.position === null\n    ) {\n      return null;\n    }\n\n    const categories = Object.entries(this.props.categories).map(([k, v]) => {\n      const style = { color: `rgba(${v.color.join(', ')})` };\n      const icon = v.enabled ? '\\u25FC' : '\\u25FB';\n\n      return (\n        <li key={k}>\n          <a\n            href=\"#\"\n            onClick={() => this.props.toggleCategory(k)}\n            onDoubleClick={() => this.props.showSingleCategory(k)}\n          >\n            <span style={style}>{icon}</span> {this.formatCategoryLabel(k)}\n          </a>\n        </li>\n      );\n    });\n\n    const vertical = this.props.position.charAt(0) === 't' ? 'top' : 'bottom';\n    const horizontal = this.props.position.charAt(1) === 'r' ? 'right' : 'left';\n    const style = {\n      position: 'absolute',\n      [vertical]: '0px',\n      [horizontal]: '10px',\n    };\n\n    return (\n      <StyledLegend style={style}>\n        <ul>{categories}</ul>\n      </StyledLegend>\n    );\n  }\n}\n\nLegend.propTypes = propTypes;\nLegend.defaultProps = defaultProps;\n","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n","import { log } from '@deck.gl/core';\nimport { ColumnLayer } from '@deck.gl/layers';\nimport { defaultColorRange } from '../utils/color-utils';\nimport { pointToHexbin } from './hexagon-aggregator';\nimport CPUAggregator from '../utils/cpu-aggregator';\nimport AggregationLayer from '../aggregation-layer';\n\nfunction nop() {}\n\nconst defaultProps = {\n  colorDomain: null,\n  colorRange: defaultColorRange,\n  getColorValue: {\n    type: 'accessor',\n    value: null\n  },\n  getColorWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  colorAggregation: 'SUM',\n  lowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  upperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  colorScaleType: 'quantize',\n  onSetColorDomain: nop,\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationValue: {\n    type: 'accessor',\n    value: null\n  },\n  getElevationWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  elevationAggregation: 'SUM',\n  elevationLowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  elevationUpperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  elevationScaleType: 'linear',\n  onSetElevationDomain: nop,\n  radius: {\n    type: 'number',\n    value: 1000,\n    min: 1\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  extruded: false,\n  hexagonAggregator: pointToHexbin,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  material: true,\n  _filterData: {\n    type: 'function',\n    value: null,\n    optional: true\n  }\n};\nexport default class HexagonLayer extends AggregationLayer {\n  shouldUpdateState({\n    changeFlags\n  }) {\n    return changeFlags.somethingChanged;\n  }\n\n  initializeState() {\n    const cpuAggregator = new CPUAggregator({\n      getAggregator: props => props.hexagonAggregator,\n      getCellSize: props => props.radius\n    });\n    this.state = {\n      cpuAggregator,\n      aggregatorState: cpuAggregator.state,\n      hexagonVertices: null\n    };\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {\n        size: 3,\n        accessor: 'getPosition'\n      }\n    });\n  }\n\n  updateState(opts) {\n    super.updateState(opts);\n    const {\n      cpuAggregator,\n      hexagonVertices: oldVertices\n    } = this.state;\n\n    if (opts.changeFlags.propsOrDataChanged) {\n      this.setState({\n        aggregatorState: cpuAggregator.updateState(opts, {\n          viewport: this.context.viewport,\n          attributes: this.getAttributes()\n        })\n      });\n    }\n\n    const {\n      hexagonVertices\n    } = cpuAggregator.state.layerData || {};\n\n    if (hexagonVertices && oldVertices !== hexagonVertices) {\n      const vertices = this.convertLatLngToMeterOffset(hexagonVertices);\n\n      if (vertices) {\n        this.setState({\n          hexagonVertices,\n          vertices\n        });\n      }\n    } else {\n      this.updateRadiusAngle();\n    }\n  }\n\n  updateRadiusAngle(vertices) {\n    const {\n      viewport\n    } = this.context;\n    const {\n      unitsPerMeter\n    } = viewport.getDistanceScales();\n    const {\n      cpuAggregator\n    } = this.state;\n\n    if (cpuAggregator.state.layerData && cpuAggregator.state.layerData.radiusCommon) {\n      const {\n        radiusCommon\n      } = cpuAggregator.state.layerData;\n      const radius = radiusCommon / unitsPerMeter[0];\n      this.setState({\n        angle: 90,\n        radius\n      });\n    }\n  }\n\n  convertLatLngToMeterOffset(hexagonVertices) {\n    const {\n      viewport\n    } = this.context;\n\n    if (Array.isArray(hexagonVertices) && hexagonVertices.length === 6) {\n      const vertex0 = hexagonVertices[0];\n      const vertex3 = hexagonVertices[3];\n      const centroid = [(vertex0[0] + vertex3[0]) / 2, (vertex0[1] + vertex3[1]) / 2];\n      const centroidFlat = viewport.projectFlat(centroid);\n      const {\n        metersPerUnit\n      } = viewport.getDistanceScales(centroid);\n      const vertices = hexagonVertices.map(vt => {\n        const vtFlat = viewport.projectFlat(vt);\n        return [(vtFlat[0] - centroidFlat[0]) * metersPerUnit[0], (vtFlat[1] - centroidFlat[1]) * metersPerUnit[1]];\n      });\n      return vertices;\n    }\n\n    log.error('HexagonLayer: hexagonVertices needs to be an array of 6 points')();\n    return null;\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    return this.state.cpuAggregator.getPickingInfo({\n      info\n    });\n  }\n\n  _onGetSublayerColor(cell) {\n    return this.state.cpuAggregator.getAccessor('fillColor')(cell);\n  }\n\n  _onGetSublayerElevation(cell) {\n    return this.state.cpuAggregator.getAccessor('elevation')(cell);\n  }\n\n  _getSublayerUpdateTriggers() {\n    return this.state.cpuAggregator.getUpdateTriggers(this.props);\n  }\n\n  renderLayers() {\n    const {\n      elevationScale,\n      extruded,\n      coverage,\n      material,\n      transitions\n    } = this.props;\n    const {\n      angle,\n      radius,\n      cpuAggregator,\n      vertices\n    } = this.state;\n    const SubLayerClass = this.getSubLayerClass('hexagon-cell', ColumnLayer);\n\n    const updateTriggers = this._getSublayerUpdateTriggers();\n\n    const geometry = vertices && vertices.length ? {\n      vertices,\n      radius: 1\n    } : {\n      radius,\n      angle\n    };\n    return new SubLayerClass({ ...geometry,\n      diskResolution: 6,\n      elevationScale,\n      extruded,\n      coverage,\n      material,\n      getFillColor: this._onGetSublayerColor.bind(this),\n      getElevation: this._onGetSublayerElevation.bind(this),\n      transitions: transitions && {\n        getFillColor: transitions.getColorValue || transitions.getColorWeight,\n        getElevation: transitions.getElevationValue || transitions.getElevationWeight\n      }\n    }, this.getSubLayerProps({\n      id: 'hexagon-cell',\n      updateTriggers\n    }), {\n      data: cpuAggregator.state.layerData.data\n    });\n  }\n\n}\nHexagonLayer.layerName = 'HexagonLayer';\nHexagonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=hexagon-layer.js.map","import { hexbin } from 'd3-hexbin';\nimport { createIterable, log } from '@deck.gl/core';\nexport function pointToHexbin(props, aggregationParams) {\n  const {\n    data,\n    radius\n  } = props;\n  const {\n    viewport,\n    attributes\n  } = aggregationParams;\n  const centerLngLat = data.length ? getPointsCenter(data, aggregationParams) : null;\n  const radiusCommon = getRadiusInCommon(radius, viewport, centerLngLat);\n  const screenPoints = [];\n  const {\n    iterable,\n    objectInfo\n  } = createIterable(data);\n  const positions = attributes.positions.value;\n  const {\n    size\n  } = attributes.positions.getAccessor();\n\n  for (const object of iterable) {\n    objectInfo.index++;\n    const posIndex = objectInfo.index * size;\n    const position = [positions[posIndex], positions[posIndex + 1]];\n    const arrayIsFinite = Number.isFinite(position[0]) && Number.isFinite(position[1]);\n\n    if (arrayIsFinite) {\n      screenPoints.push({\n        screenCoord: viewport.projectFlat(position),\n        source: object,\n        index: objectInfo.index\n      });\n    } else {\n      log.warn('HexagonLayer: invalid position')();\n    }\n  }\n\n  const newHexbin = hexbin().radius(radiusCommon).x(d => d.screenCoord[0]).y(d => d.screenCoord[1]);\n  const hexagonBins = newHexbin(screenPoints);\n  return {\n    hexagons: hexagonBins.map((hex, index) => ({\n      position: viewport.unprojectFlat([hex.x, hex.y]),\n      points: hex,\n      index\n    })),\n    radiusCommon\n  };\n}\nexport function getPointsCenter(data, aggregationParams) {\n  const {\n    attributes\n  } = aggregationParams;\n  const positions = attributes.positions.value;\n  const {\n    size\n  } = attributes.positions.getAccessor();\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let i;\n\n  for (i = 0; i < size * data.length; i += size) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    const arrayIsFinite = Number.isFinite(x) && Number.isFinite(y);\n\n    if (arrayIsFinite) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [minX, minY, maxX, maxY].every(Number.isFinite) ? [(minX + maxX) / 2, (minY + maxY) / 2] : null;\n}\nexport function getRadiusInCommon(radius, viewport, center) {\n  const {\n    unitsPerMeter\n  } = viewport.getDistanceScales(center);\n  return radius * unitsPerMeter[0];\n}\n//# sourceMappingURL=hexagon-aggregator.js.map","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { HexagonLayer } from 'deck.gl';\nimport React from 'react';\nimport { t, CategoricalColorNamespace } from '@superset-ui/core';\n\nimport { commonLayerProps, getAggFunc } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { hexToRGB } from '../../utils/colors';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o) {\n  return (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        label={t('Centroid (Longitude and Latitude): ')}\n        value={`(${o.coordinate[0]}, ${o.coordinate[1]})`}\n      />\n      <TooltipRow\n        // eslint-disable-next-line prefer-template\n        label={t('Height') + ': '}\n        value={`${o.object.elevationValue}`}\n      />\n    </div>\n  );\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const colorScale = CategoricalColorNamespace.getScale(fd.color_scheme);\n  const colorRange = colorScale.range().map(color => hexToRGB(color));\n  let data = payload.data.features;\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n  const aggFunc = getAggFunc(fd.js_agg_function, p => p.weight);\n\n  return new HexagonLayer({\n    id: `hex-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    radius: fd.grid_size,\n    extruded: fd.extruded,\n    colorRange,\n    outline: false,\n    getElevationValue: aggFunc,\n    getColorValue: aggFunc,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n","/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/* eslint-disable no-prototype-builtins */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CategoricalColorNamespace } from '@superset-ui/core';\nimport AnimatableDeckGLContainer from './AnimatableDeckGLContainer';\nimport Legend from './components/Legend';\nimport { hexToRGB } from './utils/colors';\nimport { getPlaySliderParams } from './utils/time';\nimport sandboxedEval from './utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport fitViewport from './utils/fitViewport';\n\nconst { getScale } = CategoricalColorNamespace;\n\nfunction getCategories(fd, data) {\n  const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  const colorFn = getScale(fd.color_scheme);\n  const categories = {};\n  data.forEach(d => {\n    if (d.cat_color != null && !categories.hasOwnProperty(d.cat_color)) {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n      } else {\n        color = fixedColor;\n      }\n      categories[d.cat_color] = { color, enabled: true };\n    }\n  });\n\n  return categories;\n}\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  getLayer: PropTypes.func.isRequired,\n  getPoints: PropTypes.func.isRequired,\n  height: PropTypes.number.isRequired,\n  mapboxApiKey: PropTypes.string.isRequired,\n  onAddFilter: PropTypes.func,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n};\n\nexport default class CategoricalDeckGLContainer extends React.PureComponent {\n  containerRef = React.createRef();\n\n  /*\n   * A Deck.gl container that handles categories.\n   *\n   * The container will have an interactive legend, populated from the\n   * categories present in the data.\n   */\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n    this.toggleCategory = this.toggleCategory.bind(this);\n    this.showSingleCategory = this.showSingleCategory.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.payload.form_data !== this.state.formData) {\n      this.setState({ ...this.getStateFromProps(nextProps) });\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : [values, values + this.state.getStep(values)],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getStateFromProps(props, state) {\n    const features = props.payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n    const categories = getCategories(props.formData, features);\n\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && props.payload.form_data === state.formData) {\n      return { ...state, categories };\n    }\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      props.payload.form_data.time_grain_sqla ||\n      props.payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n\n    const { width, height, formData } = props;\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: props.getPoints(features),\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: props.payload.form_data,\n      categories,\n    };\n  }\n\n  getLayers(values) {\n    const { getLayer, payload, formData: fd, onAddFilter } = this.props;\n    let features = payload.data.features ? [...payload.data.features] : [];\n\n    // Add colors from categories or fixed color\n    features = this.addColor(features, fd);\n\n    // Apply user defined data mutator if defined\n    if (fd.js_data_mutator) {\n      const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n      features = jsFnMutator(features);\n    }\n\n    // Filter by time\n    if (values[0] === values[1] || values[1] === this.end) {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    // Show only categories selected in the legend\n    const cats = this.state.categories;\n    if (fd.dimension) {\n      features = features.filter(\n        d => cats[d.cat_color] && cats[d.cat_color].enabled,\n      );\n    }\n\n    const filteredPayload = {\n      ...payload,\n      data: { ...payload.data, features },\n    };\n\n    return [\n      getLayer(\n        fd,\n        filteredPayload,\n        onAddFilter,\n        this.setTooltip,\n        this.props.datasource,\n      ),\n    ];\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addColor(data, fd) {\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const colorFn = getScale(fd.color_scheme);\n\n    return data.map(d => {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n\n        return { ...d, color };\n      }\n\n      return d;\n    });\n  }\n\n  toggleCategory(category) {\n    const categoryState = this.state.categories[category];\n    const categories = {\n      ...this.state.categories,\n      [category]: {\n        ...categoryState,\n        enabled: !categoryState.enabled,\n      },\n    };\n\n    // if all categories are disabled, enable all -- similar to nvd3\n    if (Object.values(categories).every(v => !v.enabled)) {\n      /* eslint-disable no-param-reassign */\n      Object.values(categories).forEach(v => {\n        v.enabled = true;\n      });\n    }\n    this.setState({ categories });\n  }\n\n  showSingleCategory(category) {\n    const categories = { ...this.state.categories };\n    /* eslint-disable no-param-reassign */\n    Object.values(categories).forEach(v => {\n      v.enabled = false;\n    });\n    categories[category].enabled = true;\n    this.setState({ categories });\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ position: 'relative' }}>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          getLayers={this.getLayers}\n          start={this.state.start}\n          end={this.state.end}\n          getStep={this.state.getStep}\n          values={this.state.values}\n          disabled={this.state.disabled}\n          viewport={this.state.viewport}\n          mapboxApiAccessToken={this.props.mapboxApiKey}\n          mapStyle={this.props.formData.mapbox_style}\n          setControlValue={this.props.setControlValue}\n          width={this.props.width}\n          height={this.props.height}\n        >\n          <Legend\n            forceCategorical\n            categories={this.state.categories}\n            format={this.props.formData.legend_format}\n            position={this.props.formData.legend_position}\n            showSingleCategory={this.showSingleCategory}\n            toggleCategory={this.toggleCategory}\n          />\n        </AnimatableDeckGLContainer>\n      </div>\n    );\n  }\n}\n\nCategoricalDeckGLContainer.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { isEqual } from 'lodash';\nimport { Datasource, QueryFormData, JsonObject } from '@superset-ui/core';\n\nimport {\n  DeckGLContainerStyledWrapper,\n  DeckGLContainer,\n} from './DeckGLContainer';\nimport CategoricalDeckGLContainer from './CategoricalDeckGLContainer';\nimport fitViewport, { Viewport } from './utils/fitViewport';\nimport { Point } from './types';\n\ntype deckGLComponentProps = {\n  datasource: Datasource;\n  formData: QueryFormData;\n  height: number;\n  onAddFilter: () => void;\n  payload: JsonObject;\n  setControlValue: () => void;\n  viewport: Viewport;\n  width: number;\n};\ninterface getLayerType<T> {\n  (\n    formData: QueryFormData,\n    payload: JsonObject,\n    onAddFilter: () => void,\n    setTooltip: (tooltip: string) => void,\n  ): T;\n}\ninterface getPointsType<T> {\n  (point: number[]): T;\n}\ntype deckGLComponentState = {\n  viewport: Viewport;\n  layer: unknown;\n};\n\nexport function createDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType<Point[]>,\n): React.ComponentClass<deckGLComponentProps> {\n  // Higher order component\n  class Component extends React.PureComponent<\n    deckGLComponentProps,\n    deckGLComponentState\n  > {\n    containerRef: React.RefObject<DeckGLContainer> = React.createRef();\n\n    constructor(props: deckGLComponentProps) {\n      super(props);\n\n      const { width, height, formData } = props;\n      let { viewport } = props;\n      if (formData.autozoom) {\n        viewport = fitViewport(viewport, {\n          width,\n          height,\n          points: getPoints(props.payload.data.features),\n        }) as Viewport;\n      }\n\n      this.state = {\n        viewport,\n        layer: this.computeLayer(props),\n      };\n      this.onViewportChange = this.onViewportChange.bind(this);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: deckGLComponentProps) {\n      // Only recompute the layer if anything BUT the viewport has changed\n      const nextFdNoVP = { ...nextProps.formData, viewport: null };\n      const currFdNoVP = { ...this.props.formData, viewport: null };\n      if (\n        !isEqual(nextFdNoVP, currFdNoVP) ||\n        nextProps.payload !== this.props.payload\n      ) {\n        this.setState({ layer: this.computeLayer(nextProps) });\n      }\n    }\n\n    onViewportChange(viewport: Viewport) {\n      this.setState({ viewport });\n    }\n\n    computeLayer(props: deckGLComponentProps) {\n      const { formData, payload, onAddFilter } = props;\n\n      return getLayer(formData, payload, onAddFilter, this.setTooltip);\n    }\n\n    setTooltip = (tooltip: string) => {\n      const { current } = this.containerRef;\n      if (current) {\n        current?.setTooltip(tooltip);\n      }\n    };\n\n    render() {\n      const { formData, payload, setControlValue, height, width } = this.props;\n      const { layer, viewport } = this.state;\n\n      return (\n        <DeckGLContainerStyledWrapper\n          ref={this.containerRef}\n          mapboxApiAccessToken={payload.data.mapboxApiKey}\n          viewport={viewport}\n          layers={[layer]}\n          mapStyle={formData.mapbox_style}\n          setControlValue={setControlValue}\n          width={width}\n          height={height}\n          onViewportChange={this.onViewportChange}\n        />\n      );\n    }\n  }\n  return Component;\n}\n\nexport function createCategoricalDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType<Point[]>,\n) {\n  return function Component(props: deckGLComponentProps) {\n    const {\n      datasource,\n      formData,\n      height,\n      payload,\n      setControlValue,\n      viewport,\n      width,\n    } = props;\n\n    return (\n      <CategoricalDeckGLContainer\n        datasource={datasource}\n        formData={formData}\n        mapboxApiKey={payload.data.mapboxApiKey}\n        setControlValue={setControlValue}\n        viewport={viewport}\n        getLayer={getLayer}\n        payload={payload}\n        getPoints={getPoints}\n        width={width}\n        height={height}\n      />\n    );\n  };\n}\n"],"names":["INITIAL_MODULE_OPTIONS","lightSources","convertColor","color","intensity","map","component","gouraudLighting","name","dependencies","vs","fs","getUniforms","opts","ambientLight","pointLights","directionalLights","length","Object","assign","lightSourceUniforms","forEach","pointLight","index","concat","position","attenuation","lighting_uPointLightCount","directionalLight","direction","lighting_uDirectionalLightCount","getLightSourceUniforms","lighting_uEnabled","light","lights","type","push","defines","MAX_LIGHTS","LIGHTING_VERTEX","material","ambient","diffuse","shininess","specularColor","lighting_uAmbient","lighting_uDiffuse","lighting_uShininess","lighting_uSpecularColor","x","getMaterialUniforms","StyledLegend","styled","theme","typography","sizes","s","colors","grayscale","light5","gridUnit","light2","base","categoryDelimiter","propTypes","categories","PropTypes","forceCategorical","format","showSingleCategory","toggleCategory","Legend","React","value","this","props","numValue","parseFloat","formatNumber","formatCategoryLabel","k","values","split","render","keys","entries","v","style","join","icon","enabled","key","href","onClick","onDoubleClick","charAt","defaultProps","thirdPi","Math","PI","angles","pointX","d","pointY","nop","colorDomain","colorRange","getColorValue","getColorWeight","colorAggregation","lowerPercentile","min","max","upperPercentile","colorScaleType","onSetColorDomain","elevationDomain","elevationRange","getElevationValue","getElevationWeight","elevationAggregation","elevationLowerPercentile","elevationUpperPercentile","elevationScale","elevationScaleType","onSetElevationDomain","radius","coverage","extruded","hexagonAggregator","aggregationParams","data","viewport","attributes","centerLngLat","positions","size","getAccessor","i","minX","Infinity","minY","maxX","maxY","y","Number","isFinite","every","getPointsCenter","radiusCommon","center","unitsPerMeter","getDistanceScales","getRadiusInCommon","screenPoints","iterable","objectInfo","object","posIndex","screenCoord","projectFlat","source","log","newHexbin","r","dx","dy","x0","y0","x1","y1","hexbin","points","binsById","bins","n","isNaN","px","call","point","py","pj","round","pi","py1","abs","px1","pi2","pj2","px2","py2","id","bin","hexagon","angle","sin","cos","centers","j","mesh","fragment","slice","p","_","arguments","extent","hexagons","hex","unprojectFlat","getPosition","_filterData","optional","HexagonLayer","shouldUpdateState","changeFlags","somethingChanged","initializeState","cpuAggregator","getAggregator","getCellSize","state","aggregatorState","hexagonVertices","getAttributeManager","add","accessor","updateState","super","oldVertices","propsOrDataChanged","setState","context","getAttributes","layerData","vertices","convertLatLngToMeterOffset","updateRadiusAngle","Array","isArray","vertex0","vertex3","centroid","centroidFlat","metersPerUnit","vt","vtFlat","getPickingInfo","info","_onGetSublayerColor","cell","_onGetSublayerElevation","_getSublayerUpdateTriggers","getUpdateTriggers","renderLayers","transitions","SubLayerClass","getSubLayerClass","updateTriggers","diskResolution","getFillColor","bind","getElevation","getSubLayerProps","layerName","setTooltipContent","o","className","TooltipRow","label","t","coordinate","elevationValue","getLayer","formData","payload","onAddFilter","setTooltip","fd","CategoricalColorNamespace","getScale","color_scheme","range","hexToRGB","features","js_data_mutator","sandboxedEval","jsFnMutator","aggFunc","getAggFunc","js_agg_function","weight","slice_id","pickable","grid_size","outline","commonLayerProps","createDeckGLComponent","datasource","getPoints","height","mapboxApiKey","setControlValue","width","CategoricalDeckGLContainer","constructor","containerRef","tooltip","current","getStateFromProps","getLayers","onValuesChange","UNSAFE_componentWillReceiveProps","nextProps","form_data","getStep","timestamps","f","__timestamp","c","color_picker","g","b","a","fixedColor","colorFn","cat_color","hasOwnProperty","dimension","sliceId","getCategories","granularity","time_grain_sqla","start","end","disabled","getPlaySliderParams","autozoom","fitViewport","zoom","selected","lastClick","addColor","filter","cats","category","categoryState","AnimatableDeckGLContainer","ref","mapboxApiAccessToken","mapStyle","mapbox_style","legend_format","legend_position","Component","layer","computeLayer","onViewportChange","nextFdNoVP","currFdNoVP","DeckGLContainer","layers","createCategoricalDeckGLComponent"],"sourceRoot":""}