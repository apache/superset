{"version":3,"file":"595a30c93acfef945612.chunk.js","mappings":"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","sources":["webpack://superset/./packages/superset-ui-core/src/chart/components/SuperChartCore.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/NoResultsComponent.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/SuperChart.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/FallbackComponent.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/createLoadableRenderer.ts","webpack://superset/./packages/superset-ui-core/src/chart/models/ChartProps.ts","webpack://superset/./packages/superset-ui-core/src/dimension/parseLength.ts","webpack://superset/./packages/superset-ui-core/src/utils/convertKeysToCamelCase.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable react/jsx-sort-default-props */\nimport * as React from 'react';\nimport { t } from '@superset-ui/core';\nimport { createSelector } from 'reselect';\nimport getChartComponentRegistry from '../registries/ChartComponentRegistrySingleton';\nimport getChartTransformPropsRegistry from '../registries/ChartTransformPropsRegistrySingleton';\nimport ChartProps from '../models/ChartProps';\nimport createLoadableRenderer from './createLoadableRenderer';\nimport { ChartType } from '../models/ChartPlugin';\nimport {\n  PreTransformProps,\n  TransformProps,\n  PostTransformProps,\n} from '../types/TransformFunction';\nimport { HandlerFunction } from '../types/Base';\n\nfunction IDENTITY<T>(x: T) {\n  return x;\n}\n\nconst EMPTY = () => null;\n\nconst defaultProps = {\n  id: '',\n  className: '',\n  preTransformProps: IDENTITY,\n  overrideTransformProps: undefined,\n  postTransformProps: IDENTITY,\n  onRenderSuccess() {},\n  onRenderFailure() {},\n};\n\ninterface LoadingProps {\n  error: { toString(): string };\n}\n\ninterface LoadedModules {\n  Chart: ChartType;\n  transformProps: TransformProps;\n}\n\ninterface RenderProps {\n  chartProps: ChartProps;\n  preTransformProps?: PreTransformProps;\n  postTransformProps?: PostTransformProps;\n}\n\nconst BLANK_CHART_PROPS = new ChartProps();\n\nexport type Props = {\n  id?: string;\n  className?: string;\n  chartProps?: ChartProps | null;\n  chartType: string;\n  preTransformProps?: PreTransformProps;\n  overrideTransformProps?: TransformProps;\n  postTransformProps?: PostTransformProps;\n  onRenderSuccess?: HandlerFunction;\n  onRenderFailure?: HandlerFunction;\n};\n\nexport default class SuperChartCore extends React.PureComponent<Props, {}> {\n  /**\n   * The HTML element that wraps all chart content\n   */\n  container?: HTMLElement | null;\n\n  /**\n   * memoized function so it will not recompute\n   * and return previous value\n   * unless one of\n   * - preTransformProps\n   * - transformProps\n   * - postTransformProps\n   * - chartProps\n   * is changed.\n   */\n  processChartProps = createSelector(\n    (input: {\n      chartProps: ChartProps;\n      preTransformProps?: PreTransformProps;\n      transformProps?: TransformProps;\n      postTransformProps?: PostTransformProps;\n    }) => input.chartProps,\n    input => input.preTransformProps,\n    input => input.transformProps,\n    input => input.postTransformProps,\n    (chartProps, pre = IDENTITY, transform = IDENTITY, post = IDENTITY) =>\n      post(transform(pre(chartProps))),\n  );\n\n  /**\n   * memoized function so it will not recompute\n   * and return previous value\n   * unless one of\n   * - chartType\n   * - overrideTransformProps\n   * is changed.\n   */\n  private createLoadableRenderer = createSelector(\n    (input: { chartType: string; overrideTransformProps?: TransformProps }) =>\n      input.chartType,\n    input => input.overrideTransformProps,\n    (chartType, overrideTransformProps) => {\n      if (chartType) {\n        const Renderer = createLoadableRenderer({\n          loader: {\n            Chart: () => getChartComponentRegistry().getAsPromise(chartType),\n            transformProps: overrideTransformProps\n              ? () => Promise.resolve(overrideTransformProps)\n              : () => getChartTransformPropsRegistry().getAsPromise(chartType),\n          },\n          loading: (loadingProps: LoadingProps) =>\n            this.renderLoading(loadingProps, chartType),\n          render: this.renderChart,\n        });\n\n        // Trigger preloading.\n        Renderer.preload();\n\n        return Renderer;\n      }\n\n      return EMPTY;\n    },\n  );\n\n  static defaultProps = defaultProps;\n\n  private renderChart = (loaded: LoadedModules, props: RenderProps) => {\n    const { Chart, transformProps } = loaded;\n    const { chartProps, preTransformProps, postTransformProps } = props;\n\n    return (\n      <Chart\n        {...this.processChartProps({\n          chartProps,\n          preTransformProps,\n          transformProps,\n          postTransformProps,\n        })}\n      />\n    );\n  };\n\n  private renderLoading = (loadingProps: LoadingProps, chartType: string) => {\n    const { error } = loadingProps;\n\n    if (error) {\n      return (\n        <div className=\"alert alert-warning\" role=\"alert\">\n          <strong>{t('ERROR')}</strong>&nbsp;\n          <code>chartType=&quot;{chartType}&quot;</code> &mdash;\n          {error.toString()}\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  private setRef = (container: HTMLElement | null) => {\n    this.container = container;\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      preTransformProps,\n      postTransformProps,\n      chartProps = BLANK_CHART_PROPS,\n      onRenderSuccess,\n      onRenderFailure,\n    } = this.props;\n\n    // Create LoadableRenderer and start preloading\n    // the lazy-loaded Chart components\n    const Renderer = this.createLoadableRenderer(this.props);\n\n    // Do not render if chartProps is set to null.\n    // but the pre-loading has been started in this.createLoadableRenderer\n    // to prepare for rendering once chartProps becomes available.\n    if (chartProps === null) {\n      return null;\n    }\n\n    const containerProps: {\n      id?: string;\n      className?: string;\n    } = {};\n    if (id) {\n      containerProps.id = id;\n    }\n    if (className) {\n      containerProps.className = className;\n    }\n\n    return (\n      <div {...containerProps} ref={this.setRef}>\n        <Renderer\n          preTransformProps={preTransformProps}\n          postTransformProps={postTransformProps}\n          chartProps={chartProps}\n          onRenderSuccess={onRenderSuccess}\n          onRenderFailure={onRenderFailure}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { CSSProperties } from 'react';\nimport { css, styled } from '../../style';\nimport { t } from '../../translation';\n\nconst MESSAGE_STYLES: CSSProperties = { maxWidth: 800 };\nconst MIN_WIDTH_FOR_BODY = 250;\n\nconst Container = styled.div<{\n  width: number | string;\n  height: number | string;\n}>`\n  ${({ theme, width, height }) => css`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    height: ${height}px;\n    width: ${width}px;\n    padding: ${theme.gridUnit * 4}px;\n\n    & .no-results-title {\n      font-size: ${theme.typography.sizes.l}px;\n      font-weight: ${theme.typography.weights.bold};\n      padding-bottom: ${theme.gridUnit * 2};\n    }\n\n    & .no-results-body {\n      font-size: ${theme.typography.sizes.m}px;\n    }\n  `}\n`;\n\ntype Props = {\n  className?: string;\n  height: number | string;\n  id?: string;\n  width: number | string;\n};\n\nconst NoResultsComponent = ({ className, height, id, width }: Props) => {\n  // render the body if the width is auto/100% or greater than 250 pixels\n  const shouldRenderBody =\n    typeof width === 'string' || width > MIN_WIDTH_FOR_BODY;\n\n  const BODY_STRING = t(\n    'No results were returned for this query. If you expected results to be returned, ensure any filters are configured properly and the datasource contains data for the selected time range.',\n  );\n\n  return (\n    <Container\n      height={height}\n      width={width}\n      className={className}\n      id={id}\n      title={shouldRenderBody ? undefined : BODY_STRING}\n    >\n      <div style={MESSAGE_STYLES}>\n        <div className=\"no-results-title\">{t('No Results')}</div>\n        {shouldRenderBody && (\n          <div className=\"no-results-body\">{BODY_STRING}</div>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default NoResultsComponent;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode, RefObject } from 'react';\nimport ErrorBoundary, {\n  ErrorBoundaryProps,\n  FallbackProps,\n} from 'react-error-boundary';\nimport { ParentSize } from '@vx/responsive';\nimport { createSelector } from 'reselect';\nimport { withTheme } from '@emotion/react';\nimport { parseLength, Dimension } from '../../dimension';\nimport getChartMetadataRegistry from '../registries/ChartMetadataRegistrySingleton';\nimport SuperChartCore, { Props as SuperChartCoreProps } from './SuperChartCore';\nimport DefaultFallbackComponent from './FallbackComponent';\nimport ChartProps, { ChartPropsConfig } from '../models/ChartProps';\nimport NoResultsComponent from './NoResultsComponent';\n\nconst defaultProps = {\n  FallbackComponent: DefaultFallbackComponent,\n  height: 400 as string | number,\n  width: '100%' as string | number,\n  enableNoResults: true,\n};\n\nexport type FallbackPropsWithDimension = FallbackProps & Partial<Dimension>;\n\nexport type WrapperProps = Dimension & {\n  children: ReactNode;\n};\n\nexport type Props = Omit<SuperChartCoreProps, 'chartProps'> &\n  Omit<ChartPropsConfig, 'width' | 'height'> & {\n    /**\n     * Set this to true to disable error boundary built-in in SuperChart\n     * and let the error propagate to upper level\n     * and handle by yourself\n     */\n    disableErrorBoundary?: boolean;\n    /** debounceTime to check for container resize */\n    debounceTime?: number;\n    /** enable \"No Results\" message if empty result set */\n    enableNoResults?: boolean;\n    /** Component to render when there are unexpected errors */\n    FallbackComponent?: React.ComponentType<FallbackPropsWithDimension>;\n    /** Event listener for unexpected errors from chart */\n    onErrorBoundary?: ErrorBoundaryProps['onError'];\n    /** Prop for form plugins using superchart */\n    showOverflow?: boolean;\n    /** Prop for popovercontainer ref */\n    parentRef?: RefObject<any>;\n    /** Prop for chart ref */\n    inputRef?: RefObject<any>;\n    /** Chart width */\n    height?: number | string;\n    /** Chart height */\n    width?: number | string;\n    /**\n     * Component to wrap the actual chart\n     * after the dynamic width and height are determined.\n     * This can be useful for handling tooltip z-index, etc.\n     * e.g. <div style={{ position: 'fixed' }} />\n     * You cannot just wrap this same component outside of SuperChart\n     * when using dynamic width or height\n     * because it will clash with auto-sizing.\n     */\n    Wrapper?: React.ComponentType<WrapperProps>;\n    /**\n     * Component to display when query returns no results.\n     * If not defined, NoResultsComponent is used\n     */\n    noResults?: ReactNode;\n  };\n\ntype PropsWithDefault = Props & Readonly<typeof defaultProps>;\n\nclass SuperChart extends React.PureComponent<Props, {}> {\n  /**\n   * SuperChart's core\n   */\n  core?: SuperChartCore | null;\n\n  private createChartProps = ChartProps.createSelector();\n\n  private parseDimension = createSelector(\n    ({ width }: { width: string | number; height: string | number }) => width,\n    ({ height }) => height,\n    (width, height) => {\n      // Parse them in case they are % or 'auto'\n      const widthInfo = parseLength(width);\n      const heightInfo = parseLength(height);\n\n      const boxHeight = heightInfo.isDynamic\n        ? `${heightInfo.multiplier * 100}%`\n        : heightInfo.value;\n      const boxWidth = widthInfo.isDynamic\n        ? `${widthInfo.multiplier * 100}%`\n        : widthInfo.value;\n      const style = {\n        height: boxHeight,\n        width: boxWidth,\n      };\n\n      // bounding box will ensure that when one dimension is not dynamic\n      // e.g. height = 300\n      // the auto size will be bound to that value instead of being 100% by default\n      // e.g. height: 300 instead of height: '100%'\n      const BoundingBox =\n        widthInfo.isDynamic &&\n        heightInfo.isDynamic &&\n        widthInfo.multiplier === 1 &&\n        heightInfo.multiplier === 1\n          ? React.Fragment\n          : ({ children }: { children: ReactNode }) => (\n              <div style={style}>{children}</div>\n            );\n\n      return { BoundingBox, heightInfo, widthInfo };\n    },\n  );\n\n  static defaultProps = defaultProps;\n\n  private setRef = (core: SuperChartCore | null) => {\n    this.core = core;\n  };\n\n  private getQueryCount = () =>\n    getChartMetadataRegistry().get(this.props.chartType)?.queryObjectCount ?? 1;\n\n  renderChart(width: number, height: number) {\n    const {\n      id,\n      className,\n      chartType,\n      preTransformProps,\n      overrideTransformProps,\n      postTransformProps,\n      onRenderSuccess,\n      onRenderFailure,\n      disableErrorBoundary,\n      FallbackComponent,\n      onErrorBoundary,\n      Wrapper,\n      queriesData,\n      enableNoResults,\n      noResults,\n      theme,\n      ...rest\n    } = this.props as PropsWithDefault;\n\n    const chartProps = this.createChartProps({\n      ...rest,\n      queriesData,\n      height,\n      width,\n      theme,\n    });\n\n    let chart;\n    // Render the no results component if the query data is null or empty\n    const noResultQueries =\n      enableNoResults &&\n      (!queriesData ||\n        queriesData\n          .slice(0, this.getQueryCount())\n          .every(\n            ({ data }) => !data || (Array.isArray(data) && data.length === 0),\n          ));\n    if (noResultQueries) {\n      chart = noResults || (\n        <NoResultsComponent\n          id={id}\n          className={className}\n          height={height}\n          width={width}\n        />\n      );\n    } else {\n      const chartWithoutWrapper = (\n        <SuperChartCore\n          ref={this.setRef}\n          id={id}\n          className={className}\n          chartType={chartType}\n          chartProps={chartProps}\n          preTransformProps={preTransformProps}\n          overrideTransformProps={overrideTransformProps}\n          postTransformProps={postTransformProps}\n          onRenderSuccess={onRenderSuccess}\n          onRenderFailure={onRenderFailure}\n        />\n      );\n      chart = Wrapper ? (\n        <Wrapper width={width} height={height}>\n          {chartWithoutWrapper}\n        </Wrapper>\n      ) : (\n        chartWithoutWrapper\n      );\n    }\n    // Include the error boundary by default unless it is specifically disabled.\n    return disableErrorBoundary === true ? (\n      chart\n    ) : (\n      <ErrorBoundary\n        FallbackComponent={(props: FallbackProps) => (\n          <FallbackComponent width={width} height={height} {...props} />\n        )}\n        onError={onErrorBoundary}\n      >\n        {chart}\n      </ErrorBoundary>\n    );\n  }\n\n  render() {\n    const { heightInfo, widthInfo, BoundingBox } = this.parseDimension(\n      this.props as PropsWithDefault,\n    );\n\n    // If any of the dimension is dynamic, get parent's dimension\n    if (widthInfo.isDynamic || heightInfo.isDynamic) {\n      const { debounceTime } = this.props;\n\n      return (\n        <BoundingBox>\n          <ParentSize debounceTime={debounceTime}>\n            {({ width, height }) =>\n              this.renderChart(\n                widthInfo.isDynamic ? Math.floor(width) : widthInfo.value,\n                heightInfo.isDynamic ? Math.floor(height) : heightInfo.value,\n              )\n            }\n          </ParentSize>\n        </BoundingBox>\n      );\n    }\n\n    return this.renderChart(widthInfo.value, heightInfo.value);\n  }\n}\n\nexport default withTheme(SuperChart);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { SupersetTheme } from '../../style';\nimport { FallbackPropsWithDimension } from './SuperChart';\n\nexport type Props = FallbackPropsWithDimension;\n\nexport default function FallbackComponent({\n  componentStack,\n  error,\n  height,\n  width,\n}: Props) {\n  return (\n    <div\n      css={(theme: SupersetTheme) => ({\n        backgroundColor: theme.colors.grayscale.dark2,\n        color: theme.colors.grayscale.light5,\n        overflow: 'auto',\n        padding: 32,\n      })}\n      style={{ height, width }}\n    >\n      <div>\n        <div>\n          <b>{t('Oops! An error occurred!')}</b>\n        </div>\n        <code>{error ? error.toString() : 'Unknown Error'}</code>\n      </div>\n      {componentStack && (\n        <div>\n          <b>{t('Stack Trace:')}</b>\n          <code>\n            {componentStack.split('\\n').map((row: string) => (\n              <div key={row}>{row}</div>\n            ))}\n          </code>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Loadable from 'react-loadable';\n\nexport type LoadableRendererProps = {\n  onRenderFailure?: Function;\n  onRenderSuccess?: Function;\n};\n\nconst defaultProps = {\n  onRenderFailure() {},\n  onRenderSuccess() {},\n};\n\nexport interface LoadableRenderer<Props>\n  extends React.ComponentClass<Props & LoadableRendererProps>,\n    Loadable.LoadableComponent {}\n\nexport default function createLoadableRenderer<Props, Exports>(\n  options: Loadable.OptionsWithMap<Props, Exports>,\n): LoadableRenderer<Props> {\n  const LoadableRenderer = Loadable.Map(options) as LoadableRenderer<Props>;\n\n  // Extends the behavior of LoadableComponent to provide post-render listeners\n  class CustomLoadableRenderer extends LoadableRenderer {\n    static defaultProps: object;\n\n    componentDidMount() {\n      this.afterRender();\n    }\n\n    componentDidUpdate() {\n      this.afterRender();\n    }\n\n    afterRender() {\n      const { loaded, loading, error } = this.state;\n      const { onRenderFailure, onRenderSuccess } = this.props;\n      if (!loading) {\n        if (error) {\n          (onRenderFailure as Function)(error);\n        } else if (loaded && Object.keys(loaded).length > 0) {\n          (onRenderSuccess as Function)();\n        }\n      }\n    }\n  }\n\n  CustomLoadableRenderer.defaultProps = defaultProps;\n  CustomLoadableRenderer.preload = LoadableRenderer.preload;\n\n  return CustomLoadableRenderer;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/** Type checking is disabled for this file due to reselect only supporting\n * TS declarations for selectors with up to 12 arguments. */\n// @ts-nocheck\nimport { RefObject } from 'react';\nimport { createSelector } from 'reselect';\nimport {\n  AppSection,\n  Behavior,\n  convertKeysToCamelCase,\n  Datasource,\n  FilterState,\n  JsonObject,\n} from '../..';\nimport { HandlerFunction, PlainObject, SetDataMaskHook } from '../types/Base';\nimport { QueryData, DataRecordFilters } from '..';\nimport { SupersetTheme } from '../../style';\n\n// TODO: more specific typing for these fields of ChartProps\ntype AnnotationData = PlainObject;\ntype SnakeCaseDatasource = PlainObject;\ntype CamelCaseFormData = PlainObject;\ntype SnakeCaseFormData = PlainObject;\ntype RawFormData = CamelCaseFormData | SnakeCaseFormData;\n\ntype ChartPropsSelector = (c: ChartPropsConfig) => ChartProps;\n\n/** Optional field for event handlers, renderers */\ntype Hooks = {\n  /**\n   * sync active filters between chart and dashboard, \"add\" actually\n   * also handles \"change\" and \"remove\".\n   */\n  onAddFilter?: (newFilters: DataRecordFilters, merge?: boolean) => void;\n  /** handle right click */\n  onContextMenu?: HandlerFunction;\n  /** handle errors */\n  onError?: HandlerFunction;\n  /** use the vis as control to update state */\n  setControlValue?: HandlerFunction;\n  /** handle external filters */\n  setDataMask?: SetDataMaskHook;\n  /** handle tooltip */\n  setTooltip?: HandlerFunction;\n} & PlainObject;\n\n/**\n * Preferred format for ChartProps config\n */\nexport interface ChartPropsConfig {\n  annotationData?: AnnotationData;\n  /** Datasource metadata */\n  datasource?: SnakeCaseDatasource;\n  /**\n   * Formerly called \"filters\", which was misleading because it is actually\n   * initial values of the filter_box and table vis\n   */\n  initialValues?: DataRecordFilters;\n  /** Main configuration of the chart */\n  formData?: RawFormData;\n  /** Chart height */\n  height?: number;\n  /** Programmatic overrides such as event handlers, renderers */\n  hooks?: Hooks;\n  /** The data returned for all queries objects in the request */\n  queriesData?: QueryData[];\n  /** Chart width */\n  width?: number;\n  /** Own chart state that saved in dashboard */\n  ownState?: JsonObject;\n  /** Filter state that saved in dashboard */\n  filterState?: FilterState;\n  /** Set of actual behaviors that this instance of chart should use */\n  behaviors?: Behavior[];\n  /** Chart display settings related to current view context */\n  displaySettings?: JsonObject;\n  /** Application section of the chart on the screen (in what components/screen it placed) */\n  appSection?: AppSection;\n  /** is the chart refreshing its contents */\n  isRefreshing?: boolean;\n  /** chart ref */\n  inputRef?: RefObject<any>;\n  /** Theme object */\n  theme: SupersetTheme;\n}\n\nconst DEFAULT_WIDTH = 800;\nconst DEFAULT_HEIGHT = 600;\n\nexport default class ChartProps<FormData extends RawFormData = RawFormData> {\n  static createSelector: () => ChartPropsSelector;\n\n  annotationData: AnnotationData;\n\n  datasource: Datasource;\n\n  rawDatasource: SnakeCaseDatasource;\n\n  initialValues: DataRecordFilters;\n\n  formData: CamelCaseFormData;\n\n  rawFormData: FormData;\n\n  height: number;\n\n  hooks: Hooks;\n\n  ownState: JsonObject;\n\n  filterState: FilterState;\n\n  queriesData: QueryData[];\n\n  width: number;\n\n  behaviors: Behavior[];\n\n  displaySettings?: JsonObject;\n\n  appSection?: AppSection;\n\n  isRefreshing?: boolean;\n\n  inputRef?: RefObject<any>;\n\n  inContextMenu?: boolean;\n\n  emitCrossFilters?: boolean;\n\n  theme: SupersetTheme;\n\n  constructor(config: ChartPropsConfig & { formData?: FormData } = {}) {\n    const {\n      annotationData = {},\n      datasource = {},\n      formData = {} as FormData,\n      hooks = {},\n      ownState = {},\n      filterState = {},\n      initialValues = {},\n      queriesData = [],\n      behaviors = [],\n      displaySettings = {},\n      width = DEFAULT_WIDTH,\n      height = DEFAULT_HEIGHT,\n      appSection,\n      isRefreshing,\n      inputRef,\n      inContextMenu = false,\n      emitCrossFilters = false,\n      theme,\n    } = config;\n    this.width = width;\n    this.height = height;\n    this.annotationData = annotationData;\n    this.datasource = convertKeysToCamelCase(datasource) as Datasource;\n    this.rawDatasource = datasource;\n    this.formData = convertKeysToCamelCase(formData);\n    this.rawFormData = formData;\n    this.hooks = hooks;\n    this.initialValues = initialValues;\n    this.queriesData = queriesData;\n    this.ownState = ownState;\n    this.filterState = filterState;\n    this.behaviors = behaviors;\n    this.displaySettings = displaySettings;\n    this.appSection = appSection;\n    this.isRefreshing = isRefreshing;\n    this.inputRef = inputRef;\n    this.inContextMenu = inContextMenu;\n    this.emitCrossFilters = emitCrossFilters;\n    this.theme = theme;\n  }\n}\n\n// eslint-disable-next-line func-name-matching\nChartProps.createSelector = function create(): ChartPropsSelector {\n  return createSelector(\n    (input: ChartPropsConfig) => input.annotationData,\n    input => input.datasource,\n    input => input.formData,\n    input => input.height,\n    input => input.hooks,\n    input => input.initialValues,\n    input => input.queriesData,\n    input => input.width,\n    input => input.ownState,\n    input => input.filterState,\n    input => input.behaviors,\n    input => input.displaySettings,\n    input => input.appSection,\n    input => input.isRefreshing,\n    input => input.inputRef,\n    input => input.inContextMenu,\n    input => input.emitCrossFilters,\n    input => input.theme,\n    (\n      annotationData,\n      datasource,\n      formData,\n      height,\n      hooks,\n      initialValues,\n      queriesData,\n      width,\n      ownState,\n      filterState,\n      behaviors,\n      displaySettings,\n      appSection,\n      isRefreshing,\n      inputRef,\n      inContextMenu,\n      emitCrossFilters,\n      theme,\n    ) =>\n      new ChartProps({\n        annotationData,\n        datasource,\n        formData,\n        height,\n        hooks,\n        initialValues,\n        queriesData,\n        ownState,\n        filterState,\n        width,\n        behaviors,\n        displaySettings,\n        appSection,\n        isRefreshing,\n        inputRef,\n        inContextMenu,\n        emitCrossFilters,\n        theme,\n      }),\n  );\n};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst HUNDRED_PERCENT = { isDynamic: true, multiplier: 1 } as const;\n\nexport default function parseLength(\n  input: string | number,\n):\n  | { isDynamic: true; multiplier: number }\n  | { isDynamic: false; value: number } {\n  if (input === 'auto' || input === '100%') {\n    return HUNDRED_PERCENT;\n  }\n\n  if (\n    typeof input === 'string' &&\n    input.length > 0 &&\n    input[input.length - 1] === '%'\n  ) {\n    return { isDynamic: true, multiplier: parseFloat(input) / 100 };\n  }\n  const value = typeof input === 'number' ? input : parseFloat(input);\n\n  return { isDynamic: false, value };\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport camelCase from 'lodash/camelCase';\nimport isPlainObject from 'lodash/isPlainObject';\nimport mapKeys from 'lodash/mapKeys';\n\nexport default function convertKeysToCamelCase<T>(object: T) {\n  if (object === null || object === undefined) {\n    return object;\n  }\n  if (isPlainObject(object)) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return mapKeys(object as { [key: string]: any }, (_, k) =>\n      camelCase(k),\n    ) as T;\n  }\n  throw new Error(`Cannot convert input that is not a plain object: ${object}`);\n}\n"],"names":["IDENTITY","x","EMPTY","defaultProps","id","className","preTransformProps","overrideTransformProps","undefined","postTransformProps","onRenderSuccess","onRenderFailure","BLANK_CHART_PROPS","ChartProps","SuperChartCore","React","container","processChartProps","createSelector","input","chartProps","transformProps","pre","transform","post","createLoadableRenderer","chartType","Renderer","loader","Chart","getChartComponentRegistry","getAsPromise","Promise","resolve","getChartTransformPropsRegistry","loading","loadingProps","this","renderLoading","render","renderChart","preload","loaded","props","error","role","t","toString","setRef","containerProps","ref","MESSAGE_STYLES","maxWidth","Container","styled","theme","width","height","css","gridUnit","typography","sizes","l","weights","bold","m","shouldRenderBody","BODY_STRING","title","style","FallbackComponent","componentStack","backgroundColor","colors","grayscale","dark2","color","light5","overflow","padding","split","map","row","key","enableNoResults","SuperChart","core","createChartProps","parseDimension","widthInfo","parseLength","heightInfo","isDynamic","multiplier","value","BoundingBox","children","getQueryCount","getChartMetadataRegistry","get","queryObjectCount","disableErrorBoundary","onErrorBoundary","Wrapper","queriesData","noResults","rest","chart","slice","every","data","Array","isArray","length","chartWithoutWrapper","onError","debounceTime","ParentSize","Math","floor","withTheme","options","LoadableRenderer","Loadable","CustomLoadableRenderer","componentDidMount","afterRender","componentDidUpdate","state","Object","keys","DEFAULT_WIDTH","DEFAULT_HEIGHT","constructor","config","annotationData","datasource","rawDatasource","initialValues","formData","rawFormData","hooks","ownState","filterState","behaviors","displaySettings","appSection","isRefreshing","inputRef","inContextMenu","emitCrossFilters","convertKeysToCamelCase","HUNDRED_PERCENT","parseFloat","object","isPlainObject","mapKeys","_","k","camelCase","Error"],"sourceRoot":""}