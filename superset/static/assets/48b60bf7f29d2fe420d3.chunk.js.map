{"version":3,"file":"48b60bf7f29d2fe420d3.chunk.js","mappings":"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","sources":["webpack://superset/./src/views/CRUD/allentities/AllEntitiesTable.tsx","webpack://superset/./src/views/CRUD/allentities/AllEntities.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { t, styled, logging } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { fetchObjects } from '../../../tags';\nimport Loading from '../../../components/Loading';\n\nconst AllEntitiesTableContainer = styled.div`\n  text-align: left;\n  border-radius: ${({ theme }) => theme.gridUnit * 1}px 0;\n  margin: 0 ${({ theme }) => theme.gridUnit * 4}px;\n  .table {\n    table-layout: fixed;\n  }\n  .td {\n    width: 33%;\n  }\n`;\n\ninterface TaggedObject {\n  id: number;\n  type: string;\n  name: string;\n  url: string;\n  changed_on: moment.MomentInput;\n  created_by: number | undefined;\n  creator: string;\n}\n\ninterface TaggedObjects {\n  dashboard: TaggedObject[];\n  chart: TaggedObject[];\n  query: TaggedObject[];\n}\n\ninterface AllEntitiesTableProps {\n  search?: string;\n}\n\nexport default function AllEntitiesTable({\n  search = '',\n}: AllEntitiesTableProps) {\n  type objectType = 'dashboard' | 'chart' | 'query';\n\n  const [objects, setObjects] = useState<TaggedObjects>({\n    dashboard: [],\n    chart: [],\n    query: [],\n  });\n\n  useEffect(() => {\n    fetchObjects(\n      { tags: search, types: null },\n      (data: TaggedObject[]) => {\n        const objects = { dashboard: [], chart: [], query: [] };\n        data.forEach(function (object) {\n          const object_type = object.type;\n          objects[object_type].push(object);\n        });\n        setObjects(objects);\n      },\n      (error: Response) => {\n        addDangerToast('Error Fetching Tagged Objects');\n        logging.log(error.text);\n      },\n    );\n  }, [search]);\n\n  const renderTable = (type: objectType) => {\n    const data = objects[type].map((o: TaggedObject) => ({\n      [type]: <a href={o.url}>{o.name}</a>,\n      modified: moment.utc(o.changed_on).fromNow(),\n    }));\n    return (\n      <TableView\n        className=\"table-condensed\"\n        emptyWrapperType={EmptyWrapperType.Small}\n        data={data}\n        pageSize={50}\n        columns={[\n          {\n            accessor: type,\n            Header: type.charAt(0).toUpperCase() + type.slice(1),\n          },\n          { accessor: 'modified', Header: 'Modified' },\n        ]}\n      />\n    );\n  };\n\n  if (objects) {\n    return (\n      <AllEntitiesTableContainer>\n        <h3>{t('Dashboards')}</h3>\n        {renderTable('dashboard')}\n        <hr />\n        <h3>{t('Charts')}</h3>\n        {renderTable('chart')}\n        <hr />\n        <h3>{t('Queries')}</h3>\n        {renderTable('query')}\n      </AllEntitiesTableContainer>\n    );\n  }\n  return <Loading />;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { ensureIsArray, styled, t } from '@superset-ui/core';\nimport { StringParam, useQueryParam } from 'use-query-params';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AsyncSelect from 'src/components/Select/AsyncSelect';\nimport { SelectValue } from 'antd/lib/select';\nimport { loadTags } from 'src/components/Tags/utils';\nimport { getValue } from 'src/components/Select/utils';\nimport AllEntitiesTable from './AllEntitiesTable';\n\nconst AllEntitiesContainer = styled.div`\n  ${({ theme }) => `\n  background-color: ${theme.colors.grayscale.light4};\n  .select-control {\n    margin-left: ${theme.gridUnit * 4}px;\n    margin-right: ${theme.gridUnit * 4}px;\n    margin-bottom: ${theme.gridUnit * 2}px;\n  }\n  .select-control-label {\n    text-transform: uppercase;\n    font-size: ${theme.gridUnit * 3}px;\n    color: ${theme.colors.grayscale.base};\n    margin-bottom: ${theme.gridUnit * 1}px;\n  }`}\n`;\n\nconst AllEntitiesNav = styled.div`\n  ${({ theme }) => `\n  height: ${theme.gridUnit * 12.5}px;\n  background-color: ${theme.colors.grayscale.light5};\n  margin-bottom: ${theme.gridUnit * 4}px;\n  .navbar-brand {\n    margin-left: ${theme.gridUnit * 2}px;\n    font-weight: ${theme.typography.weights.bold};\n  }`};\n`;\n\nfunction AllEntities() {\n  const [tagsQuery, setTagsQuery] = useQueryParam('tags', StringParam);\n\n  const onTagSearchChange = (value: SelectValue) => {\n    const tags = ensureIsArray(value).map(tag => getValue(tag));\n    const tagSearch = tags.join(',');\n    setTagsQuery(tagSearch);\n  };\n\n  const tagsValue = useMemo(\n    () =>\n      tagsQuery\n        ? tagsQuery.split(',').map(tag => ({ value: tag, label: tag }))\n        : [],\n    [tagsQuery],\n  );\n\n  return (\n    <AllEntitiesContainer>\n      <AllEntitiesNav>\n        <span className=\"navbar-brand\">{t('All Entities')}</span>\n      </AllEntitiesNav>\n      <div className=\"select-control\">\n        <div className=\"select-control-label\">{t('search by tags')}</div>\n        <AsyncSelect\n          ariaLabel=\"tags\"\n          value={tagsValue}\n          onChange={onTagSearchChange}\n          options={loadTags}\n          placeholder=\"Select\"\n          mode=\"multiple\"\n        />\n      </div>\n      <AllEntitiesTable search={tagsQuery || ''} />\n    </AllEntitiesContainer>\n  );\n}\n\nexport default withToasts(AllEntities);\n"],"names":["AllEntitiesTableContainer","styled","theme","gridUnit","AllEntitiesTable","search","objects","setObjects","useState","dashboard","chart","query","useEffect","fetchObjects","tags","types","data","forEach","object","object_type","type","push","error","addDangerToast","logging","text","renderTable","map","o","href","url","name","modified","moment","changed_on","fromNow","TableView","className","emptyWrapperType","EmptyWrapperType","pageSize","columns","accessor","Header","charAt","toUpperCase","slice","t","Loading","AllEntitiesContainer","colors","grayscale","light4","base","AllEntitiesNav","light5","typography","weights","bold","withToasts","tagsQuery","setTagsQuery","useQueryParam","StringParam","tagsValue","useMemo","split","tag","value","label","AsyncSelect","ariaLabel","onChange","tagSearch","ensureIsArray","getValue","join","options","loadTags","placeholder","mode"],"sourceRoot":""}