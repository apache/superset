{"version":3,"file":"16cf3edc284d2ee6501a.chunk.js","mappings":"mOAyBA,MAAMA,EAAeC,EAAAA,GAAAA,GAAW;IAC3B,IAAD,IAAC,MAAEC,GAAH,QAAgB,oBACHA,EAAMC,WAAWC,MAAMC,kDAEtBH,EAAMI,OAAOC,UAAUC,gCACnBN,EAAMO,cAAcP,EAAMI,OAAOC,UAAUG,wBAClC,EAAjBR,EAAMO,6BACY,EAAjBP,EAAMO,cAAmC,EAAjBP,EAAMO,uMAW5BP,EAAMI,OAAOC,UAAUI,sFAIG,EAAjBT,EAAMO,4CArB5B;EA4BEG,EAAoB,MAEpBC,EAAY,CAChBC,WAAYC,IAAAA,OACZC,iBAAkBD,IAAAA,KAClBE,OAAQF,IAAAA,OACRG,SAAUH,IAAAA,MAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,OACnDI,mBAAoBJ,IAAAA,KACpBK,eAAgBL,IAAAA,MAYH,MAAMM,UAAeC,EAAAA,cAClCL,OAAOM,GACL,IAAKC,KAAKC,MAAMR,QAAUO,KAAKC,MAAMT,iBACnC,OAAOO,EAGT,MAAMG,EAAWC,WAAWJ,GAE5B,OAAOK,EAAAA,EAAAA,IAAaJ,KAAKC,MAAMR,OAAQS,EACxC,CAEDG,oBAAoBC,GAClB,IAAKN,KAAKC,MAAMR,OACd,OAAOa,EAGT,GAAI,IAAAA,GAAC,KAADA,EAAWlB,GAAoB,CACjC,MAAMmB,EAASD,EAAEE,MAAMpB,GAEvB,OACEY,KAAKP,OAAOc,EAAO,IAAMnB,EAAoBY,KAAKP,OAAOc,EAAO,GAEnE,CAED,OAAOP,KAAKP,OAAOa,EACpB,CAEDG,SACE,GACgD,IAA9CC,OAAOC,KAAKX,KAAKC,MAAMX,YAAYsB,QACX,OAAxBZ,KAAKC,MAAMP,SAEX,OAAO,KAGT,MAAMJ,EAAaoB,OAAOG,QAAQb,KAAKC,MAAMX,YAAYwB,KAAK,IAAY,IAAXR,EAAGS,GAAO,EACvE,MAAMC,EAAQ,CAAEC,MAAQ,QAAOF,EAAEE,MAAMC,KAAK,UACtCC,EAAOJ,EAAEK,QAAU,IAAW,IAEpC,OACE,cAAIC,IAAKf,IACP,aACEgB,KAAK,IACLC,QAAS,IAAMvB,KAAKC,MAAML,eAAeU,GACzCkB,cAAe,IAAMxB,KAAKC,MAAMN,mBAAmBW,KAEnD,gBAAMU,MAAOA,GAAQG,GALvB,IAKqCnB,KAAKK,oBAAoBC,IAPlE,IAeIU,EAAQ,CACZtB,SAAU,WACV,CAJiD,MAAlCM,KAAKC,MAAMP,SAAS+B,OAAO,GAAa,MAAQ,UAInD,MACZ,CAJmD,MAAlCzB,KAAKC,MAAMP,SAAS+B,OAAO,GAAa,QAAU,QAIrD,QAGhB,OACE,QAACjD,EAAD,CAAcwC,MAAOA,IACnB,kBAAK1B,GAGV,EAGHO,EAAOR,UAAYA,EACnBQ,EAAO6B,aA9Ec,CACnBpC,WAAY,CAAC,EACbE,kBAAkB,EAClBC,OAAQ,KACRC,SAAU,KACVC,mBAAoB,OACpBC,eAAgB,O,+IC7ClB,SAAS+B,EAAkBC,GACzB,OACEA,EAAEC,OAAOC,aACP,eAAKC,UAAU,kBACZrB,OAAOC,KAAKiB,EAAEC,OAAOC,YAAYhB,KAAI,CAACkB,EAAMC,KAC3C,QAAC,IAAD,CACEZ,IAAM,QAAOY,IACbC,MAAQ,GAAEF,MACVjC,MAAQ,GAAE6B,EAAEC,OAAOC,WAAWE,SAMzC,CAEM,SAASG,EAASC,EAAUC,EAASC,EAAaC,GACvD,MAAMC,EAAKJ,EACLK,EAAID,EAAGE,aACPC,EAAa,CAACF,EAAEG,EAAGH,EAAEI,EAAGJ,EAAEK,EAAG,IAAML,EAAEM,GAC3C,IAAIC,EAAOX,EAAQW,KAAKC,SAASnC,KAAIoC,IAAO,IACvCA,EACHC,KAAMD,EAAQC,KACdC,MAAOZ,EAAGa,WACVpC,MAAO0B,MAQT,OALIH,EAAGc,kBAELN,GADoBO,EAAAA,EAAAA,GAAcf,EAAGc,gBAC9BE,CAAYR,IAGd,IAAIS,EAAAA,EAAU,CACnBC,GAAK,cAAalB,EAAGmB,WACrBC,SAAUC,GAAKA,EAAE5C,MACjB6C,QAASD,GAAKA,EAAEV,KAChBY,SAAUF,GAAKA,EAAET,MACjBJ,OACAgB,SAAS,EACTC,WAAY,MACTC,EAAAA,EAAAA,GAAiB1B,EAAID,EAAYZ,IAEvC,CAWD,SAAewC,EAAAA,EAAAA,GAAsBhC,GATrC,SAAmBa,GACjB,IAAIoB,EAAS,GAKb,OAJApB,EAAKqB,SAAQR,IACXO,EAASA,EAAOE,OAAOT,EAAEV,KAAzB,IAGKiB,CACR,G,qMCxCD,MAAM,SAAEG,GAAaC,EAsBfnF,EAAY,CAChBoF,WAAYlF,IAAAA,OAAAA,WACZ6C,SAAU7C,IAAAA,OAAAA,WACV4C,SAAU5C,IAAAA,KAAAA,WACVmF,UAAWnF,IAAAA,KAAAA,WACXoF,OAAQpF,IAAAA,OAAAA,WACRqF,aAAcrF,IAAAA,OAAAA,WACd+C,YAAa/C,IAAAA,KACb8C,QAAS9C,IAAAA,OAAAA,WACTsF,gBAAiBtF,IAAAA,KAAAA,WACjBuF,SAAUvF,IAAAA,OAAAA,WACV6D,MAAO7D,IAAAA,OAAAA,YAGM,MAAMwF,UAAmCjF,EAAAA,cAStDkF,YAAY/E,GACVgF,MAAMhF,GADW,KARnBiF,aAAepF,EAAAA,YAQI,KA2KnByC,WAAa4C,IACX,MAAM,QAAEC,GAAYpF,KAAKkF,aACrBE,GACFA,EAAQ7C,WAAW4C,EACpB,EA7KDnF,KAAKqF,MAAQrF,KAAKsF,kBAAkBrF,GAEpCD,KAAKuF,UAAYvF,KAAKuF,UAAUC,KAAKxF,MACrCA,KAAKyF,eAAiBzF,KAAKyF,eAAeD,KAAKxF,MAC/CA,KAAKJ,eAAiBI,KAAKJ,eAAe4F,KAAKxF,MAC/CA,KAAKL,mBAAqBK,KAAKL,mBAAmB6F,KAAKxF,KACxD,CAED0F,iCAAiCC,GAC3BA,EAAUtD,QAAQuD,YAAc5F,KAAKqF,MAAMjD,UAC7CpC,KAAK6F,SAAS,IAAK7F,KAAKsF,kBAAkBK,IAE7C,CAEDF,eAAelF,GACbP,KAAK6F,SAAS,CACZtF,OAAQuF,MAAMC,QAAQxF,GAClBA,EACA,CAACA,EAAQA,EAASP,KAAKqF,MAAMW,QAAQzF,KAE5C,CAGD+E,kBAAkBrF,EAAOoF,GACvB,MAAMpC,EAAWhD,EAAMoC,QAAQW,KAAKC,UAAY,GAC1CgD,EAAahD,EAASnC,KAAIoF,GAAKA,EAAEC,cACjC7G,EAvEV,SAAuBkD,EAAIQ,GACzB,MAAMP,EAAID,EAAGE,cAAgB,CAAEE,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9CJ,EAAa,CAACF,EAAEG,EAAGH,EAAEI,EAAGJ,EAAEK,EAAG,IAAML,EAAEM,GACrCqD,EAAU7B,EAAS/B,EAAG6D,cACtB/G,EAAa,CAAC,EAapB,OAZA0D,EAAKqB,SAAQR,IACX,GAAmB,MAAfA,EAAEyC,YAAsBhH,EAAWiH,eAAe1C,EAAEyC,WAAY,CAClE,IAAIrF,EAEFA,EADEuB,EAAGgE,WACGC,EAAAA,EAAAA,UAASL,EAAQvC,EAAEyC,UAAW9D,EAAGkE,SAAgB,IAANjE,EAAEM,GAE7CJ,EAEVrD,EAAWuE,EAAEyC,WAAa,CAAErF,QAAOG,SAAS,EAC7C,KAGI9B,CACR,CAqDsBqH,CAAc1G,EAAMmC,SAAUa,GAKjD,GAAIoC,GAASpF,EAAMoC,QAAQuD,YAAcP,EAAMjD,SAC7C,MAAO,IAAKiD,EAAO/F,cAKrB,MAAMsH,EACJ3G,EAAMoC,QAAQuD,UAAUiB,iBACxB5G,EAAMoC,QAAQuD,UAAUgB,aACxB,OAEI,MAAEE,EAAF,IAASC,EAAT,QAAcf,EAAd,OAAuBzF,EAAvB,SAA+ByG,IAAaC,EAAAA,EAAAA,GAChDhB,EACAW,IAGI,MAAExD,EAAF,OAASuB,EAAT,SAAiBvC,GAAanC,EACpC,IAAI,SAAE6E,GAAa7E,EAYnB,OAXImC,EAAS8E,WACXpC,GAAWqC,EAAAA,EAAAA,GAAYrC,EAAU,CAC/B1B,QACAuB,SACAP,OAAQnE,EAAMyE,UAAUzB,MAGxB6B,EAASsC,KAAO,IAClBtC,EAASsC,KAAO,GAGX,CACLN,QACAC,MACAf,UACAzF,SACAyG,WACAlC,WACAuC,SAAU,GACVC,UAAW,EACXlF,SAAUnC,EAAMoC,QAAQuD,UACxBtG,aAEH,CAEDiG,UAAUhF,GACR,MAAM,SAAE4B,EAAF,QAAYE,EAASD,SAAUI,EAA/B,YAAmCF,GAAgBtC,KAAKC,MAC9D,IAAIgD,EAAWZ,EAAQW,KAAKC,SAAW,IAAIZ,EAAQW,KAAKC,UAAY,GAGpEA,EAAWjD,KAAKuH,SAAStE,EAAUT,GAG/BA,EAAGc,kBAELL,GADoBM,EAAAA,EAAAA,GAAcf,EAAGc,gBAC1BE,CAAYP,IAKvBA,EADE1C,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOP,KAAK+G,IACrC9D,EAASuE,QAClB3D,GAAKA,EAAEsC,aAAe5F,EAAO,IAAMsD,EAAEsC,aAAe5F,EAAO,KAGlD0C,EAASuE,QAClB3D,GAAKA,EAAEsC,aAAe5F,EAAO,IAAMsD,EAAEsC,YAAc5F,EAAO,KAK9D,MAAMkH,EAAOzH,KAAKqF,MAAM/F,WAYxB,OAXIkD,EAAGgE,YACLvD,EAAWA,EAASuE,QAClB3D,GAAK4D,EAAK5D,EAAEyC,YAAcmB,EAAK5D,EAAEyC,WAAWlF,WASzC,CACLe,EACEK,EAPoB,IACnBH,EACHW,KAAM,IAAKX,EAAQW,KAAMC,aAOvBX,EACAtC,KAAKuC,WACLvC,KAAKC,MAAMwE,YAGhB,CAGD8C,SAASvE,EAAMR,GACb,MAAMC,EAAID,EAAGE,cAAgB,CAAEE,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9CqD,EAAU7B,EAAS/B,EAAG6D,cAE5B,OAAOrD,EAAKlC,KAAI+C,IACd,IAAI5C,EACJ,OAAIuB,EAAGgE,WACLvF,GAAQwF,EAAAA,EAAAA,UAASL,EAAQvC,EAAEyC,UAAW9D,EAAGkE,SAAgB,IAANjE,EAAEM,GAE9C,IAAKc,EAAG5C,UAGV4C,CAAP,GAEH,CAEDjE,eAAe8H,GACb,MAAMC,EAAgB3H,KAAKqF,MAAM/F,WAAWoI,GACtCpI,EAAa,IACdU,KAAKqF,MAAM/F,WACd,CAACoI,GAAW,IACPC,EACHvG,SAAUuG,EAAcvG,UAKxBV,OAAOH,OAAOjB,GAAYsI,OAAM7G,IAAMA,EAAEK,WAE1CV,OAAOH,OAAOjB,GAAY+E,SAAQtD,IAChCA,EAAEK,SAAU,CAAZ,IAGJpB,KAAK6F,SAAS,CAAEvG,cACjB,CAEDK,mBAAmB+H,GACjB,MAAMpI,EAAa,IAAKU,KAAKqF,MAAM/F,YAEnCoB,OAAOH,OAAOjB,GAAY+E,SAAQtD,IAChCA,EAAEK,SAAU,CAAZ,IAEF9B,EAAWoI,GAAUtG,SAAU,EAC/BpB,KAAK6F,SAAS,CAAEvG,cACjB,CASDmB,SACE,OACE,eAAKO,MAAO,CAAEtB,SAAU,cACtB,QAACmI,EAAA,EAAD,CACEC,IAAK9H,KAAKkF,aACVK,UAAWvF,KAAKuF,UAChBuB,MAAO9G,KAAKqF,MAAMyB,MAClBC,IAAK/G,KAAKqF,MAAM0B,IAChBf,QAAShG,KAAKqF,MAAMW,QACpBzF,OAAQP,KAAKqF,MAAM9E,OACnByG,SAAUhH,KAAKqF,MAAM2B,SACrBlC,SAAU9E,KAAKqF,MAAMP,SACrBiD,qBAAsB/H,KAAKC,MAAM2E,aACjCoD,SAAUhI,KAAKC,MAAMmC,SAAS6F,aAC9BpD,gBAAiB7E,KAAKC,MAAM4E,gBAC5BzB,MAAOpD,KAAKC,MAAMmD,MAClBuB,OAAQ3E,KAAKC,MAAM0E,SAEnB,QAAC9E,EAAA,EAAD,CACEL,kBAAgB,EAChBF,WAAYU,KAAKqF,MAAM/F,WACvBG,OAAQO,KAAKC,MAAMmC,SAAS8F,cAC5BxI,SAAUM,KAAKC,MAAMmC,SAAS+F,gBAC9BxI,mBAAoBK,KAAKL,mBACzBC,eAAgBI,KAAKJ,kBAK9B,ECzOG,SAAUuE,EACdhC,EACAuC,GAGA,MAAM0D,UAAkBtI,EAAAA,cAMtBkF,YAAY/E,GACVgF,MAAMhF,GAD+B,KAFvCiF,aAAiDpF,EAAAA,YAEV,KA0CvCyC,WAAc4C,IACZ,MAAM,QAAEC,GAAYpF,KAAKkF,aACrBE,IACK,MAAPA,GAAAA,EAAS7C,WAAW4C,GACrB,EA3CD,MAAM,MAAE/B,EAAF,OAASuB,EAAT,SAAiBvC,GAAanC,EACpC,IAAI,SAAE6E,GAAa7E,EACfmC,EAAS8E,WACXpC,GAAWqC,EAAAA,EAAAA,GAAYrC,EAAU,CAC/B1B,QACAuB,SACAP,OAAQM,EAAUzE,EAAMoC,QAAQW,KAAKC,aAIzCjD,KAAKqF,MAAQ,CACXP,WACAuD,MAAOrI,KAAKsI,aAAarI,IAE3BD,KAAKuI,iBAAmBvI,KAAKuI,iBAAiB/C,KAAKxF,KACpD,CAED0F,iCAAiCC,GAE/B,MAAM6C,EAAa,IAAK7C,EAAUvD,SAAU0C,SAAU,MAChD2D,EAAa,IAAKzI,KAAKC,MAAMmC,SAAU0C,SAAU,MAEpD,IAAQ0D,EAAYC,IACrB9C,EAAUtD,UAAYrC,KAAKC,MAAMoC,SAEjCrC,KAAK6F,SAAS,CAAEwC,MAAOrI,KAAKsI,aAAa3C,IAE5C,CAED4C,iBAAiBzD,GACf9E,KAAK6F,SAAS,CAAEf,YACjB,CAEDwD,aAAarI,GACX,MAAM,SAAEmC,EAAF,QAAYC,EAAZ,YAAqBC,GAAgBrC,EAE3C,OAAOkC,EAASC,EAAUC,EAASC,EAAatC,KAAKuC,WACtD,CASD9B,SACE,MAAM,SAAE2B,EAAF,QAAYC,EAAZ,gBAAqBwC,EAArB,OAAsCF,EAAtC,MAA8CvB,GAAUpD,KAAKC,OAC7D,MAAEoI,EAAF,SAASvD,GAAa9E,KAAKqF,MAEjC,OACE,QAACqD,EAAA,EAAD,CACEZ,IAAK9H,KAAKkF,aACV6C,qBAAsB1F,EAAQW,KAAK4B,aACnCE,SAAUA,EACV6D,OAAQ,CAACN,GACTL,SAAU5F,EAAS6F,aACnBpD,gBAAiBA,EACjBzB,MAAOA,EACPuB,OAAQA,EACR4D,iBAAkBvI,KAAKuI,kBAG5B,EAEH,OAAOH,CACR,CAEK,SAAUQ,EACdzG,EACAuC,GAEA,OAAO,SAAmBzE,GACxB,MAAM,WACJwE,EADI,SAEJrC,EAFI,OAGJuC,EAHI,QAIJtC,EAJI,gBAKJwC,EALI,SAMJC,EANI,MAOJ1B,GACEnD,EAEJ,OACE,QAAC8E,EAAD,CACEN,WAAYA,EACZrC,SAAUA,EACVwC,aAAcvC,EAAQW,KAAK4B,aAC3BC,gBAAiBA,EACjBC,SAAUA,EACV3C,SAAUA,EACVE,QAASA,EACTqC,UAAWA,EACXtB,MAAOA,EACPuB,OAAQA,GAGb,CACF,CD4HDI,EAA2B1F,UAAYA,C","sources":["webpack://superset/./plugins/legacy-preset-chart-deckgl/src/components/Legend.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Path/Path.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/factory.tsx"],"sourcesContent":["/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatNumber, styled } from '@superset-ui/core';\n\nconst StyledLegend = styled.div`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    position: absolute;\n    background: ${theme.colors.grayscale.light5};\n    box-shadow: 0 0 ${theme.gridUnit}px ${theme.colors.grayscale.light2};\n    margin: ${theme.gridUnit * 6}px;\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 5}px;\n    outline: none;\n    overflow-y: scroll;\n    max-height: 200px;\n\n    & ul {\n      list-style: none;\n      padding-left: 0;\n      margin: 0;\n\n      & li a {\n        color: ${theme.colors.grayscale.base};\n        text-decoration: none;\n\n        & span {\n          margin-right: ${theme.gridUnit * 3}px;\n        }\n      }\n    }\n  `}\n`;\n\nconst categoryDelimiter = ' - ';\n\nconst propTypes = {\n  categories: PropTypes.object,\n  forceCategorical: PropTypes.bool,\n  format: PropTypes.string,\n  position: PropTypes.oneOf([null, 'tl', 'tr', 'bl', 'br']),\n  showSingleCategory: PropTypes.func,\n  toggleCategory: PropTypes.func,\n};\n\nconst defaultProps = {\n  categories: {},\n  forceCategorical: false,\n  format: null,\n  position: 'tr',\n  showSingleCategory: () => {},\n  toggleCategory: () => {},\n};\n\nexport default class Legend extends React.PureComponent {\n  format(value) {\n    if (!this.props.format || this.props.forceCategorical) {\n      return value;\n    }\n\n    const numValue = parseFloat(value);\n\n    return formatNumber(this.props.format, numValue);\n  }\n\n  formatCategoryLabel(k) {\n    if (!this.props.format) {\n      return k;\n    }\n\n    if (k.includes(categoryDelimiter)) {\n      const values = k.split(categoryDelimiter);\n\n      return (\n        this.format(values[0]) + categoryDelimiter + this.format(values[1])\n      );\n    }\n\n    return this.format(k);\n  }\n\n  render() {\n    if (\n      Object.keys(this.props.categories).length === 0 ||\n      this.props.position === null\n    ) {\n      return null;\n    }\n\n    const categories = Object.entries(this.props.categories).map(([k, v]) => {\n      const style = { color: `rgba(${v.color.join(', ')})` };\n      const icon = v.enabled ? '\\u25FC' : '\\u25FB';\n\n      return (\n        <li key={k}>\n          <a\n            href=\"#\"\n            onClick={() => this.props.toggleCategory(k)}\n            onDoubleClick={() => this.props.showSingleCategory(k)}\n          >\n            <span style={style}>{icon}</span> {this.formatCategoryLabel(k)}\n          </a>\n        </li>\n      );\n    });\n\n    const vertical = this.props.position.charAt(0) === 't' ? 'top' : 'bottom';\n    const horizontal = this.props.position.charAt(1) === 'r' ? 'right' : 'left';\n    const style = {\n      position: 'absolute',\n      [vertical]: '0px',\n      [horizontal]: '10px',\n    };\n\n    return (\n      <StyledLegend style={style}>\n        <ul>{categories}</ul>\n      </StyledLegend>\n    );\n  }\n}\n\nLegend.propTypes = propTypes;\nLegend.defaultProps = defaultProps;\n","/* eslint-disable react/no-array-index-key */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PathLayer } from 'deck.gl';\nimport React from 'react';\nimport { commonLayerProps } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o) {\n  return (\n    o.object.extraProps && (\n      <div className=\"deckgl-tooltip\">\n        {Object.keys(o.object.extraProps).map((prop, index) => (\n          <TooltipRow\n            key={`prop-${index}`}\n            label={`${prop}: `}\n            value={`${o.object.extraProps[prop]}`}\n          />\n        ))}\n      </div>\n    )\n  );\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const c = fd.color_picker;\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  let data = payload.data.features.map(feature => ({\n    ...feature,\n    path: feature.path,\n    width: fd.line_width,\n    color: fixedColor,\n  }));\n\n  if (fd.js_data_mutator) {\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  return new PathLayer({\n    id: `path-layer-${fd.slice_id}`,\n    getColor: d => d.color,\n    getPath: d => d.path,\n    getWidth: d => d.width,\n    data,\n    rounded: true,\n    widthScale: 1,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data) {\n  let points = [];\n  data.forEach(d => {\n    points = points.concat(d.path);\n  });\n\n  return points;\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n","/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/* eslint-disable no-prototype-builtins */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CategoricalColorNamespace } from '@superset-ui/core';\nimport AnimatableDeckGLContainer from './AnimatableDeckGLContainer';\nimport Legend from './components/Legend';\nimport { hexToRGB } from './utils/colors';\nimport { getPlaySliderParams } from './utils/time';\nimport sandboxedEval from './utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport fitViewport from './utils/fitViewport';\n\nconst { getScale } = CategoricalColorNamespace;\n\nfunction getCategories(fd, data) {\n  const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  const colorFn = getScale(fd.color_scheme);\n  const categories = {};\n  data.forEach(d => {\n    if (d.cat_color != null && !categories.hasOwnProperty(d.cat_color)) {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n      } else {\n        color = fixedColor;\n      }\n      categories[d.cat_color] = { color, enabled: true };\n    }\n  });\n\n  return categories;\n}\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  getLayer: PropTypes.func.isRequired,\n  getPoints: PropTypes.func.isRequired,\n  height: PropTypes.number.isRequired,\n  mapboxApiKey: PropTypes.string.isRequired,\n  onAddFilter: PropTypes.func,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n};\n\nexport default class CategoricalDeckGLContainer extends React.PureComponent {\n  containerRef = React.createRef();\n\n  /*\n   * A Deck.gl container that handles categories.\n   *\n   * The container will have an interactive legend, populated from the\n   * categories present in the data.\n   */\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n    this.toggleCategory = this.toggleCategory.bind(this);\n    this.showSingleCategory = this.showSingleCategory.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.payload.form_data !== this.state.formData) {\n      this.setState({ ...this.getStateFromProps(nextProps) });\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : [values, values + this.state.getStep(values)],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getStateFromProps(props, state) {\n    const features = props.payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n    const categories = getCategories(props.formData, features);\n\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && props.payload.form_data === state.formData) {\n      return { ...state, categories };\n    }\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      props.payload.form_data.time_grain_sqla ||\n      props.payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n\n    const { width, height, formData } = props;\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: props.getPoints(features),\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: props.payload.form_data,\n      categories,\n    };\n  }\n\n  getLayers(values) {\n    const { getLayer, payload, formData: fd, onAddFilter } = this.props;\n    let features = payload.data.features ? [...payload.data.features] : [];\n\n    // Add colors from categories or fixed color\n    features = this.addColor(features, fd);\n\n    // Apply user defined data mutator if defined\n    if (fd.js_data_mutator) {\n      const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n      features = jsFnMutator(features);\n    }\n\n    // Filter by time\n    if (values[0] === values[1] || values[1] === this.end) {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    // Show only categories selected in the legend\n    const cats = this.state.categories;\n    if (fd.dimension) {\n      features = features.filter(\n        d => cats[d.cat_color] && cats[d.cat_color].enabled,\n      );\n    }\n\n    const filteredPayload = {\n      ...payload,\n      data: { ...payload.data, features },\n    };\n\n    return [\n      getLayer(\n        fd,\n        filteredPayload,\n        onAddFilter,\n        this.setTooltip,\n        this.props.datasource,\n      ),\n    ];\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addColor(data, fd) {\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const colorFn = getScale(fd.color_scheme);\n\n    return data.map(d => {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n\n        return { ...d, color };\n      }\n\n      return d;\n    });\n  }\n\n  toggleCategory(category) {\n    const categoryState = this.state.categories[category];\n    const categories = {\n      ...this.state.categories,\n      [category]: {\n        ...categoryState,\n        enabled: !categoryState.enabled,\n      },\n    };\n\n    // if all categories are disabled, enable all -- similar to nvd3\n    if (Object.values(categories).every(v => !v.enabled)) {\n      /* eslint-disable no-param-reassign */\n      Object.values(categories).forEach(v => {\n        v.enabled = true;\n      });\n    }\n    this.setState({ categories });\n  }\n\n  showSingleCategory(category) {\n    const categories = { ...this.state.categories };\n    /* eslint-disable no-param-reassign */\n    Object.values(categories).forEach(v => {\n      v.enabled = false;\n    });\n    categories[category].enabled = true;\n    this.setState({ categories });\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ position: 'relative' }}>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          getLayers={this.getLayers}\n          start={this.state.start}\n          end={this.state.end}\n          getStep={this.state.getStep}\n          values={this.state.values}\n          disabled={this.state.disabled}\n          viewport={this.state.viewport}\n          mapboxApiAccessToken={this.props.mapboxApiKey}\n          mapStyle={this.props.formData.mapbox_style}\n          setControlValue={this.props.setControlValue}\n          width={this.props.width}\n          height={this.props.height}\n        >\n          <Legend\n            forceCategorical\n            categories={this.state.categories}\n            format={this.props.formData.legend_format}\n            position={this.props.formData.legend_position}\n            showSingleCategory={this.showSingleCategory}\n            toggleCategory={this.toggleCategory}\n          />\n        </AnimatableDeckGLContainer>\n      </div>\n    );\n  }\n}\n\nCategoricalDeckGLContainer.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { isEqual } from 'lodash';\nimport { Datasource, QueryFormData, JsonObject } from '@superset-ui/core';\n\nimport {\n  DeckGLContainerStyledWrapper,\n  DeckGLContainer,\n} from './DeckGLContainer';\nimport CategoricalDeckGLContainer from './CategoricalDeckGLContainer';\nimport fitViewport, { Viewport } from './utils/fitViewport';\nimport { Point } from './types';\n\ntype deckGLComponentProps = {\n  datasource: Datasource;\n  formData: QueryFormData;\n  height: number;\n  onAddFilter: () => void;\n  payload: JsonObject;\n  setControlValue: () => void;\n  viewport: Viewport;\n  width: number;\n};\ninterface getLayerType<T> {\n  (\n    formData: QueryFormData,\n    payload: JsonObject,\n    onAddFilter: () => void,\n    setTooltip: (tooltip: string) => void,\n  ): T;\n}\ninterface getPointsType<T> {\n  (point: number[]): T;\n}\ntype deckGLComponentState = {\n  viewport: Viewport;\n  layer: unknown;\n};\n\nexport function createDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType<Point[]>,\n): React.ComponentClass<deckGLComponentProps> {\n  // Higher order component\n  class Component extends React.PureComponent<\n    deckGLComponentProps,\n    deckGLComponentState\n  > {\n    containerRef: React.RefObject<DeckGLContainer> = React.createRef();\n\n    constructor(props: deckGLComponentProps) {\n      super(props);\n\n      const { width, height, formData } = props;\n      let { viewport } = props;\n      if (formData.autozoom) {\n        viewport = fitViewport(viewport, {\n          width,\n          height,\n          points: getPoints(props.payload.data.features),\n        }) as Viewport;\n      }\n\n      this.state = {\n        viewport,\n        layer: this.computeLayer(props),\n      };\n      this.onViewportChange = this.onViewportChange.bind(this);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: deckGLComponentProps) {\n      // Only recompute the layer if anything BUT the viewport has changed\n      const nextFdNoVP = { ...nextProps.formData, viewport: null };\n      const currFdNoVP = { ...this.props.formData, viewport: null };\n      if (\n        !isEqual(nextFdNoVP, currFdNoVP) ||\n        nextProps.payload !== this.props.payload\n      ) {\n        this.setState({ layer: this.computeLayer(nextProps) });\n      }\n    }\n\n    onViewportChange(viewport: Viewport) {\n      this.setState({ viewport });\n    }\n\n    computeLayer(props: deckGLComponentProps) {\n      const { formData, payload, onAddFilter } = props;\n\n      return getLayer(formData, payload, onAddFilter, this.setTooltip);\n    }\n\n    setTooltip = (tooltip: string) => {\n      const { current } = this.containerRef;\n      if (current) {\n        current?.setTooltip(tooltip);\n      }\n    };\n\n    render() {\n      const { formData, payload, setControlValue, height, width } = this.props;\n      const { layer, viewport } = this.state;\n\n      return (\n        <DeckGLContainerStyledWrapper\n          ref={this.containerRef}\n          mapboxApiAccessToken={payload.data.mapboxApiKey}\n          viewport={viewport}\n          layers={[layer]}\n          mapStyle={formData.mapbox_style}\n          setControlValue={setControlValue}\n          width={width}\n          height={height}\n          onViewportChange={this.onViewportChange}\n        />\n      );\n    }\n  }\n  return Component;\n}\n\nexport function createCategoricalDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType<Point[]>,\n) {\n  return function Component(props: deckGLComponentProps) {\n    const {\n      datasource,\n      formData,\n      height,\n      payload,\n      setControlValue,\n      viewport,\n      width,\n    } = props;\n\n    return (\n      <CategoricalDeckGLContainer\n        datasource={datasource}\n        formData={formData}\n        mapboxApiKey={payload.data.mapboxApiKey}\n        setControlValue={setControlValue}\n        viewport={viewport}\n        getLayer={getLayer}\n        payload={payload}\n        getPoints={getPoints}\n        width={width}\n        height={height}\n      />\n    );\n  };\n}\n"],"names":["StyledLegend","styled","theme","typography","sizes","s","colors","grayscale","light5","gridUnit","light2","base","categoryDelimiter","propTypes","categories","PropTypes","forceCategorical","format","position","showSingleCategory","toggleCategory","Legend","React","value","this","props","numValue","parseFloat","formatNumber","formatCategoryLabel","k","values","split","render","Object","keys","length","entries","map","v","style","color","join","icon","enabled","key","href","onClick","onDoubleClick","charAt","defaultProps","setTooltipContent","o","object","extraProps","className","prop","index","label","getLayer","formData","payload","onAddFilter","setTooltip","fd","c","color_picker","fixedColor","r","g","b","a","data","features","feature","path","width","line_width","js_data_mutator","sandboxedEval","jsFnMutator","PathLayer","id","slice_id","getColor","d","getPath","getWidth","rounded","widthScale","commonLayerProps","createDeckGLComponent","points","forEach","concat","getScale","CategoricalColorNamespace","datasource","getPoints","height","mapboxApiKey","setControlValue","viewport","CategoricalDeckGLContainer","constructor","super","containerRef","tooltip","current","state","getStateFromProps","getLayers","bind","onValuesChange","UNSAFE_componentWillReceiveProps","nextProps","form_data","setState","Array","isArray","getStep","timestamps","f","__timestamp","colorFn","color_scheme","cat_color","hasOwnProperty","dimension","hexToRGB","sliceId","getCategories","granularity","time_grain_sqla","start","end","disabled","getPlaySliderParams","autozoom","fitViewport","zoom","selected","lastClick","addColor","filter","cats","category","categoryState","every","AnimatableDeckGLContainer","ref","mapboxApiAccessToken","mapStyle","mapbox_style","legend_format","legend_position","Component","layer","computeLayer","onViewportChange","nextFdNoVP","currFdNoVP","DeckGLContainer","layers","createCategoricalDeckGLComponent"],"sourceRoot":""}