{"version":3,"file":"323.f4ddf3d2f6d415d823ef.entry.js","mappings":"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","sources":["webpack://superset/./node_modules/react-split/node_modules/split.js/dist/split.es.js","webpack://superset/./node_modules/react-split/dist/react-split.es.js"],"sourcesContent":["// The programming goals of Split.js are to deliver readable, understandable and\n// maintainable code, while at the same time manually optimizing for tiny minified file size,\n// browser compatibility without additional requirements\n// and very few assumptions about the user's page layout.\nvar global = typeof window !== 'undefined' ? window : null;\nvar ssr = global === null;\nvar document = !ssr ? global.document : undefined;\n\n// Save a couple long function names that are used frequently.\n// This optimization saves around 400 bytes.\nvar addEventListener = 'addEventListener';\nvar removeEventListener = 'removeEventListener';\nvar getBoundingClientRect = 'getBoundingClientRect';\nvar gutterStartDragging = '_a';\nvar aGutterSize = '_b';\nvar bGutterSize = '_c';\nvar HORIZONTAL = 'horizontal';\nvar NOOP = function () { return false; };\n\n// Helper function determines which prefixes of CSS calc we need.\n// We only need to do this once on startup, when this anonymous function is called.\n//\n// Tests -webkit, -moz and -o prefixes. Modified from StackOverflow:\n// http://stackoverflow.com/questions/16625140/js-feature-detection-to-detect-the-usage-of-webkit-calc-over-calc/16625167#16625167\nvar calc = ssr\n    ? 'calc'\n    : ((['', '-webkit-', '-moz-', '-o-']\n          .filter(function (prefix) {\n              var el = document.createElement('div');\n              el.style.cssText = \"width:\" + prefix + \"calc(9px)\";\n\n              return !!el.style.length\n          })\n          .shift()) + \"calc\");\n\n// Helper function checks if its argument is a string-like type\nvar isString = function (v) { return typeof v === 'string' || v instanceof String; };\n\n// Helper function allows elements and string selectors to be used\n// interchangeably. In either case an element is returned. This allows us to\n// do `Split([elem1, elem2])` as well as `Split(['#id1', '#id2'])`.\nvar elementOrSelector = function (el) {\n    if (isString(el)) {\n        var ele = document.querySelector(el);\n        if (!ele) {\n            throw new Error((\"Selector \" + el + \" did not match a DOM element\"))\n        }\n        return ele\n    }\n\n    return el\n};\n\n// Helper function gets a property from the properties object, with a default fallback\nvar getOption = function (options, propName, def) {\n    var value = options[propName];\n    if (value !== undefined) {\n        return value\n    }\n    return def\n};\n\nvar getGutterSize = function (gutterSize, isFirst, isLast, gutterAlign) {\n    if (isFirst) {\n        if (gutterAlign === 'end') {\n            return 0\n        }\n        if (gutterAlign === 'center') {\n            return gutterSize / 2\n        }\n    } else if (isLast) {\n        if (gutterAlign === 'start') {\n            return 0\n        }\n        if (gutterAlign === 'center') {\n            return gutterSize / 2\n        }\n    }\n\n    return gutterSize\n};\n\n// Default options\nvar defaultGutterFn = function (i, gutterDirection) {\n    var gut = document.createElement('div');\n    gut.className = \"gutter gutter-\" + gutterDirection;\n    return gut\n};\n\nvar defaultElementStyleFn = function (dim, size, gutSize) {\n    var style = {};\n\n    if (!isString(size)) {\n        style[dim] = calc + \"(\" + size + \"% - \" + gutSize + \"px)\";\n    } else {\n        style[dim] = size;\n    }\n\n    return style\n};\n\nvar defaultGutterStyleFn = function (dim, gutSize) {\n    var obj;\n\n    return (( obj = {}, obj[dim] = (gutSize + \"px\"), obj ));\n};\n\n// The main function to initialize a split. Split.js thinks about each pair\n// of elements as an independant pair. Dragging the gutter between two elements\n// only changes the dimensions of elements in that pair. This is key to understanding\n// how the following functions operate, since each function is bound to a pair.\n//\n// A pair object is shaped like this:\n//\n// {\n//     a: DOM element,\n//     b: DOM element,\n//     aMin: Number,\n//     bMin: Number,\n//     dragging: Boolean,\n//     parent: DOM element,\n//     direction: 'horizontal' | 'vertical'\n// }\n//\n// The basic sequence:\n//\n// 1. Set defaults to something sane. `options` doesn't have to be passed at all.\n// 2. Initialize a bunch of strings based on the direction we're splitting.\n//    A lot of the behavior in the rest of the library is paramatized down to\n//    rely on CSS strings and classes.\n// 3. Define the dragging helper functions, and a few helpers to go with them.\n// 4. Loop through the elements while pairing them off. Every pair gets an\n//    `pair` object and a gutter.\n// 5. Actually size the pair elements, insert gutters and attach event listeners.\nvar Split = function (idsOption, options) {\n    if ( options === void 0 ) options = {};\n\n    if (ssr) { return {} }\n\n    var ids = idsOption;\n    var dimension;\n    var clientAxis;\n    var position;\n    var positionEnd;\n    var clientSize;\n    var elements;\n\n    // Allow HTMLCollection to be used as an argument when supported\n    if (Array.from) {\n        ids = Array.from(ids);\n    }\n\n    // All DOM elements in the split should have a common parent. We can grab\n    // the first elements parent and hope users read the docs because the\n    // behavior will be whacky otherwise.\n    var firstElement = elementOrSelector(ids[0]);\n    var parent = firstElement.parentNode;\n    var parentStyle = getComputedStyle ? getComputedStyle(parent) : null;\n    var parentFlexDirection = parentStyle ? parentStyle.flexDirection : null;\n\n    // Set default options.sizes to equal percentages of the parent element.\n    var sizes = getOption(options, 'sizes') || ids.map(function () { return 100 / ids.length; });\n\n    // Standardize minSize to an array if it isn't already. This allows minSize\n    // to be passed as a number.\n    var minSize = getOption(options, 'minSize', 100);\n    var minSizes = Array.isArray(minSize) ? minSize : ids.map(function () { return minSize; });\n\n    // Get other options\n    var expandToMin = getOption(options, 'expandToMin', false);\n    var gutterSize = getOption(options, 'gutterSize', 10);\n    var gutterAlign = getOption(options, 'gutterAlign', 'center');\n    var snapOffset = getOption(options, 'snapOffset', 30);\n    var dragInterval = getOption(options, 'dragInterval', 1);\n    var direction = getOption(options, 'direction', HORIZONTAL);\n    var cursor = getOption(\n        options,\n        'cursor',\n        direction === HORIZONTAL ? 'col-resize' : 'row-resize'\n    );\n    var gutter = getOption(options, 'gutter', defaultGutterFn);\n    var elementStyle = getOption(\n        options,\n        'elementStyle',\n        defaultElementStyleFn\n    );\n    var gutterStyle = getOption(options, 'gutterStyle', defaultGutterStyleFn);\n\n    // 2. Initialize a bunch of strings based on the direction we're splitting.\n    // A lot of the behavior in the rest of the library is paramatized down to\n    // rely on CSS strings and classes.\n    if (direction === HORIZONTAL) {\n        dimension = 'width';\n        clientAxis = 'clientX';\n        position = 'left';\n        positionEnd = 'right';\n        clientSize = 'clientWidth';\n    } else if (direction === 'vertical') {\n        dimension = 'height';\n        clientAxis = 'clientY';\n        position = 'top';\n        positionEnd = 'bottom';\n        clientSize = 'clientHeight';\n    }\n\n    // 3. Define the dragging helper functions, and a few helpers to go with them.\n    // Each helper is bound to a pair object that contains its metadata. This\n    // also makes it easy to store references to listeners that that will be\n    // added and removed.\n    //\n    // Even though there are no other functions contained in them, aliasing\n    // this to self saves 50 bytes or so since it's used so frequently.\n    //\n    // The pair object saves metadata like dragging state, position and\n    // event listener references.\n\n    function setElementSize(el, size, gutSize, i) {\n        // Split.js allows setting sizes via numbers (ideally), or if you must,\n        // by string, like '300px'. This is less than ideal, because it breaks\n        // the fluid layout that `calc(% - px)` provides. You're on your own if you do that,\n        // make sure you calculate the gutter size by hand.\n        var style = elementStyle(dimension, size, gutSize, i);\n\n        Object.keys(style).forEach(function (prop) {\n            // eslint-disable-next-line no-param-reassign\n            el.style[prop] = style[prop];\n        });\n    }\n\n    function setGutterSize(gutterElement, gutSize, i) {\n        var style = gutterStyle(dimension, gutSize, i);\n\n        Object.keys(style).forEach(function (prop) {\n            // eslint-disable-next-line no-param-reassign\n            gutterElement.style[prop] = style[prop];\n        });\n    }\n\n    function getSizes() {\n        return elements.map(function (element) { return element.size; })\n    }\n\n    // Supports touch events, but not multitouch, so only the first\n    // finger `touches[0]` is counted.\n    function getMousePosition(e) {\n        if ('touches' in e) { return e.touches[0][clientAxis] }\n        return e[clientAxis]\n    }\n\n    // Actually adjust the size of elements `a` and `b` to `offset` while dragging.\n    // calc is used to allow calc(percentage + gutterpx) on the whole split instance,\n    // which allows the viewport to be resized without additional logic.\n    // Element a's size is the same as offset. b's size is total size - a size.\n    // Both sizes are calculated from the initial parent percentage,\n    // then the gutter size is subtracted.\n    function adjust(offset) {\n        var a = elements[this.a];\n        var b = elements[this.b];\n        var percentage = a.size + b.size;\n\n        a.size = (offset / this.size) * percentage;\n        b.size = percentage - (offset / this.size) * percentage;\n\n        setElementSize(a.element, a.size, this[aGutterSize], a.i);\n        setElementSize(b.element, b.size, this[bGutterSize], b.i);\n    }\n\n    // drag, where all the magic happens. The logic is really quite simple:\n    //\n    // 1. Ignore if the pair is not dragging.\n    // 2. Get the offset of the event.\n    // 3. Snap offset to min if within snappable range (within min + snapOffset).\n    // 4. Actually adjust each element in the pair to offset.\n    //\n    // ---------------------------------------------------------------------\n    // |    | <- a.minSize               ||              b.minSize -> |    |\n    // |    |  | <- this.snapOffset      ||     this.snapOffset -> |  |    |\n    // |    |  |                         ||                        |  |    |\n    // |    |  |                         ||                        |  |    |\n    // ---------------------------------------------------------------------\n    // | <- this.start                                        this.size -> |\n    function drag(e) {\n        var offset;\n        var a = elements[this.a];\n        var b = elements[this.b];\n\n        if (!this.dragging) { return }\n\n        // Get the offset of the event from the first side of the\n        // pair `this.start`. Then offset by the initial position of the\n        // mouse compared to the gutter size.\n        offset =\n            getMousePosition(e) -\n            this.start +\n            (this[aGutterSize] - this.dragOffset);\n\n        if (dragInterval > 1) {\n            offset = Math.round(offset / dragInterval) * dragInterval;\n        }\n\n        // If within snapOffset of min or max, set offset to min or max.\n        // snapOffset buffers a.minSize and b.minSize, so logic is opposite for both.\n        // Include the appropriate gutter sizes to prevent overflows.\n        if (offset <= a.minSize + snapOffset + this[aGutterSize]) {\n            offset = a.minSize + this[aGutterSize];\n        } else if (\n            offset >=\n            this.size - (b.minSize + snapOffset + this[bGutterSize])\n        ) {\n            offset = this.size - (b.minSize + this[bGutterSize]);\n        }\n\n        // Actually adjust the size.\n        adjust.call(this, offset);\n\n        // Call the drag callback continously. Don't do anything too intensive\n        // in this callback.\n        getOption(options, 'onDrag', NOOP)(getSizes());\n    }\n\n    // Cache some important sizes when drag starts, so we don't have to do that\n    // continously:\n    //\n    // `size`: The total size of the pair. First + second + first gutter + second gutter.\n    // `start`: The leading side of the first element.\n    //\n    // ------------------------------------------------\n    // |      aGutterSize -> |||                      |\n    // |                     |||                      |\n    // |                     |||                      |\n    // |                     ||| <- bGutterSize       |\n    // ------------------------------------------------\n    // | <- start                             size -> |\n    function calculateSizes() {\n        // Figure out the parent size minus padding.\n        var a = elements[this.a].element;\n        var b = elements[this.b].element;\n\n        var aBounds = a[getBoundingClientRect]();\n        var bBounds = b[getBoundingClientRect]();\n\n        this.size =\n            aBounds[dimension] +\n            bBounds[dimension] +\n            this[aGutterSize] +\n            this[bGutterSize];\n        this.start = aBounds[position];\n        this.end = aBounds[positionEnd];\n    }\n\n    function innerSize(element) {\n        // Return nothing if getComputedStyle is not supported (< IE9)\n        // Or if parent element has no layout yet\n        if (!getComputedStyle) { return null }\n\n        var computedStyle = getComputedStyle(element);\n\n        if (!computedStyle) { return null }\n\n        var size = element[clientSize];\n\n        if (size === 0) { return null }\n\n        if (direction === HORIZONTAL) {\n            size -=\n                parseFloat(computedStyle.paddingLeft) +\n                parseFloat(computedStyle.paddingRight);\n        } else {\n            size -=\n                parseFloat(computedStyle.paddingTop) +\n                parseFloat(computedStyle.paddingBottom);\n        }\n\n        return size\n    }\n\n    // When specifying percentage sizes that are less than the computed\n    // size of the element minus the gutter, the lesser percentages must be increased\n    // (and decreased from the other elements) to make space for the pixels\n    // subtracted by the gutters.\n    function trimToMin(sizesToTrim) {\n        // Try to get inner size of parent element.\n        // If it's no supported, return original sizes.\n        var parentSize = innerSize(parent);\n        if (parentSize === null) {\n            return sizesToTrim\n        }\n\n        if (minSizes.reduce(function (a, b) { return a + b; }, 0) > parentSize) {\n            return sizesToTrim\n        }\n\n        // Keep track of the excess pixels, the amount of pixels over the desired percentage\n        // Also keep track of the elements with pixels to spare, to decrease after if needed\n        var excessPixels = 0;\n        var toSpare = [];\n\n        var pixelSizes = sizesToTrim.map(function (size, i) {\n            // Convert requested percentages to pixel sizes\n            var pixelSize = (parentSize * size) / 100;\n            var elementGutterSize = getGutterSize(\n                gutterSize,\n                i === 0,\n                i === sizesToTrim.length - 1,\n                gutterAlign\n            );\n            var elementMinSize = minSizes[i] + elementGutterSize;\n\n            // If element is too smal, increase excess pixels by the difference\n            // and mark that it has no pixels to spare\n            if (pixelSize < elementMinSize) {\n                excessPixels += elementMinSize - pixelSize;\n                toSpare.push(0);\n                return elementMinSize\n            }\n\n            // Otherwise, mark the pixels it has to spare and return it's original size\n            toSpare.push(pixelSize - elementMinSize);\n            return pixelSize\n        });\n\n        // If nothing was adjusted, return the original sizes\n        if (excessPixels === 0) {\n            return sizesToTrim\n        }\n\n        return pixelSizes.map(function (pixelSize, i) {\n            var newPixelSize = pixelSize;\n\n            // While there's still pixels to take, and there's enough pixels to spare,\n            // take as many as possible up to the total excess pixels\n            if (excessPixels > 0 && toSpare[i] - excessPixels > 0) {\n                var takenPixels = Math.min(\n                    excessPixels,\n                    toSpare[i] - excessPixels\n                );\n\n                // Subtract the amount taken for the next iteration\n                excessPixels -= takenPixels;\n                newPixelSize = pixelSize - takenPixels;\n            }\n\n            // Return the pixel size adjusted as a percentage\n            return (newPixelSize / parentSize) * 100\n        })\n    }\n\n    // stopDragging is very similar to startDragging in reverse.\n    function stopDragging() {\n        var self = this;\n        var a = elements[self.a].element;\n        var b = elements[self.b].element;\n\n        if (self.dragging) {\n            getOption(options, 'onDragEnd', NOOP)(getSizes());\n        }\n\n        self.dragging = false;\n\n        // Remove the stored event listeners. This is why we store them.\n        global[removeEventListener]('mouseup', self.stop);\n        global[removeEventListener]('touchend', self.stop);\n        global[removeEventListener]('touchcancel', self.stop);\n        global[removeEventListener]('mousemove', self.move);\n        global[removeEventListener]('touchmove', self.move);\n\n        // Clear bound function references\n        self.stop = null;\n        self.move = null;\n\n        a[removeEventListener]('selectstart', NOOP);\n        a[removeEventListener]('dragstart', NOOP);\n        b[removeEventListener]('selectstart', NOOP);\n        b[removeEventListener]('dragstart', NOOP);\n\n        a.style.userSelect = '';\n        a.style.webkitUserSelect = '';\n        a.style.MozUserSelect = '';\n        a.style.pointerEvents = '';\n\n        b.style.userSelect = '';\n        b.style.webkitUserSelect = '';\n        b.style.MozUserSelect = '';\n        b.style.pointerEvents = '';\n\n        self.gutter.style.cursor = '';\n        self.parent.style.cursor = '';\n        document.body.style.cursor = '';\n    }\n\n    // startDragging calls `calculateSizes` to store the inital size in the pair object.\n    // It also adds event listeners for mouse/touch events,\n    // and prevents selection while dragging so avoid the selecting text.\n    function startDragging(e) {\n        // Right-clicking can't start dragging.\n        if ('button' in e && e.button !== 0) {\n            return\n        }\n\n        // Alias frequently used variables to save space. 200 bytes.\n        var self = this;\n        var a = elements[self.a].element;\n        var b = elements[self.b].element;\n\n        // Call the onDragStart callback.\n        if (!self.dragging) {\n            getOption(options, 'onDragStart', NOOP)(getSizes());\n        }\n\n        // Don't actually drag the element. We emulate that in the drag function.\n        e.preventDefault();\n\n        // Set the dragging property of the pair object.\n        self.dragging = true;\n\n        // Create two event listeners bound to the same pair object and store\n        // them in the pair object.\n        self.move = drag.bind(self);\n        self.stop = stopDragging.bind(self);\n\n        // All the binding. `window` gets the stop events in case we drag out of the elements.\n        global[addEventListener]('mouseup', self.stop);\n        global[addEventListener]('touchend', self.stop);\n        global[addEventListener]('touchcancel', self.stop);\n        global[addEventListener]('mousemove', self.move);\n        global[addEventListener]('touchmove', self.move);\n\n        // Disable selection. Disable!\n        a[addEventListener]('selectstart', NOOP);\n        a[addEventListener]('dragstart', NOOP);\n        b[addEventListener]('selectstart', NOOP);\n        b[addEventListener]('dragstart', NOOP);\n\n        a.style.userSelect = 'none';\n        a.style.webkitUserSelect = 'none';\n        a.style.MozUserSelect = 'none';\n        a.style.pointerEvents = 'none';\n\n        b.style.userSelect = 'none';\n        b.style.webkitUserSelect = 'none';\n        b.style.MozUserSelect = 'none';\n        b.style.pointerEvents = 'none';\n\n        // Set the cursor at multiple levels\n        self.gutter.style.cursor = cursor;\n        self.parent.style.cursor = cursor;\n        document.body.style.cursor = cursor;\n\n        // Cache the initial sizes of the pair.\n        calculateSizes.call(self);\n\n        // Determine the position of the mouse compared to the gutter\n        self.dragOffset = getMousePosition(e) - self.end;\n    }\n\n    // adjust sizes to ensure percentage is within min size and gutter.\n    sizes = trimToMin(sizes);\n\n    // 5. Create pair and element objects. Each pair has an index reference to\n    // elements `a` and `b` of the pair (first and second elements).\n    // Loop through the elements while pairing them off. Every pair gets a\n    // `pair` object and a gutter.\n    //\n    // Basic logic:\n    //\n    // - Starting with the second element `i > 0`, create `pair` objects with\n    //   `a = i - 1` and `b = i`\n    // - Set gutter sizes based on the _pair_ being first/last. The first and last\n    //   pair have gutterSize / 2, since they only have one half gutter, and not two.\n    // - Create gutter elements and add event listeners.\n    // - Set the size of the elements, minus the gutter sizes.\n    //\n    // -----------------------------------------------------------------------\n    // |     i=0     |         i=1         |        i=2       |      i=3     |\n    // |             |                     |                  |              |\n    // |           pair 0                pair 1             pair 2           |\n    // |             |                     |                  |              |\n    // -----------------------------------------------------------------------\n    var pairs = [];\n    elements = ids.map(function (id, i) {\n        // Create the element object.\n        var element = {\n            element: elementOrSelector(id),\n            size: sizes[i],\n            minSize: minSizes[i],\n            i: i,\n        };\n\n        var pair;\n\n        if (i > 0) {\n            // Create the pair object with its metadata.\n            pair = {\n                a: i - 1,\n                b: i,\n                dragging: false,\n                direction: direction,\n                parent: parent,\n            };\n\n            pair[aGutterSize] = getGutterSize(\n                gutterSize,\n                i - 1 === 0,\n                false,\n                gutterAlign\n            );\n            pair[bGutterSize] = getGutterSize(\n                gutterSize,\n                false,\n                i === ids.length - 1,\n                gutterAlign\n            );\n\n            // if the parent has a reverse flex-direction, switch the pair elements.\n            if (\n                parentFlexDirection === 'row-reverse' ||\n                parentFlexDirection === 'column-reverse'\n            ) {\n                var temp = pair.a;\n                pair.a = pair.b;\n                pair.b = temp;\n            }\n        }\n\n        // Determine the size of the current element. IE8 is supported by\n        // staticly assigning sizes without draggable gutters. Assigns a string\n        // to `size`.\n        //\n        // Create gutter elements for each pair.\n        if (i > 0) {\n            var gutterElement = gutter(i, direction, element.element);\n            setGutterSize(gutterElement, gutterSize, i);\n\n            // Save bound event listener for removal later\n            pair[gutterStartDragging] = startDragging.bind(pair);\n\n            // Attach bound event listener\n            gutterElement[addEventListener](\n                'mousedown',\n                pair[gutterStartDragging]\n            );\n            gutterElement[addEventListener](\n                'touchstart',\n                pair[gutterStartDragging]\n            );\n\n            parent.insertBefore(gutterElement, element.element);\n\n            pair.gutter = gutterElement;\n        }\n\n        setElementSize(\n            element.element,\n            element.size,\n            getGutterSize(\n                gutterSize,\n                i === 0,\n                i === ids.length - 1,\n                gutterAlign\n            ),\n            i\n        );\n\n        // After the first iteration, and we have a pair object, append it to the\n        // list of pairs.\n        if (i > 0) {\n            pairs.push(pair);\n        }\n\n        return element\n    });\n\n    function adjustToMin(element) {\n        var isLast = element.i === pairs.length;\n        var pair = isLast ? pairs[element.i - 1] : pairs[element.i];\n\n        calculateSizes.call(pair);\n\n        var size = isLast\n            ? pair.size - element.minSize - pair[bGutterSize]\n            : element.minSize + pair[aGutterSize];\n\n        adjust.call(pair, size);\n    }\n\n    elements.forEach(function (element) {\n        var computedSize = element.element[getBoundingClientRect]()[dimension];\n\n        if (computedSize < element.minSize) {\n            if (expandToMin) {\n                adjustToMin(element);\n            } else {\n                // eslint-disable-next-line no-param-reassign\n                element.minSize = computedSize;\n            }\n        }\n    });\n\n    function setSizes(newSizes) {\n        var trimmed = trimToMin(newSizes);\n        trimmed.forEach(function (newSize, i) {\n            if (i > 0) {\n                var pair = pairs[i - 1];\n\n                var a = elements[pair.a];\n                var b = elements[pair.b];\n\n                a.size = trimmed[i - 1];\n                b.size = newSize;\n\n                setElementSize(a.element, a.size, pair[aGutterSize], a.i);\n                setElementSize(b.element, b.size, pair[bGutterSize], b.i);\n            }\n        });\n    }\n\n    function destroy(preserveStyles, preserveGutter) {\n        pairs.forEach(function (pair) {\n            if (preserveGutter !== true) {\n                pair.parent.removeChild(pair.gutter);\n            } else {\n                pair.gutter[removeEventListener](\n                    'mousedown',\n                    pair[gutterStartDragging]\n                );\n                pair.gutter[removeEventListener](\n                    'touchstart',\n                    pair[gutterStartDragging]\n                );\n            }\n\n            if (preserveStyles !== true) {\n                var style = elementStyle(\n                    dimension,\n                    pair.a.size,\n                    pair[aGutterSize]\n                );\n\n                Object.keys(style).forEach(function (prop) {\n                    elements[pair.a].element.style[prop] = '';\n                    elements[pair.b].element.style[prop] = '';\n                });\n            }\n        });\n    }\n\n    return {\n        setSizes: setSizes,\n        getSizes: getSizes,\n        collapse: function collapse(i) {\n            adjustToMin(elements[i]);\n        },\n        destroy: destroy,\n        parent: parent,\n        pairs: pairs,\n    }\n};\n\nexport default Split;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'split.js';\n\nfunction objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\n\nvar SplitWrapper = /*@__PURE__*/(function (superclass) {\n    function SplitWrapper () {\n        superclass.apply(this, arguments);\n    }\n\n    if ( superclass ) SplitWrapper.__proto__ = superclass;\n    SplitWrapper.prototype = Object.create( superclass && superclass.prototype );\n    SplitWrapper.prototype.constructor = SplitWrapper;\n\n    SplitWrapper.prototype.componentDidMount = function componentDidMount () {\n        var ref = this.props;\n        ref.children;\n        var gutter = ref.gutter;\n        var rest = objectWithoutProperties( ref, [\"children\", \"gutter\"] );\n        var options = rest;\n\n        options.gutter = function (index, direction) {\n            var gutterElement;\n\n            if (gutter) {\n                gutterElement = gutter(index, direction);\n            } else {\n                gutterElement = document.createElement('div');\n                gutterElement.className = \"gutter gutter-\" + direction;\n            }\n\n            // eslint-disable-next-line no-underscore-dangle\n            gutterElement.__isSplitGutter = true;\n            return gutterElement\n        };\n\n        this.split = Split(this.parent.children, options);\n    };\n\n    SplitWrapper.prototype.componentDidUpdate = function componentDidUpdate (prevProps) {\n        var this$1 = this;\n\n        var ref = this.props;\n        ref.children;\n        var minSize = ref.minSize;\n        var sizes = ref.sizes;\n        var collapsed = ref.collapsed;\n        var rest = objectWithoutProperties( ref, [\"children\", \"minSize\", \"sizes\", \"collapsed\"] );\n        var options = rest;\n        var prevMinSize = prevProps.minSize;\n        var prevSizes = prevProps.sizes;\n        var prevCollapsed = prevProps.collapsed;\n\n        var otherProps = [\n            'maxSize',\n            'expandToMin',\n            'gutterSize',\n            'gutterAlign',\n            'snapOffset',\n            'dragInterval',\n            'direction',\n            'cursor' ];\n\n        var needsRecreate = otherProps\n            // eslint-disable-next-line react/destructuring-assignment\n            .map(function (prop) { return this$1.props[prop] !== prevProps[prop]; })\n            .reduce(function (accum, same) { return accum || same; }, false);\n\n        // Compare minSize when both are arrays, when one is an array and when neither is an array\n        if (Array.isArray(minSize) && Array.isArray(prevMinSize)) {\n            var minSizeChanged = false;\n\n            minSize.forEach(function (minSizeI, i) {\n                minSizeChanged = minSizeChanged || minSizeI !== prevMinSize[i];\n            });\n\n            needsRecreate = needsRecreate || minSizeChanged;\n        } else if (Array.isArray(minSize) || Array.isArray(prevMinSize)) {\n            needsRecreate = true;\n        } else {\n            needsRecreate = needsRecreate || minSize !== prevMinSize;\n        }\n\n        // Destroy and re-create split if options changed\n        if (needsRecreate) {\n            options.minSize = minSize;\n            options.sizes = sizes || this.split.getSizes();\n            this.split.destroy(true, true);\n            options.gutter = function (index, direction, pairB) { return pairB.previousSibling; };\n            this.split = Split(\n                Array.from(this.parent.children).filter(\n                    // eslint-disable-next-line no-underscore-dangle\n                    function (element) { return !element.__isSplitGutter; }\n                ),\n                options\n            );\n        } else if (sizes) {\n            // If only the size has changed, set the size. No need to do this if re-created.\n            var sizeChanged = false;\n\n            sizes.forEach(function (sizeI, i) {\n                sizeChanged = sizeChanged || sizeI !== prevSizes[i];\n            });\n\n            if (sizeChanged) {\n                // eslint-disable-next-line react/destructuring-assignment\n                this.split.setSizes(this.props.sizes);\n            }\n        }\n\n        // Collapse after re-created or when collapsed changed.\n        if (\n            Number.isInteger(collapsed) &&\n            (collapsed !== prevCollapsed || needsRecreate)\n        ) {\n            this.split.collapse(collapsed);\n        }\n    };\n\n    SplitWrapper.prototype.componentWillUnmount = function componentWillUnmount () {\n        this.split.destroy();\n        delete this.split;\n    };\n\n    SplitWrapper.prototype.render = function render () {\n        var this$1 = this;\n\n        var ref = this.props;\n        ref.sizes;\n        ref.minSize;\n        ref.maxSize;\n        ref.expandToMin;\n        ref.gutterSize;\n        ref.gutterAlign;\n        ref.snapOffset;\n        ref.dragInterval;\n        ref.direction;\n        ref.cursor;\n        ref.gutter;\n        ref.elementStyle;\n        ref.gutterStyle;\n        ref.onDrag;\n        ref.onDragStart;\n        ref.onDragEnd;\n        ref.collapsed;\n        var children = ref.children;\n        var rest$1 = objectWithoutProperties( ref, [\"sizes\", \"minSize\", \"maxSize\", \"expandToMin\", \"gutterSize\", \"gutterAlign\", \"snapOffset\", \"dragInterval\", \"direction\", \"cursor\", \"gutter\", \"elementStyle\", \"gutterStyle\", \"onDrag\", \"onDragStart\", \"onDragEnd\", \"collapsed\", \"children\"] );\n        var rest = rest$1;\n\n        return (\n            React.createElement( 'div', Object.assign({},\n                { ref: function (parent) {\n                    this$1.parent = parent;\n                } }, rest),\n                children\n            )\n        )\n    };\n\n    return SplitWrapper;\n}(React.Component));\n\nSplitWrapper.propTypes = {\n    sizes: PropTypes.arrayOf(PropTypes.number),\n    minSize: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.number) ]),\n    maxSize: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.number) ]),\n    expandToMin: PropTypes.bool,\n    gutterSize: PropTypes.number,\n    gutterAlign: PropTypes.string,\n    snapOffset: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.number) ]),\n    dragInterval: PropTypes.number,\n    direction: PropTypes.string,\n    cursor: PropTypes.string,\n    gutter: PropTypes.func,\n    elementStyle: PropTypes.func,\n    gutterStyle: PropTypes.func,\n    onDrag: PropTypes.func,\n    onDragStart: PropTypes.func,\n    onDragEnd: PropTypes.func,\n    collapsed: PropTypes.number,\n    children: PropTypes.arrayOf(PropTypes.element),\n};\n\nSplitWrapper.defaultProps = {\n    sizes: undefined,\n    minSize: undefined,\n    maxSize: undefined,\n    expandToMin: undefined,\n    gutterSize: undefined,\n    gutterAlign: undefined,\n    snapOffset: undefined,\n    dragInterval: undefined,\n    direction: undefined,\n    cursor: undefined,\n    gutter: undefined,\n    elementStyle: undefined,\n    gutterStyle: undefined,\n    onDrag: undefined,\n    onDragStart: undefined,\n    onDragEnd: undefined,\n    collapsed: undefined,\n    children: undefined,\n};\n\nexport default SplitWrapper;\n"],"names":["global","window","ssr","undefined","document","HORIZONTAL","NOOP","calc","filter","prefix","el","createElement","style","cssText","length","shift","isString","v","String","elementOrSelector","ele","querySelector","Error","getOption","options","propName","def","value","getGutterSize","gutterSize","isFirst","isLast","gutterAlign","defaultGutterFn","i","gutterDirection","gut","className","defaultElementStyleFn","dim","size","gutSize","defaultGutterStyleFn","obj","idsOption","dimension","clientAxis","position","positionEnd","clientSize","elements","ids","Array","from","parent","parentNode","parentStyle","getComputedStyle","parentFlexDirection","flexDirection","sizes","map","minSize","minSizes","isArray","expandToMin","snapOffset","dragInterval","direction","cursor","gutter","elementStyle","gutterStyle","setElementSize","Object","keys","forEach","prop","getSizes","element","getMousePosition","e","touches","adjust","offset","a","this","b","percentage","drag","dragging","start","dragOffset","Math","round","call","calculateSizes","aBounds","bBounds","end","trimToMin","sizesToTrim","parentSize","computedStyle","parseFloat","paddingLeft","paddingRight","paddingTop","paddingBottom","innerSize","reduce","excessPixels","toSpare","pixelSizes","pixelSize","elementGutterSize","elementMinSize","push","newPixelSize","takenPixels","min","stopDragging","self","stop","move","userSelect","webkitUserSelect","MozUserSelect","pointerEvents","body","startDragging","button","preventDefault","bind","pairs","adjustToMin","pair","id","temp","gutterElement","setGutterSize","insertBefore","computedSize","setSizes","newSizes","trimmed","newSize","collapse","destroy","preserveStyles","preserveGutter","removeChild","objectWithoutProperties","exclude","target","k","prototype","hasOwnProperty","indexOf","SplitWrapper","superclass","apply","arguments","__proto__","create","constructor","componentDidMount","ref","props","children","index","__isSplitGutter","split","componentDidUpdate","prevProps","this$1","collapsed","prevMinSize","prevSizes","prevCollapsed","needsRecreate","accum","same","minSizeChanged","minSizeI","pairB","previousSibling","sizeChanged","sizeI","Number","isInteger","componentWillUnmount","render","maxSize","onDrag","onDragStart","onDragEnd","rest","assign","propTypes","defaultProps"],"sourceRoot":""}