{"version":3,"file":"5b4efb9d89b9ceb2f2fc.chunk.js","mappings":"sMAAA,MCIMA,EAAgB,CAAC,EAAG,EAAG,EAAG,KAC1BC,EAAe,CACnBC,YAAa,SACbC,YAAa,CACXC,KAAM,SACNC,IAAK,EACLC,MAAO,GAETC,gBAAiB,CACfH,KAAM,SACNC,IAAK,EACLC,MAAO,GAETE,gBAAiB,CACfJ,KAAM,SACNC,IAAK,EACLC,MAAOG,OAAOC,kBAEhBC,eAAgB,SAChBC,eAAgB,CACdR,KAAM,SACNC,IAAK,EACLC,MAAO,GAETO,mBAAoB,CAClBT,KAAM,SACNC,IAAK,EACLC,MAAO,GAETQ,mBAAoB,CAClBV,KAAM,SACNC,IAAK,EACLC,MAAOG,OAAOC,kBAEhBK,SAAS,EACTC,QAAQ,EACRC,WAAW,EACXC,YAAa,CACXd,KAAM,WACNE,MAAOa,GAAKA,EAAEC,UAEhBC,UAAW,CACTjB,KAAM,WACNE,MAAO,GAETgB,aAAc,CACZlB,KAAM,WACNE,MAAON,GAETuB,aAAc,CACZnB,KAAM,WACNE,MAAON,GAETwB,aAAc,CACZpB,KAAM,WACNE,MAAO,GAETmB,YAAa,CACXC,cAAe,gBAEjBC,QAAS,CACPD,cAAe,WAEjBE,SAAU,CACRF,cAAe,CAAC,eAAgB,kBAGrB,MAAMG,UAAyB,IAC5CC,aACE,OAAOC,MAAMD,WAAW,CACtBE,GD1EN,+rEC2EMC,GC3EN,q/BD4EMC,QAAS,CAACC,EAAA,EAAWC,EAAA,IAEzB,CAEAC,kBACEC,KAAKC,sBAAsBC,aAAa,CACtCC,kBAAmB,CACjBC,KAAM,EACNtC,KAAM,KACNuC,KAAML,KAAKM,oBACXC,YAAY,EACZC,SAAU,eAEZC,eAAgB,CACdL,KAAM,EACNG,YAAY,EACZC,SAAU,YACVE,aAAc,GAEhBC,mBAAoB,CAClBP,KAAMJ,KAAKY,MAAMC,YAAYC,OAC7BP,YAAY,EACZQ,YAAY,EACZjD,KAAM,KACN0C,SAAU,eACVE,aAAc,CAAC,EAAG,EAAG,EAAG,MAE1BM,mBAAoB,CAClBZ,KAAMJ,KAAKY,MAAMC,YAAYC,OAC7BP,YAAY,EACZQ,YAAY,EACZjD,KAAM,KACN0C,SAAU,eACVE,aAAc,CAAC,EAAG,EAAG,EAAG,MAE1BO,mBAAoB,CAClBb,KAAM,EACNG,YAAY,EACZC,SAAU,eACVE,aAAc,IAGpB,CAEAQ,aAAY,MACVN,EAAK,SACLO,EAAQ,YACRC,IAQA,GANA3B,MAAMyB,YAAY,CAChBN,QACAO,WACAC,gBAGEA,EAAYC,kBAAmB,CACjC,IAAIC,EAEJ,MAAM,GACJC,GACEvB,KAAKwB,QACkC,QAA1CF,EAAoBtB,KAAKyB,MAAMC,aAAyC,IAAtBJ,GAAwCA,EAAkBK,SAC7G3B,KAAKyB,MAAMC,MAAQ1B,KAAK4B,UAAUL,GAClCvB,KAAKC,sBAAsB4B,eAC7B,CACF,CAEAC,MAAK,SACHC,IAEA,MAAM,SACJC,GACEhC,KAAKwB,SACH,YACJ5D,EAAW,YACXC,EAAW,gBACXI,EAAe,gBACfC,EAAe,QACfO,EAAO,OACPC,EAAM,UACNC,EAAS,eACTN,EAAc,eACdC,EAAc,mBACdC,EAAkB,mBAClBC,GACEwB,KAAKY,MACHqB,EAAwC,WAAhBrE,EAA2BoE,EAASE,eAAiB,EAC7EC,EAAyC,WAAnB9D,EAA8B2D,EAASE,eAAiB,EACpFlC,KAAKyB,MAAMC,MAAMU,YAAYL,GAAUK,YAAY,CACjD3D,QAASA,EAAU,EAAI,EACvBC,SACAC,YACAd,YAAaA,EAAcoE,EAC3BhE,kBACAC,kBACAI,eAAgBA,EAAiB6D,EACjC5D,qBACAC,uBACCsD,MACL,CAEAF,UAAUL,GAER,OAAO,IAAI,IAAMA,EAAI,IAAKvB,KAAKR,aAC7B6C,GAAIrC,KAAKY,MAAMyB,GACfC,SAAU,IAAI,IAAS,CACrBC,SAAU,EACVC,YAAa,EACbC,WAAY,CACVC,UAAW,CACTtC,KAAM,EACNpC,MAAO,IAAI2E,aATD,EAAE,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,QAatDC,aAAa,GAEjB,EAGFrD,EAAiBsD,UAAY,mBAC7BtD,EAAiB5B,aAAeA,C,2HE5KhC,MAAMmF,EAAeC,EAAAA,GAAAA,GAAW;IAC3B,IAAD,IAAC,MAAEC,GAAH,QAAgB,oBACHA,EAAMC,WAAWC,MAAMC,kDAEtBH,EAAMI,OAAOC,UAAUC,gCACnBN,EAAMO,cAAcP,EAAMI,OAAOC,UAAUG,wBAClC,EAAjBR,EAAMO,6BACY,EAAjBP,EAAMO,cAAmC,EAAjBP,EAAMO,uMAW5BP,EAAMI,OAAOC,UAAUI,sFAIG,EAAjBT,EAAMO,4CArB5B;EA4BEG,EAAoB,MAEpBC,EAAY,CAChBC,WAAYC,IAAAA,OACZC,iBAAkBD,IAAAA,KAClBE,OAAQF,IAAAA,OACR/E,SAAU+E,IAAAA,MAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,OACnDG,mBAAoBH,IAAAA,KACpBI,eAAgBJ,IAAAA,MAYH,MAAMK,UAAeC,EAAAA,cAClCJ,OAAO/F,GACL,IAAKgC,KAAKY,MAAMmD,QAAU/D,KAAKY,MAAMkD,iBACnC,OAAO9F,EAGT,MAAMoG,EAAWC,WAAWrG,GAE5B,OAAOsG,EAAAA,EAAAA,IAAatE,KAAKY,MAAMmD,OAAQK,EACxC,CAEDG,oBAAoBC,GAClB,IAAKxE,KAAKY,MAAMmD,OACd,OAAOS,EAGT,GAAI,IAAAA,GAAC,KAADA,EAAWd,GAAoB,CACjC,MAAMe,EAASD,EAAEE,MAAMhB,GAEvB,OACE1D,KAAK+D,OAAOU,EAAO,IAAMf,EAAoB1D,KAAK+D,OAAOU,EAAO,GAEnE,CAED,OAAOzE,KAAK+D,OAAOS,EACpB,CAEDG,SACE,GACgD,IAA9CC,OAAOC,KAAK7E,KAAKY,MAAMgD,YAAY9C,QACX,OAAxBd,KAAKY,MAAM9B,SAEX,OAAO,KAGT,MAAM8E,EAAagB,OAAOE,QAAQ9E,KAAKY,MAAMgD,YAAYmB,KAAK,IAAY,IAAXP,EAAGQ,GAAO,EACvE,MAAMC,EAAQ,CAAEC,MAAQ,QAAOF,EAAEE,MAAMC,KAAK,UACtCC,EAAOJ,EAAEK,QAAU,IAAW,IAEpC,OACE,cAAIC,IAAKd,IACP,aACEe,KAAK,IACLC,QAAS,IAAMxF,KAAKY,MAAMqD,eAAeO,GACzCiB,cAAe,IAAMzF,KAAKY,MAAMoD,mBAAmBQ,KAEnD,gBAAMS,MAAOA,GAAQG,GALvB,IAKqCpF,KAAKuE,oBAAoBC,IAPlE,IAeIS,EAAQ,CACZnG,SAAU,WACV,CAJiD,MAAlCkB,KAAKY,MAAM9B,SAAS4G,OAAO,GAAa,MAAQ,UAInD,MACZ,CAJmD,MAAlC1F,KAAKY,MAAM9B,SAAS4G,OAAO,GAAa,QAAU,QAIrD,QAGhB,OACE,QAAC5C,EAAD,CAAcmC,MAAOA,IACnB,kBAAKrB,GAGV,EAGHM,EAAOP,UAAYA,EACnBO,EAAOvG,aA9Ec,CACnBiG,WAAY,CAAC,EACbE,kBAAkB,EAClBC,OAAQ,KACRjF,SAAU,KACVkF,mBAAoB,OACpBC,eAAgB,O,+ICnDX,MAQD0B,EAAgB,Q,eCEtB,SAASC,EAAkBC,EAAUC,GACnC,OAAOC,IAAM,IAAD,EACV,MAAMC,GACM,MAAVF,OAAA,EAAAA,EAAaD,EAASI,mBAAmBjI,UACzCkI,EAAAA,EAAAA,GAAc,SAACL,EAASI,yBAAV,EAAC,EAA6BjI,OAC9C,OACE,eAAKmI,UAAU,mBACb,QAACC,EAAA,EAAD,CAEEJ,OAAOK,EAAAA,EAAAA,GAAE,0BAA4B,KACrCrI,MAAQ,GAAE+H,EAAEO,OAAOxH,SAAS,OAAOiH,EAAEO,OAAOxH,SAAS,OAEtDiH,EAAEO,OAAOC,YACR,QAACH,EAAA,EAAD,CAEEJ,OAAOK,EAAAA,EAAAA,GAAE,YAAc,KACvBrI,MAAQ,GAAE+H,EAAEO,OAAOC,cAGtBR,EAAEO,OAAOE,SACR,QAACJ,EAAA,EAAD,CAAYJ,MAAQ,GAAEA,MAAWhI,MAAQ,GAAE+H,EAAEO,OAAOE,WAf1D,CAoBH,CAEM,SAASC,EACdZ,EACAa,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAKjB,EACLkB,EAAiBL,EAAQM,KAAKC,SAASlC,KAAImC,IAC/C,IAAIC,GDpCqBC,ECoCCN,EAAGO,WDpCEC,ECoCUJ,EAAEC,QDnChC,aAATC,EACKG,KAAKC,KAAKF,EAAMC,KAAKE,IAEjB,aAATL,EACKE,EAEI,cAATF,EACW,IAANE,EAEI,iBAATF,EACKE,EAAM3B,EAEF,cAATyB,EACgC,IAA3BG,KAAKC,KAAKF,EAAMC,KAAKE,IAEjB,iBAATL,EACKG,KAAKC,KAAKF,EAAMC,KAAKE,IAAM9B,EAG7B,OCgBiD,IDpCnD,IAAsByB,EAAME,ECwC/B,GAHIR,EAAGY,aACLP,GAAUL,EAAGY,YAEXR,EAAEhC,MACJ,MAAO,IAAKgC,EAAGC,UAEjB,MAAMQ,EAAIb,EAAGc,cAAgB,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9C9C,EAAQ,CAACyC,EAAEE,EAAGF,EAAEG,EAAGH,EAAEI,EAAS,IAANJ,EAAEK,GAEhC,MAAO,IAAKd,EAAGC,SAAQjC,QAAvB,IAGF,OAAO,IAAI3F,EAAAA,EAAiB,CAC1B8C,GAAK,iBAAgByE,EAAGmB,WACxBjB,KAAMD,EACN1G,MAAM,EACNrB,aAAckI,GAAKA,EAAEhC,MACrBnG,UAAWmI,GAAKA,EAAEC,OAClBlJ,gBAAiB6I,EAAGoB,YAAc,KAClChK,gBAAiB4I,EAAGqB,YAAc,KAClC1J,SAAS,MACN2J,EAAAA,EAAAA,GACDtB,EACAF,EACAhB,EAAkBkB,EAAD,MAAKD,OAAL,EAAKA,EAAYf,cAGvC,CAED,SAAeuC,EAAAA,EAAAA,GAAiC5B,GAtEhD,SAAmBO,GACjB,OAAOA,EAAKjC,KAAImC,GAAKA,EAAEpI,UACxB,G,qMCSD,MAAM,SAAEwJ,GAAaC,EAsBf5E,EAAY,CAChBkD,WAAYhD,IAAAA,OAAAA,WACZgC,SAAUhC,IAAAA,OAAAA,WACV4C,SAAU5C,IAAAA,KAAAA,WACV2E,UAAW3E,IAAAA,KAAAA,WACX4E,OAAQ5E,IAAAA,OAAAA,WACR6E,aAAc7E,IAAAA,OAAAA,WACd8C,YAAa9C,IAAAA,KACb6C,QAAS7C,IAAAA,OAAAA,WACT8E,gBAAiB9E,IAAAA,KAAAA,WACjB7B,SAAU6B,IAAAA,OAAAA,WACV+E,MAAO/E,IAAAA,OAAAA,YAGM,MAAMgF,UAAmC1E,EAAAA,cAStD2E,YAAYlI,GACVnB,MAAMmB,GADW,KARnBmI,aAAe5E,EAAAA,YAQI,KA2KnByC,WAAaoC,IACX,MAAM,QAAEC,GAAYjJ,KAAK+I,aACrBE,GACFA,EAAQrC,WAAWoC,EACpB,EA7KDhJ,KAAKyB,MAAQzB,KAAKkJ,kBAAkBtI,GAEpCZ,KAAKmJ,UAAYnJ,KAAKmJ,UAAUC,KAAKpJ,MACrCA,KAAKqJ,eAAiBrJ,KAAKqJ,eAAeD,KAAKpJ,MAC/CA,KAAKiE,eAAiBjE,KAAKiE,eAAemF,KAAKpJ,MAC/CA,KAAKgE,mBAAqBhE,KAAKgE,mBAAmBoF,KAAKpJ,KACxD,CAEDsJ,iCAAiCC,GAC3BA,EAAU7C,QAAQ8C,YAAcxJ,KAAKyB,MAAMoE,UAC7C7F,KAAKyJ,SAAS,IAAKzJ,KAAKkJ,kBAAkBK,IAE7C,CAEDF,eAAe5E,GACbzE,KAAKyJ,SAAS,CACZhF,OAAQiF,MAAMC,QAAQlF,GAClBA,EACA,CAACA,EAAQA,EAASzE,KAAKyB,MAAMmI,QAAQnF,KAE5C,CAGDyE,kBAAkBtI,EAAOa,GACvB,MAAMwF,EAAWrG,EAAM8F,QAAQM,KAAKC,UAAY,GAC1C4C,EAAa5C,EAASlC,KAAI+E,GAAKA,EAAEC,cACjCnG,EAvEV,SAAuBkD,EAAIE,GACzB,MAAMW,EAAIb,EAAGc,cAAgB,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9CgC,EAAa,CAACrC,EAAEE,EAAGF,EAAEG,EAAGH,EAAEI,EAAG,IAAMJ,EAAEK,GACrCiC,EAAU3B,EAASxB,EAAGoD,cACtBtG,EAAa,CAAC,EAapB,OAZAoD,EAAKmD,SAAQjD,IACX,GAAmB,MAAfA,EAAEX,YAAsB3C,EAAWwG,eAAelD,EAAEX,WAAY,CAClE,IAAIrB,EAEFA,EADE4B,EAAGuD,WACGC,EAAAA,EAAAA,UAASL,EAAQ/C,EAAEX,UAAWO,EAAGyD,SAAgB,IAAN5C,EAAEK,GAE7CgC,EAEVpG,EAAWsD,EAAEX,WAAa,CAAErB,QAAOG,SAAS,EAC7C,KAGIzB,CACR,CAqDsB4G,CAAc5J,EAAMiF,SAAUoB,GAKjD,GAAIxF,GAASb,EAAM8F,QAAQ8C,YAAc/H,EAAMoE,SAC7C,MAAO,IAAKpE,EAAOmC,cAKrB,MAAM6G,EACJ7J,EAAM8F,QAAQ8C,UAAUkB,iBACxB9J,EAAM8F,QAAQ8C,UAAUiB,aACxB,OAEI,MAAEE,EAAF,IAASC,EAAT,QAAchB,EAAd,OAAuBnF,EAAvB,SAA+BoG,IAAaC,EAAAA,EAAAA,GAChDjB,EACAY,IAGI,MAAE7B,EAAF,OAASH,EAAT,SAAiB5C,GAAajF,EACpC,IAAI,SAAEoB,GAAapB,EAYnB,OAXIiF,EAASkF,WACX/I,GAAWgJ,EAAAA,EAAAA,GAAYhJ,EAAU,CAC/B4G,QACAH,SACAwC,OAAQrK,EAAM4H,UAAUvB,MAGxBjF,EAASkJ,KAAO,IAClBlJ,EAASkJ,KAAO,GAGX,CACLP,QACAC,MACAhB,UACAnF,SACAoG,WACA7I,WACAmJ,SAAU,GACVC,UAAW,EACXvF,SAAUjF,EAAM8F,QAAQ8C,UACxB5F,aAEH,CAEDuF,UAAU1E,GACR,MAAM,SAAEgC,EAAF,QAAYC,EAASb,SAAUiB,EAA/B,YAAmCH,GAAgB3G,KAAKY,MAC9D,IAAIqG,EAAWP,EAAQM,KAAKC,SAAW,IAAIP,EAAQM,KAAKC,UAAY,GAGpEA,EAAWjH,KAAKqL,SAASpE,EAAUH,GAG/BA,EAAGwE,kBAELrE,GADoBsE,EAAAA,EAAAA,GAAczE,EAAGwE,gBAC1BE,CAAYvE,IAKvBA,EADExC,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOzE,KAAK4K,IACrC3D,EAASwE,QAClBvE,GAAKA,EAAE6C,aAAetF,EAAO,IAAMyC,EAAE6C,aAAetF,EAAO,KAGlDwC,EAASwE,QAClBvE,GAAKA,EAAE6C,aAAetF,EAAO,IAAMyC,EAAE6C,YAActF,EAAO,KAK9D,MAAMiH,EAAO1L,KAAKyB,MAAMmC,WAYxB,OAXIkD,EAAGuD,YACLpD,EAAWA,EAASwE,QAClBvE,GAAKwE,EAAKxE,EAAEX,YAAcmF,EAAKxE,EAAEX,WAAWlB,WASzC,CACLoB,EACEK,EAPoB,IACnBJ,EACHM,KAAM,IAAKN,EAAQM,KAAMC,aAOvBN,EACA3G,KAAK4G,WACL5G,KAAKY,MAAMiG,YAGhB,CAGDwE,SAASrE,EAAMF,GACb,MAAMa,EAAIb,EAAGc,cAAgB,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9CiC,EAAU3B,EAASxB,EAAGoD,cAE5B,OAAOlD,EAAKjC,KAAImC,IACd,IAAIhC,EACJ,OAAI4B,EAAGuD,WACLnF,GAAQoF,EAAAA,EAAAA,UAASL,EAAQ/C,EAAEX,UAAWO,EAAGyD,SAAgB,IAAN5C,EAAEK,GAE9C,IAAKd,EAAGhC,UAGVgC,CAAP,GAEH,CAEDjD,eAAe0H,GACb,MAAMC,EAAgB5L,KAAKyB,MAAMmC,WAAW+H,GACtC/H,EAAa,IACd5D,KAAKyB,MAAMmC,WACd,CAAC+H,GAAW,IACPC,EACHvG,SAAUuG,EAAcvG,UAKxBT,OAAOH,OAAOb,GAAYiI,OAAM7G,IAAMA,EAAEK,WAE1CT,OAAOH,OAAOb,GAAYuG,SAAQnF,IAChCA,EAAEK,SAAU,CAAZ,IAGJrF,KAAKyJ,SAAS,CAAE7F,cACjB,CAEDI,mBAAmB2H,GACjB,MAAM/H,EAAa,IAAK5D,KAAKyB,MAAMmC,YAEnCgB,OAAOH,OAAOb,GAAYuG,SAAQnF,IAChCA,EAAEK,SAAU,CAAZ,IAEFzB,EAAW+H,GAAUtG,SAAU,EAC/BrF,KAAKyJ,SAAS,CAAE7F,cACjB,CASDe,SACE,OACE,eAAKM,MAAO,CAAEnG,SAAU,cACtB,QAACgN,EAAA,EAAD,CACEC,IAAK/L,KAAK+I,aACVI,UAAWnJ,KAAKmJ,UAChBwB,MAAO3K,KAAKyB,MAAMkJ,MAClBC,IAAK5K,KAAKyB,MAAMmJ,IAChBhB,QAAS5J,KAAKyB,MAAMmI,QACpBnF,OAAQzE,KAAKyB,MAAMgD,OACnBoG,SAAU7K,KAAKyB,MAAMoJ,SACrB7I,SAAUhC,KAAKyB,MAAMO,SACrBgK,qBAAsBhM,KAAKY,MAAM8H,aACjCuD,SAAUjM,KAAKY,MAAMiF,SAASqG,aAC9BvD,gBAAiB3I,KAAKY,MAAM+H,gBAC5BC,MAAO5I,KAAKY,MAAMgI,MAClBH,OAAQzI,KAAKY,MAAM6H,SAEnB,QAACvE,EAAA,EAAD,CACEJ,kBAAgB,EAChBF,WAAY5D,KAAKyB,MAAMmC,WACvBG,OAAQ/D,KAAKY,MAAMiF,SAASsG,cAC5BrN,SAAUkB,KAAKY,MAAMiF,SAASuG,gBAC9BpI,mBAAoBhE,KAAKgE,mBACzBC,eAAgBjE,KAAKiE,kBAK9B,ECzOG,SAAUoI,EACd5F,EACA+B,GAGA,MAAM8D,UAAkBnI,EAAAA,cAMtB2E,YAAYlI,GACVnB,MAAMmB,GAD+B,KAFvCmI,aAAiD5E,EAAAA,YAEV,KA0CvCyC,WAAcoC,IACZ,MAAM,QAAEC,GAAYjJ,KAAK+I,aACrBE,IACK,MAAPA,GAAAA,EAASrC,WAAWoC,GACrB,EA3CD,MAAM,MAAEJ,EAAF,OAASH,EAAT,SAAiB5C,GAAajF,EACpC,IAAI,SAAEoB,GAAapB,EACfiF,EAASkF,WACX/I,GAAWgJ,EAAAA,EAAAA,GAAYhJ,EAAU,CAC/B4G,QACAH,SACAwC,OAAQzC,EAAU5H,EAAM8F,QAAQM,KAAKC,aAIzCjH,KAAKyB,MAAQ,CACXO,WACAuK,MAAOvM,KAAKwM,aAAa5L,IAE3BZ,KAAKyM,iBAAmBzM,KAAKyM,iBAAiBrD,KAAKpJ,KACpD,CAEDsJ,iCAAiCC,GAE/B,MAAMmD,EAAa,IAAKnD,EAAU1D,SAAU7D,SAAU,MAChD2K,EAAa,IAAK3M,KAAKY,MAAMiF,SAAU7D,SAAU,MAEpD,IAAQ0K,EAAYC,IACrBpD,EAAU7C,UAAY1G,KAAKY,MAAM8F,SAEjC1G,KAAKyJ,SAAS,CAAE8C,MAAOvM,KAAKwM,aAAajD,IAE5C,CAEDkD,iBAAiBzK,GACfhC,KAAKyJ,SAAS,CAAEzH,YACjB,CAEDwK,aAAa5L,GACX,MAAM,SAAEiF,EAAF,QAAYa,EAAZ,YAAqBC,GAAgB/F,EAE3C,OAAO6F,EAASZ,EAAUa,EAASC,EAAa3G,KAAK4G,WACtD,CASDjC,SACE,MAAM,SAAEkB,EAAF,QAAYa,EAAZ,gBAAqBiC,EAArB,OAAsCF,EAAtC,MAA8CG,GAAU5I,KAAKY,OAC7D,MAAE2L,EAAF,SAASvK,GAAahC,KAAKyB,MAEjC,OACE,QAACmL,EAAA,EAAD,CACEb,IAAK/L,KAAK+I,aACViD,qBAAsBtF,EAAQM,KAAK0B,aACnC1G,SAAUA,EACV6K,OAAQ,CAACN,GACTN,SAAUpG,EAASqG,aACnBvD,gBAAiBA,EACjBC,MAAOA,EACPH,OAAQA,EACRgE,iBAAkBzM,KAAKyM,kBAG5B,EAEH,OAAOH,CACR,CAEK,SAAUjE,EACd5B,EACA+B,GAEA,OAAO,SAAmB5H,GACxB,MAAM,WACJiG,EADI,SAEJhB,EAFI,OAGJ4C,EAHI,QAIJ/B,EAJI,gBAKJiC,EALI,SAMJ3G,EANI,MAOJ4G,GACEhI,EAEJ,OACE,QAACiI,EAAD,CACEhC,WAAYA,EACZhB,SAAUA,EACV6C,aAAchC,EAAQM,KAAK0B,aAC3BC,gBAAiBA,EACjB3G,SAAUA,EACVyE,SAAUA,EACVC,QAASA,EACT8B,UAAWA,EACXI,MAAOA,EACPH,OAAQA,GAGb,CACF,CD4HDI,EAA2BlF,UAAYA,C","sources":["webpack://superset/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/components/Legend.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/geo.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Scatter/Scatter.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/factory.tsx"],"sourcesContent":["export default \"#define SHADER_NAME scatterplot-layer-vertex-shader\\n\\nattribute vec3 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute float instanceRadius;\\nattribute float instanceLineWidths;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform float opacity;\\nuniform float radiusScale;\\nuniform float radiusMinPixels;\\nuniform float radiusMaxPixels;\\nuniform float lineWidthScale;\\nuniform float lineWidthMinPixels;\\nuniform float lineWidthMaxPixels;\\nuniform float stroked;\\nuniform bool filled;\\nuniform bool billboard;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying vec2 unitPosition;\\nvarying float innerUnitRadius;\\nvarying float outerRadiusPixels;\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  outerRadiusPixels = clamp(\\n    project_size_to_pixel(radiusScale * instanceRadius),\\n    radiusMinPixels, radiusMaxPixels\\n  );\\n  float lineWidthPixels = clamp(\\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\\n    lineWidthMinPixels, lineWidthMaxPixels\\n  );\\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\\n  unitPosition = positions.xy;\\n  geometry.uv = unitPosition;\\n  geometry.pickingColor = instancePickingColors;\\n\\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\\n  \\n  if (billboard) {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = positions * outerRadiusPixels;\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n  } else {\\n    vec3 offset = positions * project_pixel_size(outerRadiusPixels);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\\n  }\\n\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\\n}\\n\";\n//# sourceMappingURL=scatterplot-layer-vertex.glsl.js.map","import { Layer, project32, picking } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  radiusUnits: 'meters',\n  radiusScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  radiusMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  radiusMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  lineWidthUnits: 'meters',\n  lineWidthScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  lineWidthMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  lineWidthMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  stroked: false,\n  filled: true,\n  billboard: false,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getRadius: {\n    type: 'accessor',\n    value: 1\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  strokeWidth: {\n    deprecatedFor: 'getLineWidth'\n  },\n  outline: {\n    deprecatedFor: 'stroked'\n  },\n  getColor: {\n    deprecatedFor: ['getFillColor', 'getLineColor']\n  }\n};\nexport default class ScatterplotLayer extends Layer {\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceFillColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState({\n    props,\n    oldProps,\n    changeFlags\n  }) {\n    super.updateState({\n      props,\n      oldProps,\n      changeFlags\n    });\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      viewport\n    } = this.context;\n    const {\n      radiusUnits,\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      stroked,\n      filled,\n      billboard,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    } = this.props;\n    const pointRadiusMultiplier = radiusUnits === 'pixels' ? viewport.metersPerPixel : 1;\n    const lineWidthMultiplier = lineWidthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      stroked: stroked ? 1 : 0,\n      filled,\n      billboard,\n      radiusScale: radiusScale * pointRadiusMultiplier,\n      radiusMinPixels,\n      radiusMaxPixels,\n      lineWidthScale: lineWidthScale * lineWidthMultiplier,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const positions = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 3,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n}\nScatterplotLayer.layerName = 'ScatterplotLayer';\nScatterplotLayer.defaultProps = defaultProps;\n//# sourceMappingURL=scatterplot-layer.js.map","export default \"#define SHADER_NAME scatterplot-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform bool filled;\\nuniform float stroked;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying vec2 unitPosition;\\nvarying float innerUnitRadius;\\nvarying float outerRadiusPixels;\\n\\nvoid main(void) {\\n  geometry.uv = unitPosition;\\n\\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\\n  float inCircle = smoothedge(distToCenter, outerRadiusPixels);\\n\\n  if (inCircle == 0.0) {\\n    discard;\\n  }\\n\\n  if (stroked > 0.5) {\\n    float isLine = smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter);\\n    if (filled) {\\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\\n    } else {\\n      if (isLine == 0.0) {\\n        discard;\\n      }\\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\\n    }\\n  } else if (filled) {\\n    gl_FragColor = vFillColor;\\n  } else {\\n    discard;\\n  }\\n\\n  gl_FragColor.a *= inCircle;\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=scatterplot-layer-fragment.glsl.js.map","/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatNumber, styled } from '@superset-ui/core';\n\nconst StyledLegend = styled.div`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    position: absolute;\n    background: ${theme.colors.grayscale.light5};\n    box-shadow: 0 0 ${theme.gridUnit}px ${theme.colors.grayscale.light2};\n    margin: ${theme.gridUnit * 6}px;\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 5}px;\n    outline: none;\n    overflow-y: scroll;\n    max-height: 200px;\n\n    & ul {\n      list-style: none;\n      padding-left: 0;\n      margin: 0;\n\n      & li a {\n        color: ${theme.colors.grayscale.base};\n        text-decoration: none;\n\n        & span {\n          margin-right: ${theme.gridUnit * 3}px;\n        }\n      }\n    }\n  `}\n`;\n\nconst categoryDelimiter = ' - ';\n\nconst propTypes = {\n  categories: PropTypes.object,\n  forceCategorical: PropTypes.bool,\n  format: PropTypes.string,\n  position: PropTypes.oneOf([null, 'tl', 'tr', 'bl', 'br']),\n  showSingleCategory: PropTypes.func,\n  toggleCategory: PropTypes.func,\n};\n\nconst defaultProps = {\n  categories: {},\n  forceCategorical: false,\n  format: null,\n  position: 'tr',\n  showSingleCategory: () => {},\n  toggleCategory: () => {},\n};\n\nexport default class Legend extends React.PureComponent {\n  format(value) {\n    if (!this.props.format || this.props.forceCategorical) {\n      return value;\n    }\n\n    const numValue = parseFloat(value);\n\n    return formatNumber(this.props.format, numValue);\n  }\n\n  formatCategoryLabel(k) {\n    if (!this.props.format) {\n      return k;\n    }\n\n    if (k.includes(categoryDelimiter)) {\n      const values = k.split(categoryDelimiter);\n\n      return (\n        this.format(values[0]) + categoryDelimiter + this.format(values[1])\n      );\n    }\n\n    return this.format(k);\n  }\n\n  render() {\n    if (\n      Object.keys(this.props.categories).length === 0 ||\n      this.props.position === null\n    ) {\n      return null;\n    }\n\n    const categories = Object.entries(this.props.categories).map(([k, v]) => {\n      const style = { color: `rgba(${v.color.join(', ')})` };\n      const icon = v.enabled ? '\\u25FC' : '\\u25FB';\n\n      return (\n        <li key={k}>\n          <a\n            href=\"#\"\n            onClick={() => this.props.toggleCategory(k)}\n            onDoubleClick={() => this.props.showSingleCategory(k)}\n          >\n            <span style={style}>{icon}</span> {this.formatCategoryLabel(k)}\n          </a>\n        </li>\n      );\n    });\n\n    const vertical = this.props.position.charAt(0) === 't' ? 'top' : 'bottom';\n    const horizontal = this.props.position.charAt(1) === 'r' ? 'right' : 'left';\n    const style = {\n      position: 'absolute',\n      [vertical]: '0px',\n      [horizontal]: '10px',\n    };\n\n    return (\n      <StyledLegend style={style}>\n        <ul>{categories}</ul>\n      </StyledLegend>\n    );\n  }\n}\n\nLegend.propTypes = propTypes;\nLegend.defaultProps = defaultProps;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { roundDecimal } from './utils';\n\nexport const defaultViewport = {\n  bearing: 0,\n  latitude: 31.222656842808707,\n  longitude: 6.85236157047845,\n  pitch: 0,\n  zoom: 1,\n};\n\nconst METER_TO_MILE = 1609.34;\n\nexport function unitToRadius(unit, num) {\n  if (unit === 'square_m') {\n    return Math.sqrt(num / Math.PI);\n  }\n  if (unit === 'radius_m') {\n    return num;\n  }\n  if (unit === 'radius_km') {\n    return num * 1000;\n  }\n  if (unit === 'radius_miles') {\n    return num * METER_TO_MILE;\n  }\n  if (unit === 'square_km') {\n    return Math.sqrt(num / Math.PI) * 1000;\n  }\n  if (unit === 'square_miles') {\n    return Math.sqrt(num / Math.PI) * METER_TO_MILE;\n  }\n\n  return null;\n}\n\nexport const EARTH_CIRCUMFERENCE_KM = 40075.16;\nexport const MILES_PER_KM = 1.60934;\n\nexport function kmToPixels(kilometers, latitude, zoomLevel) {\n  // Algorithm from: https://wiki.openstreetmap.org/wiki/Zoom_levels\n  const latitudeRad = latitude * (Math.PI / 180);\n  // Seems like the zoomLevel is off by one\n  const kmPerPixel =\n    (EARTH_CIRCUMFERENCE_KM * Math.cos(latitudeRad)) / 2 ** (zoomLevel + 9);\n\n  return roundDecimal(kilometers / kmPerPixel, 2);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ScatterplotLayer } from 'deck.gl';\nimport React from 'react';\nimport { getMetricLabel, t } from '@superset-ui/core';\nimport { commonLayerProps } from '../common';\nimport { createCategoricalDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\nimport { unitToRadius } from '../../utils/geo';\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nfunction setTooltipContent(formData, verboseMap) {\n  return o => {\n    const label =\n      verboseMap?.[formData.point_radius_fixed.value] ||\n      getMetricLabel(formData.point_radius_fixed?.value);\n    return (\n      <div className=\"deckgl-tooltip\">\n        <TooltipRow\n          // eslint-disable-next-line prefer-template\n          label={t('Longitude and Latitude') + ': '}\n          value={`${o.object.position[0]}, ${o.object.position[1]}`}\n        />\n        {o.object.cat_color && (\n          <TooltipRow\n            // eslint-disable-next-line prefer-template\n            label={t('Category') + ': '}\n            value={`${o.object.cat_color}`}\n          />\n        )}\n        {o.object.metric && (\n          <TooltipRow label={`${label}: `} value={`${o.object.metric}`} />\n        )}\n      </div>\n    );\n  };\n}\n\nexport function getLayer(\n  formData,\n  payload,\n  onAddFilter,\n  setTooltip,\n  datasource,\n) {\n  const fd = formData;\n  const dataWithRadius = payload.data.features.map(d => {\n    let radius = unitToRadius(fd.point_unit, d.radius) || 10;\n    if (fd.multiplier) {\n      radius *= fd.multiplier;\n    }\n    if (d.color) {\n      return { ...d, radius };\n    }\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const color = [c.r, c.g, c.b, c.a * 255];\n\n    return { ...d, radius, color };\n  });\n\n  return new ScatterplotLayer({\n    id: `scatter-layer-${fd.slice_id}`,\n    data: dataWithRadius,\n    fp64: true,\n    getFillColor: d => d.color,\n    getRadius: d => d.radius,\n    radiusMinPixels: fd.min_radius || null,\n    radiusMaxPixels: fd.max_radius || null,\n    stroked: false,\n    ...commonLayerProps(\n      fd,\n      setTooltip,\n      setTooltipContent(fd, datasource?.verboseMap),\n    ),\n  });\n}\n\nexport default createCategoricalDeckGLComponent(getLayer, getPoints);\n","/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/* eslint-disable no-prototype-builtins */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CategoricalColorNamespace } from '@superset-ui/core';\nimport AnimatableDeckGLContainer from './AnimatableDeckGLContainer';\nimport Legend from './components/Legend';\nimport { hexToRGB } from './utils/colors';\nimport { getPlaySliderParams } from './utils/time';\nimport sandboxedEval from './utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport fitViewport from './utils/fitViewport';\n\nconst { getScale } = CategoricalColorNamespace;\n\nfunction getCategories(fd, data) {\n  const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  const colorFn = getScale(fd.color_scheme);\n  const categories = {};\n  data.forEach(d => {\n    if (d.cat_color != null && !categories.hasOwnProperty(d.cat_color)) {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n      } else {\n        color = fixedColor;\n      }\n      categories[d.cat_color] = { color, enabled: true };\n    }\n  });\n\n  return categories;\n}\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  getLayer: PropTypes.func.isRequired,\n  getPoints: PropTypes.func.isRequired,\n  height: PropTypes.number.isRequired,\n  mapboxApiKey: PropTypes.string.isRequired,\n  onAddFilter: PropTypes.func,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n};\n\nexport default class CategoricalDeckGLContainer extends React.PureComponent {\n  containerRef = React.createRef();\n\n  /*\n   * A Deck.gl container that handles categories.\n   *\n   * The container will have an interactive legend, populated from the\n   * categories present in the data.\n   */\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n    this.toggleCategory = this.toggleCategory.bind(this);\n    this.showSingleCategory = this.showSingleCategory.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.payload.form_data !== this.state.formData) {\n      this.setState({ ...this.getStateFromProps(nextProps) });\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : [values, values + this.state.getStep(values)],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getStateFromProps(props, state) {\n    const features = props.payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n    const categories = getCategories(props.formData, features);\n\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && props.payload.form_data === state.formData) {\n      return { ...state, categories };\n    }\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      props.payload.form_data.time_grain_sqla ||\n      props.payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n\n    const { width, height, formData } = props;\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: props.getPoints(features),\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: props.payload.form_data,\n      categories,\n    };\n  }\n\n  getLayers(values) {\n    const { getLayer, payload, formData: fd, onAddFilter } = this.props;\n    let features = payload.data.features ? [...payload.data.features] : [];\n\n    // Add colors from categories or fixed color\n    features = this.addColor(features, fd);\n\n    // Apply user defined data mutator if defined\n    if (fd.js_data_mutator) {\n      const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n      features = jsFnMutator(features);\n    }\n\n    // Filter by time\n    if (values[0] === values[1] || values[1] === this.end) {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    // Show only categories selected in the legend\n    const cats = this.state.categories;\n    if (fd.dimension) {\n      features = features.filter(\n        d => cats[d.cat_color] && cats[d.cat_color].enabled,\n      );\n    }\n\n    const filteredPayload = {\n      ...payload,\n      data: { ...payload.data, features },\n    };\n\n    return [\n      getLayer(\n        fd,\n        filteredPayload,\n        onAddFilter,\n        this.setTooltip,\n        this.props.datasource,\n      ),\n    ];\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addColor(data, fd) {\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const colorFn = getScale(fd.color_scheme);\n\n    return data.map(d => {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n\n        return { ...d, color };\n      }\n\n      return d;\n    });\n  }\n\n  toggleCategory(category) {\n    const categoryState = this.state.categories[category];\n    const categories = {\n      ...this.state.categories,\n      [category]: {\n        ...categoryState,\n        enabled: !categoryState.enabled,\n      },\n    };\n\n    // if all categories are disabled, enable all -- similar to nvd3\n    if (Object.values(categories).every(v => !v.enabled)) {\n      /* eslint-disable no-param-reassign */\n      Object.values(categories).forEach(v => {\n        v.enabled = true;\n      });\n    }\n    this.setState({ categories });\n  }\n\n  showSingleCategory(category) {\n    const categories = { ...this.state.categories };\n    /* eslint-disable no-param-reassign */\n    Object.values(categories).forEach(v => {\n      v.enabled = false;\n    });\n    categories[category].enabled = true;\n    this.setState({ categories });\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ position: 'relative' }}>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          getLayers={this.getLayers}\n          start={this.state.start}\n          end={this.state.end}\n          getStep={this.state.getStep}\n          values={this.state.values}\n          disabled={this.state.disabled}\n          viewport={this.state.viewport}\n          mapboxApiAccessToken={this.props.mapboxApiKey}\n          mapStyle={this.props.formData.mapbox_style}\n          setControlValue={this.props.setControlValue}\n          width={this.props.width}\n          height={this.props.height}\n        >\n          <Legend\n            forceCategorical\n            categories={this.state.categories}\n            format={this.props.formData.legend_format}\n            position={this.props.formData.legend_position}\n            showSingleCategory={this.showSingleCategory}\n            toggleCategory={this.toggleCategory}\n          />\n        </AnimatableDeckGLContainer>\n      </div>\n    );\n  }\n}\n\nCategoricalDeckGLContainer.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { isEqual } from 'lodash';\nimport { Datasource, QueryFormData, JsonObject } from '@superset-ui/core';\n\nimport {\n  DeckGLContainerStyledWrapper,\n  DeckGLContainer,\n} from './DeckGLContainer';\nimport CategoricalDeckGLContainer from './CategoricalDeckGLContainer';\nimport fitViewport, { Viewport } from './utils/fitViewport';\nimport { Point } from './types';\n\ntype deckGLComponentProps = {\n  datasource: Datasource;\n  formData: QueryFormData;\n  height: number;\n  onAddFilter: () => void;\n  payload: JsonObject;\n  setControlValue: () => void;\n  viewport: Viewport;\n  width: number;\n};\ninterface getLayerType<T> {\n  (\n    formData: QueryFormData,\n    payload: JsonObject,\n    onAddFilter: () => void,\n    setTooltip: (tooltip: string) => void,\n  ): T;\n}\ninterface getPointsType<T> {\n  (point: number[]): T;\n}\ntype deckGLComponentState = {\n  viewport: Viewport;\n  layer: unknown;\n};\n\nexport function createDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType<Point[]>,\n): React.ComponentClass<deckGLComponentProps> {\n  // Higher order component\n  class Component extends React.PureComponent<\n    deckGLComponentProps,\n    deckGLComponentState\n  > {\n    containerRef: React.RefObject<DeckGLContainer> = React.createRef();\n\n    constructor(props: deckGLComponentProps) {\n      super(props);\n\n      const { width, height, formData } = props;\n      let { viewport } = props;\n      if (formData.autozoom) {\n        viewport = fitViewport(viewport, {\n          width,\n          height,\n          points: getPoints(props.payload.data.features),\n        }) as Viewport;\n      }\n\n      this.state = {\n        viewport,\n        layer: this.computeLayer(props),\n      };\n      this.onViewportChange = this.onViewportChange.bind(this);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: deckGLComponentProps) {\n      // Only recompute the layer if anything BUT the viewport has changed\n      const nextFdNoVP = { ...nextProps.formData, viewport: null };\n      const currFdNoVP = { ...this.props.formData, viewport: null };\n      if (\n        !isEqual(nextFdNoVP, currFdNoVP) ||\n        nextProps.payload !== this.props.payload\n      ) {\n        this.setState({ layer: this.computeLayer(nextProps) });\n      }\n    }\n\n    onViewportChange(viewport: Viewport) {\n      this.setState({ viewport });\n    }\n\n    computeLayer(props: deckGLComponentProps) {\n      const { formData, payload, onAddFilter } = props;\n\n      return getLayer(formData, payload, onAddFilter, this.setTooltip);\n    }\n\n    setTooltip = (tooltip: string) => {\n      const { current } = this.containerRef;\n      if (current) {\n        current?.setTooltip(tooltip);\n      }\n    };\n\n    render() {\n      const { formData, payload, setControlValue, height, width } = this.props;\n      const { layer, viewport } = this.state;\n\n      return (\n        <DeckGLContainerStyledWrapper\n          ref={this.containerRef}\n          mapboxApiAccessToken={payload.data.mapboxApiKey}\n          viewport={viewport}\n          layers={[layer]}\n          mapStyle={formData.mapbox_style}\n          setControlValue={setControlValue}\n          width={width}\n          height={height}\n          onViewportChange={this.onViewportChange}\n        />\n      );\n    }\n  }\n  return Component;\n}\n\nexport function createCategoricalDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType<Point[]>,\n) {\n  return function Component(props: deckGLComponentProps) {\n    const {\n      datasource,\n      formData,\n      height,\n      payload,\n      setControlValue,\n      viewport,\n      width,\n    } = props;\n\n    return (\n      <CategoricalDeckGLContainer\n        datasource={datasource}\n        formData={formData}\n        mapboxApiKey={payload.data.mapboxApiKey}\n        setControlValue={setControlValue}\n        viewport={viewport}\n        getLayer={getLayer}\n        payload={payload}\n        getPoints={getPoints}\n        width={width}\n        height={height}\n      />\n    );\n  };\n}\n"],"names":["DEFAULT_COLOR","defaultProps","radiusUnits","radiusScale","type","min","value","radiusMinPixels","radiusMaxPixels","Number","MAX_SAFE_INTEGER","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","stroked","filled","billboard","getPosition","x","position","getRadius","getFillColor","getLineColor","getLineWidth","strokeWidth","deprecatedFor","outline","getColor","ScatterplotLayer","getShaders","super","vs","fs","modules","project32","picking","initializeState","this","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","transition","accessor","instanceRadius","defaultValue","instanceFillColors","props","colorFormat","length","normalized","instanceLineColors","instanceLineWidths","updateState","oldProps","changeFlags","extensionsChanged","_this$state$model","gl","context","state","model","delete","_getModel","invalidateAll","draw","uniforms","viewport","pointRadiusMultiplier","metersPerPixel","lineWidthMultiplier","setUniforms","id","geometry","drawMode","vertexCount","attributes","positions","Float32Array","isInstanced","layerName","StyledLegend","styled","theme","typography","sizes","s","colors","grayscale","light5","gridUnit","light2","base","categoryDelimiter","propTypes","categories","PropTypes","forceCategorical","format","showSingleCategory","toggleCategory","Legend","React","numValue","parseFloat","formatNumber","formatCategoryLabel","k","values","split","render","Object","keys","entries","map","v","style","color","join","icon","enabled","key","href","onClick","onDoubleClick","charAt","METER_TO_MILE","setTooltipContent","formData","verboseMap","o","label","point_radius_fixed","getMetricLabel","className","TooltipRow","t","object","cat_color","metric","getLayer","payload","onAddFilter","setTooltip","datasource","fd","dataWithRadius","data","features","d","radius","unit","point_unit","num","Math","sqrt","PI","multiplier","c","color_picker","r","g","b","a","slice_id","min_radius","max_radius","commonLayerProps","createCategoricalDeckGLComponent","getScale","CategoricalColorNamespace","getPoints","height","mapboxApiKey","setControlValue","width","CategoricalDeckGLContainer","constructor","containerRef","tooltip","current","getStateFromProps","getLayers","bind","onValuesChange","UNSAFE_componentWillReceiveProps","nextProps","form_data","setState","Array","isArray","getStep","timestamps","f","__timestamp","fixedColor","colorFn","color_scheme","forEach","hasOwnProperty","dimension","hexToRGB","sliceId","getCategories","granularity","time_grain_sqla","start","end","disabled","getPlaySliderParams","autozoom","fitViewport","points","zoom","selected","lastClick","addColor","js_data_mutator","sandboxedEval","jsFnMutator","filter","cats","category","categoryState","every","AnimatableDeckGLContainer","ref","mapboxApiAccessToken","mapStyle","mapbox_style","legend_format","legend_position","createDeckGLComponent","Component","layer","computeLayer","onViewportChange","nextFdNoVP","currFdNoVP","DeckGLContainer","layers"],"sourceRoot":""}