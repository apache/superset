{"version":3,"file":"1e09016259948feaa429.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/views/CRUD/annotationlayers/AnnotationLayerModal.tsx","webpack://superset/./src/views/CRUD/annotationlayers/AnnotationLayersList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\n\nimport { AnnotationLayerObject } from './types';\n\ninterface AnnotationLayerModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  layer?: AnnotationLayerObject | null;\n  onLayerAdd?: (layer?: AnnotationLayerObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledAnnotationLayerTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst LayerContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    width: 100%;\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nconst AnnotationLayerModal: FunctionComponent<AnnotationLayerModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onLayerAdd,\n  onHide,\n  show,\n  layer = null,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentLayer, setCurrentLayer] =\n    useState<AnnotationLayerObject | null>();\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const isEditMode = layer !== null;\n\n  // annotation layer fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('annotation_layer'),\n    addDangerToast,\n  );\n\n  const resetLayer = () => {\n    // Reset layer\n    setCurrentLayer({\n      name: '',\n      descr: '',\n    });\n  };\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n\n    // Reset layer\n    resetLayer();\n\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentLayer?.id) {\n        const update_id = currentLayer.id;\n        delete currentLayer.id;\n        delete currentLayer.created_by;\n        updateResource(update_id, currentLayer).then(response => {\n          if (!response) {\n            return;\n          }\n\n          hide();\n          addSuccessToast(t('Annotation template updated'));\n        });\n      }\n    } else if (currentLayer) {\n      // Create\n      createResource(currentLayer).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onLayerAdd) {\n          onLayerAdd(response);\n        }\n\n        hide();\n        addSuccessToast(t('Annotation template created'));\n      });\n    }\n  };\n\n  const onTextChange = (\n    event:\n      | React.ChangeEvent<HTMLTextAreaElement>\n      | React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { target } = event;\n    const data = {\n      ...currentLayer,\n      name: currentLayer ? currentLayer.name : '',\n      descr: currentLayer ? currentLayer.descr : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentLayer(data);\n  };\n\n  const validate = () => {\n    if (currentLayer?.name?.length) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentLayer ||\n        !currentLayer.id ||\n        (layer && layer.id !== currentLayer.id) ||\n        (isHidden && show))\n    ) {\n      if (show && layer && layer.id !== null && !loading) {\n        const id = layer.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentLayer || currentLayer.id || (isHidden && show))\n    ) {\n      // Reset layer\n      resetLayer();\n    }\n  }, [layer, show]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentLayer(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentLayer ? currentLayer.name : '',\n    currentLayer ? currentLayer.descr : '',\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"annotation-layer-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode\n            ? t('Edit annotation layer properties')\n            : t('Add annotation layer')}\n        </h4>\n      }\n    >\n      <StyledAnnotationLayerTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledAnnotationLayerTitle>\n      <LayerContainer>\n        <div className=\"control-label\">\n          {t('Annotation layer name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"name\"\n          onChange={onTextChange}\n          type=\"text\"\n          value={currentLayer?.name}\n        />\n      </LayerContainer>\n      <LayerContainer>\n        <div className=\"control-label\">{t('description')}</div>\n        <textarea\n          name=\"descr\"\n          value={currentLayer?.descr}\n          placeholder={t('Description (this can be seen in the list)')}\n          onChange={onTextChange}\n        />\n      </LayerContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(AnnotationLayerModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/views/components/SubMenu';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport AnnotationLayerModal from './AnnotationLayerModal';\nimport { AnnotationLayerObject } from './types';\n\nconst PAGE_SIZE = 25;\nconst MOMENT_FORMAT = 'MMM DD, YYYY';\n\ninterface AnnotationLayersListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction AnnotationLayersList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: AnnotationLayersListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: layersCount,\n      resourceCollection: layers,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('Annotation layers'),\n    addDangerToast,\n  );\n\n  const [annotationLayerModalOpen, setAnnotationLayerModalOpen] =\n    useState<boolean>(false);\n  const [currentAnnotationLayer, setCurrentAnnotationLayer] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const [layerCurrentlyDeleting, setLayerCurrentlyDeleting] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const handleLayerDelete = ({ id, name }: AnnotationLayerObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setLayerCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkLayerDelete = (layersToDelete: AnnotationLayerObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/?q=${rison.encode(\n        layersToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected layers: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  function handleAnnotationLayerEdit(layer: AnnotationLayerObject | null) {\n    setCurrentAnnotationLayer(layer);\n    setAnnotationLayerModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        Cell: ({\n          row: {\n            original: { id, name },\n          },\n        }: any) => {\n          let hasHistory = true;\n\n          try {\n            useHistory();\n          } catch (err) {\n            // If error is thrown, we know not to use <Link> in render\n            hasHistory = false;\n          }\n\n          if (hasHistory) {\n            return <Link to={`/annotationlayer/${id}/annotation`}>{name}</Link>;\n          }\n\n          return <a href={`/annotationlayer/${id}/annotation`}>{name}</a>;\n        },\n      },\n      {\n        accessor: 'descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on: changedOn },\n          },\n        }: any) => {\n          const date = new Date(changedOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).format(MOMENT_FORMAT);\n        },\n        Header: t('Last modified'),\n        accessor: 'changed_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).format(MOMENT_FORMAT);\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationLayerEdit(original);\n          const handleDelete = () => setLayerCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAnnotationLayerEdit(null);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'annotation_layer',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  const emptyState = {\n    title: t('No annotation layers yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAnnotationLayerEdit(null),\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n      </>\n    ),\n  };\n\n  const onLayerAdd = (id?: number) => {\n    window.location.href = `/annotationlayer/${id}/annotation`;\n  };\n\n  const onModalHide = () => {\n    refreshData();\n    setAnnotationLayerModalOpen(false);\n  };\n\n  return (\n    <>\n      <SubMenu name={t('Annotation layers')} buttons={subMenuButtons} />\n      <AnnotationLayerModal\n        addDangerToast={addDangerToast}\n        layer={currentAnnotationLayer}\n        onLayerAdd={onLayerAdd}\n        onHide={onModalHide}\n        show={annotationLayerModalOpen}\n      />\n      {layerCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the layer.')}\n          onConfirm={() => {\n            if (layerCurrentlyDeleting) {\n              handleLayerDelete(layerCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setLayerCurrentlyDeleting(null)}\n          open\n          title={t('Delete Layer?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected layers?')}\n        onConfirm={handleBulkLayerDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<AnnotationLayerObject>\n              className=\"annotation-layers-list-view\"\n              columns={columns}\n              count={layersCount}\n              data={layers}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              emptyState={emptyState}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationLayersList);\n"],"names":["StyledActions","styled","theme","colors","primary","base","ActionWrapper","grayscale","ActionsBar","actions","className","map","action","index","ActionIcon","Icons","icon","tooltip","id","label","title","placement","key","role","tabIndex","onClick","StyledAnnotationLayerTitle","gridUnit","LayerContainer","error","light2","light1","withToasts","addDangerToast","addSuccessToast","onLayerAdd","onHide","show","layer","disableSave","setDisableSave","useState","currentLayer","setCurrentLayer","isHidden","setIsHidden","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","useSingleViewResource","t","resetLayer","name","descr","hide","onTextChange","event","target","data","value","useEffect","length","Modal","disablePrimaryButton","onHandledPrimaryAction","update_id","created_by","then","response","primaryButtonName","width","css","StyledIcon","onChange","type","placeholder","MOMENT_FORMAT","user","resourceCount","layersCount","resourceCollection","layers","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","useListViewResource","annotationLayerModalOpen","setAnnotationLayerModalOpen","currentAnnotationLayer","setCurrentAnnotationLayer","layerCurrentlyDeleting","setLayerCurrentlyDeleting","canCreate","canEdit","canDelete","handleAnnotationLayerEdit","initialSort","desc","columns","useMemo","accessor","Header","Cell","row","original","hasHistory","useHistory","err","to","href","changed_on","changedOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","moment","format","size","created_on","createdOn","disableSortBy","createdBy","first_name","last_name","filter","item","hidden","subMenuButtons","push","buttonStyle","filters","input","operator","FilterOperator","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","emptyState","image","buttonAction","buttonText","SubMenu","buttons","window","location","DeleteModal","description","onConfirm","SupersetClient","endpoint","handleLayerDelete","open","ConfirmStatusChange","layersToDelete","rison","json","message","confirmDelete","bulkActions","onSelect","ListView","count","pageSize","disableBulkSelect"],"sourceRoot":""}