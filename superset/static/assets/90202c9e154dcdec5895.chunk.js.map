{"version":3,"file":"90202c9e154dcdec5895.chunk.js","mappings":"kPA+Bc,SAAUA,EACtBC,GAEA,MAAM,KACJC,EADI,SAEJC,EAFI,OAGJC,EAHI,MAIJC,EAJI,YAKJC,EALI,iBAMJC,EANI,mBAOJC,EAPI,iBAQJC,EARI,mBASJC,EATI,gBAUJC,EAVI,YAWJC,EAXI,SAYJC,GACEZ,GACE,aAAEa,GAAiBX,GAElBY,EAAOC,IAAYC,EAAAA,EAAAA,UAAQ,MAAWH,EAAAA,EAAgB,IAEvDI,EAAgBH,IACpB,MAAMI,GAAwBC,EAAAA,EAAAA,GAAsBL,GACpDC,EAASG,GACT,MAAME,EAA+B,CAAC,EAClCF,EAAYG,SACdD,EAAcE,iBAAmBJ,EAAY,IAG/Cb,EAAY,CACVe,gBACAT,YAAa,CACXG,MAAOI,EAAYG,OAASH,EAAc,OAH9C,GAQFK,EAAAA,EAAAA,YAAU,KACRN,EAAY,MAACJ,EAAAA,EAAgB,KAA7B,GAGC,CAACW,KAAKC,UAAUZ,MAEnBU,EAAAA,EAAAA,YAAU,KAAK,MACbN,EAAY,SAACN,EAAYG,OAAb,EAAsB,KAAlC,GACC,CAACU,KAAKC,UAAUd,EAAYG,SAE/B,MAAMY,GAAezB,GAAQ,IAAI0B,QAC/BC,GAAOA,EAAIC,QAAUC,EAAAA,EAAAA,WAGjBC,EACmB,IAAvBL,EAAYL,QACRW,EAAAA,EAAAA,GAAE,oBACFC,EAAAA,EAAAA,IAAG,YAAa,aAAcP,EAAYL,OAAQK,EAAYL,QAE9Da,EAA8B,CAAC,EACjCvB,EAAYwB,kBACdD,EAAaE,OACX,QAAC,KAAD,CAAeC,OAAQ1B,EAAY2B,gBAChC3B,EAAYwB,kBAKnB,MAAMI,EAAUb,EAAYc,KACzBZ,IACC,MAAQa,YAAaC,EAAYC,aAAcC,GAAgBhB,EAC/D,MAAO,CACLiB,MAAK,MAAED,EAAAA,EAAeF,EACtB5B,MAAO4B,EAFT,IAOJ,OACE,QAAC,KAAD,CAAmBvC,OAAQA,EAAQC,MAAOA,IACxC,QAAC,KAAD,KACEkC,eAAgB3B,EAAY2B,gBACxBJ,IAEJ,QAAC,KAAD,CACEY,YAAU,EACVhC,MAAOA,EACPiC,YAAahB,EAEbiB,SAAU/B,EACVgC,OAAQxC,EACRyC,QAAS1C,EACT2C,aAAc7C,EACd8C,aAAc7C,EACd8C,IAAKzC,EACL2B,QAASA,EACTe,wBAAyB5C,KAKlC,C,+EC3GM,MAAM6C,EAAoBC,EAAAA,GAAAA,GAAmC;gBACnD,IAAD,IAAC,OAAErD,GAAH,SAAgBA,CAAhB;WACJ,IAAD,IAAC,MAAEC,GAAH,SAAeA,CAAf;EAGEqD,GAAiBD,EAAAA,EAAAA,IAAOE,EAAAA,EAAS;;;;EAMjCC,EAAgBH,EAAAA,GAAAA,GAE3B;WACU,IAAD,UAAC,MAAEI,EAAF,OAASvB,EAAS,SAAnB,kBAAiCuB,EAAMC,OAAOxB,SAA9C,EAAiC,EAAsByB,IAAvD","sources":["webpack://superset/./src/filters/components/TimeColumn/TimeColumnFilterPlugin.tsx","webpack://superset/./src/filters/components/common.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ExtraFormData,\n  GenericDataType,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Select } from 'src/components';\nimport { FormItemProps } from 'antd/lib/form';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';\nimport { PluginFilterTimeColumnProps } from './types';\n\nexport default function PluginFilterTimeColumn(\n  props: PluginFilterTimeColumnProps,\n) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    filterState,\n    inputRef,\n  } = props;\n  const { defaultValue } = formData;\n\n  const [value, setValue] = useState<string[]>(defaultValue ?? []);\n\n  const handleChange = (value?: string[] | string | null) => {\n    const resultValue: string[] = ensureIsArray<string>(value);\n    setValue(resultValue);\n    const extraFormData: ExtraFormData = {};\n    if (resultValue.length) {\n      extraFormData.granularity_sqla = resultValue[0];\n    }\n\n    setDataMask({\n      extraFormData,\n      filterState: {\n        value: resultValue.length ? resultValue : null,\n      },\n    });\n  };\n\n  useEffect(() => {\n    handleChange(defaultValue ?? null);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue)]);\n\n  useEffect(() => {\n    handleChange(filterState.value ?? null);\n  }, [JSON.stringify(filterState.value)]);\n\n  const timeColumns = (data || []).filter(\n    row => row.dtype === GenericDataType.TEMPORAL,\n  );\n\n  const placeholderText =\n    timeColumns.length === 0\n      ? t('No time columns')\n      : tn('%s option', '%s options', timeColumns.length, timeColumns.length);\n\n  const formItemData: FormItemProps = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = (\n      <StatusMessage status={filterState.validateStatus}>\n        {filterState.validateMessage}\n      </StatusMessage>\n    );\n  }\n\n  const options = timeColumns.map(\n    (row: { column_name: string; verbose_name: string | null }) => {\n      const { column_name: columnName, verbose_name: verboseName } = row;\n      return {\n        label: verboseName ?? columnName,\n        value: columnName,\n      };\n    },\n  );\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        {...formItemData}\n      >\n        <Select\n          allowClear\n          value={value}\n          placeholder={placeholderText}\n          // @ts-ignore\n          onChange={handleChange}\n          onBlur={unsetFocusedFilter}\n          onFocus={setFocusedFilter}\n          onMouseEnter={setHoveredFilter}\n          onMouseLeave={unsetHoveredFilter}\n          ref={inputRef}\n          options={options}\n          onDropdownVisibleChange={setFilterActive}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport { PluginFilterStylesProps } from './types';\nimport FormItem from '../../components/Form/FormItem';\n\nexport const FilterPluginStyle = styled.div<PluginFilterStylesProps>`\n  min-height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n`;\n\nexport const StyledFormItem = styled(FormItem)`\n  &.ant-row.ant-form-item {\n    margin: 0;\n  }\n`;\n\nexport const StatusMessage = styled.div<{\n  status?: 'error' | 'warning' | 'info';\n}>`\n  color: ${({ theme, status = 'error' }) => theme.colors[status]?.base};\n`;\n"],"names":["PluginFilterTimeColumn","props","data","formData","height","width","setDataMask","setHoveredFilter","unsetHoveredFilter","setFocusedFilter","unsetFocusedFilter","setFilterActive","filterState","inputRef","defaultValue","value","setValue","useState","handleChange","resultValue","ensureIsArray","extraFormData","length","granularity_sqla","useEffect","JSON","stringify","timeColumns","filter","row","dtype","GenericDataType","placeholderText","t","tn","formItemData","validateMessage","extra","status","validateStatus","options","map","column_name","columnName","verbose_name","verboseName","label","allowClear","placeholder","onChange","onBlur","onFocus","onMouseEnter","onMouseLeave","ref","onDropdownVisibleChange","FilterPluginStyle","styled","StyledFormItem","FormItem","StatusMessage","theme","colors","base"],"sourceRoot":""}