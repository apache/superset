{"version":3,"file":"bb83ea894155833b2918.chunk.js","mappings":"kLAsBc,SAAUA,EAAV,GAKC,IALsB,cACnCC,EADmC,OAEnCC,EAFmC,KAGnCC,EAHmC,MAInCC,GACa,EACb,OACE,QAAC,IAAD,CACED,KAAMA,EACND,OAAQA,EACRE,MAAOA,EACPH,cAAeA,GAGpB,C,uGCLD,MAAMI,EAASC,EAAAA,GAAAA,GAA8B;YAChC,IAAD,IAAC,OAAEJ,GAAH,SAAgBA,CAAhB;WACA,IAAD,IAAC,MAAEE,GAAH,SAAeA,CAAf;EAGX,SAASG,EAAT,EAUEC,GAA8B,IAT9B,MACEJ,EADF,OAEEF,EAFF,cAGED,EAHF,cAIEQ,EAJF,gBAKEC,EALF,eAMEC,EAAiB,CAAC,EANpB,KAOER,GAE4B,EAE9B,MAAMS,GAASC,EAAAA,EAAAA,QAAuB,MAClCV,IAEFA,EAAKS,OAASA,GAEhB,MAAME,GAAWD,EAAAA,EAAAA,UACXE,GAAmBC,EAAAA,EAAAA,UACvB,IAAMC,OAAOC,KAAKP,IAAmB,IACrC,CAACA,IAEGQ,GAAoBN,EAAAA,EAAAA,QAAiB,KAE3CO,EAAAA,EAAAA,qBAAoBZ,GAAK,KAAM,CAC7Ba,kBAAmB,IAAMP,EAASQ,aAGpCC,EAAAA,EAAAA,YAAU,KACHX,EAAOU,UACPR,EAASQ,UACZR,EAASQ,SAAUE,EAAAA,EAAAA,IAAKZ,EAAOU,UAGjCL,OAAOQ,QAAQhB,GAAiB,CAAC,GAAGiB,SAAS,IAAmB,YAAlBC,EAAMC,GAAY,EAC9D,SAAAd,EAASQ,UAAT,EAAkBO,IAAIF,GACtB,SAAAb,EAASQ,UAAT,EAAkBQ,GAAGH,EAAMC,EAA3B,IAGFX,OAAOQ,QAAQf,GAAmB,CAAC,GAAGgB,SAAS,IAAmB,YAAlBC,EAAMC,GAAY,EAChE,SAAAd,EAASQ,UAAT,EAAkBS,QAAQF,IAAIF,GAC9B,SAAAb,EAASQ,UAAT,EAAkBS,QAAQD,GAAGH,EAAMC,EAAnC,IAGFd,EAASQ,QAAQU,UAAU/B,GAAe,GAA1C,GACC,CAACA,EAAeQ,EAAeC,KAGlCa,EAAAA,EAAAA,YAAU,KACHT,EAASQ,UACdR,EAASQ,QAAQW,eAAe,CAC9BC,KAAM,WACNC,UAAWhB,EAAkBG,QAAQc,QACnCC,IAAU,IAAAtB,GAAgB,KAAhBA,EAA0BsB,OAGpCtB,EAAiBuB,QACnBxB,EAASQ,QAAQW,eAAe,CAC9BC,KAAM,YACNC,UAAWpB,IAGfI,EAAkBG,QAAUP,EAA5B,GACC,CAACA,IAEJ,MAAMwB,GAAmBC,EAAAA,EAAAA,cACtB,IAAwD,IAAxD,MAAEpC,EAAF,OAASF,GAA+C,EACnDY,EAASQ,SACXR,EAASQ,QAAQmB,OAAO,CAAErC,QAAOF,UAClC,GAEH,IAaF,OATAqB,EAAAA,EAAAA,YAAU,KACRgB,EAAiB,CAAEnC,QAAOF,WACnB,2BAAMY,EAASQ,cAAf,EAAM,EAAkBoB,SAAxB,IACN,KAEHC,EAAAA,EAAAA,kBAAgB,KACdJ,EAAiB,CAAEnC,QAAOF,UAA1B,GACC,CAACE,EAAOF,EAAQqC,KAEZ,QAAClC,EAAD,CAAQG,IAAKI,EAAQV,OAAQA,EAAQE,MAAOA,GACpD,CAED,SAAewC,EAAAA,EAAAA,YAAWrC,E","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/Tree/EchartsTree.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { EchartsProps } from '../types';\nimport Echart from '../components/Echart';\n\nexport default function EchartsGraph({\n  echartOptions,\n  height,\n  refs,\n  width,\n}: EchartsProps) {\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n} from 'react';\nimport { styled } from '@superset-ui/core';\nimport { ECharts, init } from 'echarts';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: React.Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<ECharts>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["EchartsGraph","echartOptions","height","refs","width","Styles","styled","Echart","ref","eventHandlers","zrEventHandlers","selectedValues","divRef","useRef","chartRef","currentSelection","useMemo","Object","keys","previousSelection","useImperativeHandle","getEchartInstance","current","useEffect","init","entries","forEach","name","handler","off","on","getZr","setOption","dispatchAction","type","dataIndex","filter","value","length","handleSizeChange","useCallback","resize","dispose","useLayoutEffect","forwardRef"],"sourceRoot":""}