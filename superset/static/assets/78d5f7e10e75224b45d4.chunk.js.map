{"version":3,"file":"78d5f7e10e75224b45d4.chunk.js","mappings":"8RAIA,MAGMA,EAAO,OAEPC,EAA6B,CACjC,MAAS,KACT,MAAS,KACT,MAAS,MACT,MAAS,OAOX,SAASC,EAAYC,EAAKC,EAAWC,EAAOC,GAC1C,OAAID,IAAUD,EAAUC,OAASC,IAAWF,EAAUE,OAC7CF,GAGTD,EAAII,OAAOD,OAASA,EACpBH,EAAII,OAAOF,MAAQA,EACnBF,EAAIK,UAAU,EAAG,EAAGL,EAAII,OAAOF,MAAOF,EAAII,OAAOD,QACjDH,EAAIM,UAAUL,EAAW,EAAG,EAAGA,EAAUC,MAAOD,EAAUE,OAAQ,EAAG,EAAGD,EAAOC,GACxEH,EAAII,OACb,CAEA,SAASG,EAAUC,GACjB,OAAOA,IAASA,EAAKC,IAAMD,EAAKE,IAClC,CAkBA,SAASC,EAAgBC,EAASC,EAASC,GACzC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,MAAM,KACJP,EAAI,QACJS,GACEJ,EAAQE,GAEZH,EADWL,EAAUC,IACP,IAAKA,EACjBU,EAAGD,EACHE,EAAGL,EAEP,CACF,CAwFe,MAAMM,EACnBC,YAAYC,GAAI,SACdC,EAAW1B,EAAI,QACf2B,EAAU3B,IAEV4B,KAAKH,GAAKA,EACVG,KAAKF,SAAWA,EAChBE,KAAKD,QAAUA,EACfC,KAAKC,aAAe,KACpBD,KAAKE,SAAW,KAChBF,KAAKG,SAAW,KAChBH,KAAKI,iBAAmB,KACxBJ,KAAKK,SAAW,CAAC,EACjBL,KAAKM,cAAgB,EACrBN,KAAKO,cAAe,EACpBP,KAAKQ,SAAW,EAChBR,KAAKS,SAAW,EAChBT,KAAKU,WAAa,EAClBV,KAAKW,QArKc,EAsKnBX,KAAKY,aAvKoB,KAwKzBZ,KAAKa,cAAgB,EACrBb,KAAKc,QAAU,IACjB,CAEAC,WACE,IAAIC,EAEiC,QAApCA,EAAiBhB,KAAKG,gBAAyC,IAAnBa,GAAqCA,EAAeC,QACnG,CAEAC,aACE,OAAOlB,KAAKG,UAAYH,KAAKI,gBAC/B,CAEAe,eAAepC,GACb,MAAMC,EAAKgB,KAAKO,aAAezB,EAAUC,GAAQA,EACjD,OAAOiB,KAAKK,SAASrB,IAAO,CAAC,CAC/B,CAEAoC,UAAS,YACPC,EAAW,YACXC,EAAW,UACXC,EAAS,YACTC,EAAW,KACXC,EAAI,QACJC,IAEIL,IACFrB,KAAKC,aAAeoB,QAGFM,IAAhBL,IACFtB,KAAKO,aAAee,GAGlBI,IACF1B,KAAKE,SAAWwB,GAGdF,IACFxB,KAAKK,SAAWmB,GAGdD,GACFvB,KAAK4B,iBAAiBL,GAGpBvB,KAAKO,eAAiBkB,GAAQC,IAAgC,oBAAbG,WACnD7B,KAAKc,QAAUd,KAAKc,SAAWe,SAASC,cAAc,UAEtD9B,KAAK+B,mBAAmBN,GAE5B,CAEIO,eACF,OAA8B,IAAvBhC,KAAKM,aACd,CAEAsB,iBAAiBL,GACf,IAAIU,EAEkC,QAArCA,EAAkBjC,KAAKG,gBAA0C,IAApB8B,GAAsCA,EAAgBhB,SACpGjB,KAAKG,SAAW,KAChBH,KAAKI,iBAAmBmB,EACxBvB,KAAKF,UACP,CAEAiC,mBAAmBN,GACjB,MAAMS,EAAQC,OAAOC,OA3HlB,SAAsBX,EAAMC,EAASW,GAC1C,IAAKZ,IAASC,EACZ,OAAO,KAGTW,EAAcA,GAAe,CAAC,EAC9B,MAAMH,EAAQ,CAAC,GACT,SACJI,EAAQ,WACRC,IACE,QAAed,GAEnB,IAAK,MAAMe,KAAUF,EAAU,CAC7BC,EAAWE,QACX,MAAM1D,EAAO2C,EAAQc,EAAQD,GACvBvD,EAAKF,EAAUC,GAErB,IAAKA,EACH,MAAM,IAAI2D,MAAM,oBAGlB,IAAK3D,EAAKE,IACR,MAAM,IAAIyD,MAAM,wBAGbR,EAAMlD,IAASqD,EAAYrD,IAAOD,EAAKE,MAAQoD,EAAYrD,GAAIC,MAClEiD,EAAMlD,GAAM,IAAKD,EACf4D,OAAQH,EACRI,YAAaL,EAAWE,OAG9B,CAEA,OAAOP,CACT,CAyFgCW,CAAapB,EAAMzB,KAAKE,SAAUF,KAAKK,WAAa,CAAC,GAEjF,GAAI6B,EAAM3C,OAAS,EAAG,CACpB,MAAM,QACJJ,EAAO,QACPK,EAAO,QACPH,EAAO,UACPyD,EAAS,aACTC,GAtLD,UAAsB,MAC3Bb,EAAK,OACLc,EAAM,QACN7D,EAAU,CAAC,EAAC,QACZK,EAAU,EAAC,QACXH,EAAU,EAAC,UACXyD,EAAY,EAAC,YACbG,IAEA,IAAI7D,EAAU,GAEd,IAAK,IAAIE,EAAI,EAAGA,EAAI4C,EAAM3C,OAAQD,IAAK,CACrC,MAAMP,EAAOmD,EAAM5C,GAGnB,IAAKH,EAFML,EAAUC,IAEH,CAChB,MAAM,OACJL,EAAM,MACND,GACEM,EAEAS,EAAUf,EAAQuE,EAASC,IAC7B/D,EAAgBC,EAASC,EAASC,GAClCG,EAAU,EACVH,EAAUyD,EAAYzD,EAAU2D,EAChCF,EAAY,EACZ1D,EAAU,IAGZA,EAAQ8D,KAAK,CACXnE,OACAS,YAEFA,EAAUA,EAAUf,EAAQuE,EAC5BF,EAAYK,KAAKC,IAAIN,EAAWpE,EAClC,CACF,CAMA,OAJIU,EAAQG,OAAS,GACnBL,EAAgBC,EAASC,EAASC,GAG7B,CACLF,UACA2D,YACAtD,UACAH,UACA4D,cACAF,cAlGkBM,EAkGSP,EAAYzD,EAAU2D,EAjG5CG,KAAKG,IAAI,EAAGH,KAAKI,KAAKJ,KAAKK,KAAKH,OADzC,IAAsBA,CAoGtB,CAqIUI,CAAa,CACfvB,QACAc,OAAQhD,KAAKW,QACbsC,YAAajD,KAAKY,aAClBzB,QAASa,KAAKK,SACdyC,UAAW9C,KAAKU,WAChBlB,QAASQ,KAAKQ,SACdnB,QAASW,KAAKS,WAEhBT,KAAKU,WAAaoC,EAClB9C,KAAKK,SAAWlB,EAChBa,KAAKQ,SAAWhB,EAChBQ,KAAKS,SAAWpB,EAChBW,KAAKa,cAAgBkC,EAEhB/C,KAAKG,WACRH,KAAKG,SAAW,IAAI,IAAUH,KAAKH,GAAI,CACrCpB,MAAOuB,KAAKY,aACZlC,OAAQsB,KAAKa,cACb6C,WAAYrF,KAIZ2B,KAAKG,SAASzB,SAAWsB,KAAKa,gBAChCb,KAAKG,SA7Ob,SAAuBN,EAAI8D,EAASlF,EAAOC,GACzC,MAAMkF,EAAWD,EAAQlF,MACnBoF,EAAYF,EAAQjF,OACpBoF,GAAa,OAAiBH,EAAS,CAC3ClF,QACAC,WAQF,OANA,QAAciF,EAASG,EAAY,CACjCC,QAAS,EACTtF,MAAOmF,EACPlF,OAAQmF,IAEVF,EAAQ1C,SACD6C,CACT,CA+NwBE,CAAchE,KAAKH,GAAIG,KAAKG,SAAUH,KAAKY,aAAcZ,KAAKa,gBAGhFb,KAAKF,WAELE,KAAKiE,WAAW/B,EAClB,CACF,CAEA+B,WAAW/B,GACT,MAAM3D,EAAMyB,KAAKc,QAAQoD,WAAW,MAEpC,IAAK,MAAMnF,KAAQmD,EACjBlC,KAAKM,iBACL,EAAA6D,EAAA,GAAKpF,EAAKE,IAAK,IAAae,KAAKC,cAAcmE,MAAK5F,IAClD,MAAMQ,EAAKF,EAAUC,IACf,EACJU,EAAC,EACDC,EAAC,MACDjB,EAAK,OACLC,GACEsB,KAAKK,SAASrB,GACZyC,EAAOnD,EAAYC,EAAKC,EAAWC,EAAOC,GAEhDsB,KAAKG,SAASkE,gBAAgB,CAC5B5C,OACAhC,IACAC,IACAjB,QACAC,WAGFsB,KAAKG,SAASmE,iBAEdtE,KAAKF,UAAU,IACdyE,OAAMC,IACPxE,KAAKD,QAAQ,CACXd,IAAKF,EAAKE,IACV0D,OAAQ5D,EAAK4D,OACbC,YAAa7D,EAAK6D,YAClBvB,YAAarB,KAAKC,aAClBuE,SACA,IACDC,SAAQ,KACTzE,KAAKM,eAAe,GAG1B,EC3TF,MAAMoE,EAAgB,CAAC,EAAG,EAAG,EAAG,KAC1BC,EAAe,CACnBpD,UAAW,CACTqD,KAAM,QACNC,MAAO,KACPC,OAAO,GAETtD,YAAa,CACXoD,KAAM,SACNC,MAAO,CAAC,EACRC,OAAO,GAETC,UAAW,CACTH,KAAM,SACNC,MAAO,EACPG,IAAK,GAEPC,WAAW,EACXC,UAAW,SACXC,cAAe,CACbP,KAAM,SACNI,IAAK,EACLH,MAAO,GAETO,cAAe,CACbR,KAAM,SACNI,IAAK,EACLH,MAAOQ,OAAOC,kBAEhBC,YAAa,CACXX,KAAM,SACNC,MAAO,IACPG,IAAK,EACL5B,IAAK,GAEPoC,YAAa,CACXZ,KAAM,WACNC,MAAOpF,GAAKA,EAAEgG,UAEhB/D,QAAS,CACPkD,KAAM,WACNC,MAAOpF,GAAKA,EAAEV,MAEhB2G,SAAU,CACRd,KAAM,WACNC,MAAOH,GAETiB,QAAS,CACPf,KAAM,WACNC,MAAO,GAETe,SAAU,CACRhB,KAAM,WACNC,MAAO,GAETgB,eAAgB,CACdjB,KAAM,WACNC,MAAO,CAAC,EAAG,IAEbiB,YAAa,CACXlB,KAAM,WACNC,MAAO,KACPkB,SAAS,EACTC,UAAU,IAGC,MAAMC,UAAkB,IACrCC,aACE,OAAOC,MAAMD,WAAW,CACtBE,GC1EN,u6ED2EMC,GE3EN,8lBF4EMC,QAAS,CAACC,EAAA,EAAWC,EAAA,IAEzB,CAEAC,kBACEzG,KAAK0G,MAAQ,CACXC,YAAa,IAAIhH,EAAYK,KAAK4G,QAAQ/G,GAAI,CAC5CC,SAAUE,KAAK6G,UAAUC,KAAK9G,MAC9BD,QAASC,KAAK+G,SAASD,KAAK9G,SAGPA,KAAKgH,sBACbC,aAAa,CAC5BC,kBAAmB,CACjBC,KAAM,EACNvC,KAAM,KACNwC,KAAMpH,KAAKqH,oBACXC,YAAY,EACZC,SAAU,eAEZC,cAAe,CACbL,KAAM,EACNG,YAAY,EACZC,SAAU,UACVE,aAAc,GAEhBC,gBAAiB,CACfP,KAAM,EACNI,SAAU,UACVI,UAAW3H,KAAK4H,mBAElBC,mBAAoB,CAClBV,KAAM,EACNI,SAAU,UACVI,UAAW3H,KAAK8H,sBAElBC,mBAAoB,CAClBZ,KAAM,EACNvC,KAAM,KACN2C,SAAU,UACVI,UAAW3H,KAAKgI,sBAElBC,eAAgB,CACdd,KAAMnH,KAAKkI,MAAMC,YAAY5I,OAC7BqF,KAAM,KACNwD,YAAY,EACZd,YAAY,EACZC,SAAU,WACVE,aAAc/C,GAEhB2D,eAAgB,CACdlB,KAAM,EACNG,YAAY,EACZC,SAAU,YAEZe,oBAAqB,CACnBnB,KAAM,EACNG,YAAY,EACZC,SAAU,mBAGhB,CAEAgB,aAAY,SACVC,EAAQ,MACRN,EAAK,YACLO,IAEAtC,MAAMoC,YAAY,CAChBL,QACAM,WACAC,gBAEF,MAAMC,EAAmB1I,KAAKgH,uBACxB,UACJzF,EAAS,YACTC,EAAW,KACXC,EAAI,QACJC,GACEwG,GACE,YACJvB,GACE3G,KAAK0G,MACTC,EAAYvF,SAAS,CACnBC,YAAa6G,EAAM7G,cAErB,IAAIsH,GAAqB,EAoCzB,GAnCkBpH,GAAavB,KAAK4I,cAAcC,mBAAmB,cAG/DL,EAASjH,YAAc2G,EAAM3G,WAC/BoF,EAAYvF,SAAS,CACnBG,YACAD,aAAa,IAIbkH,EAAShH,cAAgB0G,EAAM1G,cACjCmF,EAAYvF,SAAS,CACnBI,gBAEFmH,GAAqB,IAGvBhC,EAAYvF,SAAS,CACnBE,aAAa,KAIbmH,EAAYK,aAAeL,EAAYM,wBAA0BN,EAAYM,sBAAsBC,KAAOP,EAAYM,sBAAsBrH,WAC9IiF,EAAYvF,SAAS,CACnBK,OACAC,YAIAiH,IACFD,EAAiBO,WAAW,mBAC5BP,EAAiBO,WAAW,sBAC5BP,EAAiBO,WAAW,uBAG1BR,EAAYS,kBAAmB,CACjC,IAAIC,EAEJ,MAAM,GACJtJ,GACEG,KAAK4G,QACkC,QAA1CuC,EAAoBnJ,KAAK0G,MAAM0C,aAAyC,IAAtBD,GAAwCA,EAAkBlI,SAC7GjB,KAAK0G,MAAM0C,MAAQpJ,KAAKqJ,UAAUxJ,GAClC6I,EAAiBY,eACnB,CACF,CAEItH,eACF,OAAOmE,MAAMnE,UAAYhC,KAAK0G,MAAMC,YAAY3E,QAClD,CAEAuH,gBACEpD,MAAMoD,gBACNvJ,KAAK0G,MAAMC,YAAY5F,UACzB,CAEAyI,MAAK,SACHC,IAEA,MAAM,UACJ1E,EAAS,cACTI,EAAa,cACbC,EAAa,UACbF,EAAS,UACTD,EAAS,YACTM,GACEvF,KAAKkI,OACH,YACJvB,GACE3G,KAAK0G,OACH,SACJgD,GACE1J,KAAK4G,QACH+C,EAAehD,EAAYzF,aAE7ByI,GACF3J,KAAK0G,MAAM0C,MAAMQ,YAAYH,GAAUG,YAAY,CACjDD,eACAE,gBAAiB,CAACF,EAAalL,MAAOkL,EAAajL,QACnDqG,UAAWA,GAA2B,WAAdG,EAAyBwE,EAASI,eAAiB,GAC3E3E,gBACAC,gBACAH,YACAM,gBACCiE,MAEP,CAEAH,UAAUxJ,GAER,OAAO,IAAI,IAAMA,EAAI,IAAKG,KAAKkG,aAC7BlH,GAAIgB,KAAKkI,MAAMlJ,GACf+K,SAAU,IAAI,IAAS,CACrBC,SAAU,EACVC,WAAY,CACVC,UAAW,CACT/C,KAAM,EACNtC,MAAO,IAAIsF,aARD,EAAE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,QAY1CC,aAAa,GAEjB,CAEAvD,YACE7G,KAAKqK,gBACP,CAEAtD,SAASuD,GACP,MAAM,YACJxE,GACE9F,KAAKuK,kBAAkBrC,MAEvBpC,EACFA,EAAYwE,GAEZE,EAAA,QAAUF,EAAI9F,MAAdgG,EAEJ,CAEA5C,kBAAkB7I,GAChB,MAAM0L,EAAOzK,KAAK0G,MAAMC,YAAYxF,eAAepC,GACnD,MAAO,CAAC0L,EAAKhM,MAAQ,EAAIgM,EAAKC,SAAW,EAAGD,EAAK/L,OAAS,EAAI+L,EAAKE,SAAW,EAChF,CAEA3C,qBAAqBjJ,GAEnB,OADgBiB,KAAK0G,MAAMC,YAAYxF,eAAepC,GACvC6L,KAAO,EAAI,CAC5B,CAEA9C,qBAAqB/I,GACnB,MAAM0L,EAAOzK,KAAK0G,MAAMC,YAAYxF,eAAepC,GACnD,MAAO,CAAC0L,EAAKhL,GAAK,EAAGgL,EAAK/K,GAAK,EAAG+K,EAAKhM,OAAS,EAAGgM,EAAK/L,QAAU,EACpE,EAGFuH,EAAU4E,UAAY,YACtB5E,EAAUtB,aAAeA,E,eG7SzB,MCIMmG,EAAc,GAcL,MAAMC,UAAuB9E,EAC1CC,aACE,MAAO,IAAKC,MAAMD,aAChBG,GDrBN,skCCuBE,CAEAI,kBACEN,MAAMM,kBACmBzG,KAAKgH,sBACbC,aAAa,CAC5BS,gBAAiB,CACfP,KAAM,EACNI,SAAU,kBAEZyD,sBAAuB,CACrBpG,KAAM,KACNuC,KAAM,EACNI,SAAU,CAAC/E,GACTC,QACAwI,OAAQpG,KACJ7E,KAAKkL,mBAAmBzI,EAAOoC,KAG3C,CAEA0D,YAAY4C,GACVhF,MAAMoC,YAAY4C,GAClB,MAAM,MACJjD,EAAK,SACLM,GACE2C,EACJ,IAAI,aACFC,GACElD,EAEAkD,IAAiB5C,EAAS4C,eAC5BA,EAAeA,EAAaC,KAAI5L,GAAKA,EAAI,MACzC2L,EAAa,GAAK/F,OAAOiG,SAASF,EAAa,IAAMA,EAAa,GAAK,EACvEpL,KAAKuL,SAAS,CACZH,mBAIClD,EAAMsD,KAAOtD,EAAMuD,cACtBjB,EAAA,OAAS,GAAGkB,OAAO1L,KAAKhB,GAAI,oDAA5BwL,EAEJ,CAEAhB,KAAK2B,GACH,MAAM,IACJK,EAAG,UACHG,EAAS,aACTF,GACEzL,KAAKkI,OACH,aACJkD,GACEpL,KAAK0G,MACTyE,EAAO1B,SAAW,IAAK0B,EAAO1B,SAC5BzG,OA1EiB,IA2EjB4I,cAAeH,EAAetI,KAAKC,IAAIuI,EA3EtB,KA2EmD,EAAIF,KAAkB,EAC1FI,MAAOF,EACPH,IAAKM,QAAQN,GACbJ,gBAEFjF,MAAMqD,KAAK2B,EACb,CAEAvD,kBAAkB1F,GAChB,OAAOA,EAAQ6J,MAAMC,KAAK9J,GAAOmJ,KAAItM,GAAQoH,MAAMyB,kBAAkB7I,KAAS+L,CAChF,CAEA9C,qBAAqB9F,GACnB,OAAO,CACT,CAEA4F,qBAAqB5F,GACnB,OAAOA,EAAQ6J,MAAMC,KAAK9J,GAAOmJ,KAAItM,GAAQoH,MAAM2B,qBAAqB/I,KAAS+L,CACnF,EAGFC,EAAeF,UAAY,iBAC3BE,EAAepG,aA/FM,CACnBsH,eAAgB,CACdrH,KAAM,WACNC,MAAOpF,GAAKA,EAAEyM,SAEhB3G,YAAa,KACboG,UAAW,GACXF,aAAc,EACdL,aAAc,CACZxG,KAAM,QACNC,MAAO,CAAC,EAAG,EAAG,EAAG,O,wBCdrB,MACMsH,EAAc,GA8CpB,SAASC,EAAaC,EAAMC,EAAYC,EAAUpN,GAChD,IAAIV,EAAQ,EAEZ,IAAK,IAAIa,EAAIgN,EAAYhN,EAAIiN,EAAUjN,IAAK,CAC1C,MAAMkN,EAAYH,EAAK/M,GACvB,IAAImN,EAAa,KACjB,MAAMC,EAAQvN,GAAWA,EAAQqN,GAE7BE,IACFD,EAAaC,EAAMjO,OAGrBA,GAASgO,CACX,CAEA,OAAOhO,CACT,CAEA,SAASkO,EAASN,EAAMC,EAAYC,EAAUK,EAAUpL,EAAayJ,GACnE,IAAI4B,EAAoBP,EACpBQ,EAAgB,EAEpB,IAAK,IAAIxN,EAAIgN,EAAYhN,EAAIiN,EAAUjN,IAAK,CAC1C,MAAMyN,EAAYX,EAAaC,EAAM/M,EAAGA,EAAI,EAAGkC,GAE3CsL,EAAgBC,EAAYH,IAC1BC,EAAoBvN,GACtB2L,EAAO/H,KAAK5D,GAGduN,EAAoBvN,EACpBwN,EAAgB,GAGlBA,GAAiBC,CACnB,CAEA,OAAOD,CACT,CAuCO,SAASE,EAAaX,EAAMY,EAAWL,EAAUpL,EAAa8K,EAAa,EAAGC,QAClE5K,IAAb4K,IACFA,EAAWF,EAAK9M,QAGlB,MAAM2N,EAAS,GAQf,MANkB,cAAdD,EACFN,EAASN,EAAMC,EAAYC,EAAUK,EAAUpL,EAAa0L,GA7ChE,SAAmBb,EAAMC,EAAYC,EAAUK,EAAUpL,EAAayJ,GACpE,IAAI4B,EAAoBP,EACpBa,EAAsBb,EACtBc,EAAoBd,EACpBQ,EAAgB,EAEpB,IAAK,IAAIxN,EAAIgN,EAAYhN,EAAIiN,EAAUjN,IAOrC,GANgB,MAAZ+M,EAAK/M,GACP8N,EAAoB9N,EAAI,EACC,MAAhB+M,EAAK/M,EAAI,IAAcA,EAAI,IAAMiN,IAC1Ca,EAAoB9N,EAAI,GAGtB8N,EAAoBD,EAAqB,CAC3C,IAAIE,EAAajB,EAAaC,EAAMc,EAAqBC,EAAmB5L,GAExEsL,EAAgBO,EAAaT,IAC3BC,EAAoBM,IACtBlC,EAAO/H,KAAKiK,GACZN,EAAoBM,EACpBL,EAAgB,GAGdO,EAAaT,IACfS,EAAaV,EAASN,EAAMc,EAAqBC,EAAmBR,EAAUpL,EAAayJ,GAC3F4B,EAAoB5B,EAAOA,EAAO1L,OAAS,KAI/C4N,EAAsBC,EACtBN,GAAiBO,CACnB,CAIJ,CAYIC,CAAUjB,EAAMC,EAAYC,EAAUK,EAAUpL,EAAa0L,GAGxDA,CACT,CAEA,SAASK,EAAaC,EAAMlB,EAAYC,EAAU/K,EAAaiM,EAAaC,GAC1E,IAAIjO,EAAI,EACJqD,EAAY,EAEhB,IAAK,IAAIxD,EAAIgN,EAAYhN,EAAIiN,EAAUjN,IAAK,CAC1C,MAAMkN,EAAYgB,EAAKlO,GACjBoN,EAAQlL,EAAYgL,GAEtBE,GACG5J,IACHA,EAAY4J,EAAMhO,QAGpB+O,EAAYnO,GAAKG,EAAIiN,EAAMjO,MAAQ,EACnCgB,GAAKiN,EAAMjO,QAEX+L,EAAA,OAAS,sBAAsBkB,OAAOc,EAAW,MAAMd,OAAOc,EAAUmB,YAAY,GAAI,KAAxFnD,GACAiD,EAAYnO,GAAKG,EACjBA,GA9JqB,GAgKzB,CAEAiO,EAAQ,GAAKjO,EACbiO,EAAQ,GAAK5K,CACf,CAEO,SAAS8K,EAAmBC,EAAWC,EAAYb,EAAWL,EAAUpL,GAE7E,MAAMuM,GADNF,EAAY9B,MAAMC,KAAK6B,IACStO,OAC1BE,EAAI,IAAIsM,MAAMgC,GACdrO,EAAI,IAAIqM,MAAMgC,GACdC,EAAW,IAAIjC,MAAMgC,GACrBE,GAAqC,eAAdhB,GAA4C,cAAdA,IAA8B3B,SAASsB,IAAaA,EAAW,EACpHzF,EAAO,CAAC,EAAG,GACXuG,EAAU,GAChB,IAAIQ,EAAe,EACfC,EAAiB,EACjBC,EAAe,EAEnB,IAAK,IAAI9O,EAAI,EAAGA,GAAKyO,EAAezO,IAAK,CACvC,MAAM+O,EAAOR,EAAUvO,GAMvB,GAJa,OAAT+O,GAAiB/O,IAAMyO,IACzBK,EAAe9O,GAGb8O,EAAeD,EAAgB,CACjC,MAAMG,EAAOL,EAAsBjB,EAAaa,EAAWZ,EAAWL,EAAUpL,EAAa2M,EAAgBC,GAAgBjC,EAE7H,IAAK,IAAIoC,EAAW,EAAGA,GAAYD,EAAK/O,OAAQgP,IAAY,CAC1D,MAAMC,EAAwB,IAAbD,EAAiBJ,EAAiBG,EAAKC,EAAW,GAC7DE,EAASF,EAAWD,EAAK/O,OAAS+O,EAAKC,GAAYH,EACzDb,EAAaM,EAAWW,EAAUC,EAAQjN,EAAa/B,EAAGiO,GAE1D,IAAK,IAAIgB,EAAIF,EAAUE,EAAID,EAAQC,IACjChP,EAAEgP,GAAKR,EAAeR,EAAQ,GAAK,EACnCM,EAASU,GAAKhB,EAAQ,GAGxBQ,GAA8BR,EAAQ,GAAKI,EAC3C3G,EAAK,GAAKhE,KAAKC,IAAI+D,EAAK,GAAIuG,EAAQ,GACtC,CAEAS,EAAiBC,CACnB,CAEa,OAATC,IACF5O,EAAE0O,GAAkB,EACpBzO,EAAEyO,GAAkB,EACpBH,EAASG,GAAkB,EAC3BA,IAEJ,CAGA,OADAhH,EAAK,GAAK+G,EACH,CACLzO,IACAC,IACAsO,WACA7G,OAEJ,CChNO,MAAMwH,EAVb,WACE,MAAMC,EAAU,GAEhB,IAAK,IAAItP,EAAI,GAAIA,EAAI,IAAKA,IACxBsP,EAAQ1L,KAAK2L,OAAOC,aAAaxP,IAGnC,OAAOsP,CACT,CAEgCG,GACnBC,EAAsB,oBACtBC,EAAsB,SAS7BC,EAAQ,ICzBC,MACbtP,YAAYuP,EAAQ,GAClBnP,KAAKmP,MAAQA,EACbnP,KAAKoP,OACP,CAEAA,QACEpP,KAAKqP,OAAS,CAAC,EACfrP,KAAKsP,OAAS,EAChB,CAEAC,IAAIC,GACF,MAAM3K,EAAQ7E,KAAKqP,OAAOG,GAQ1B,OANI3K,IACF7E,KAAKyP,aAAaD,GAElBxP,KAAK0P,aAAaF,IAGb3K,CACT,CAEA8K,IAAIH,EAAK3K,GACF7E,KAAKqP,OAAOG,IASfxP,KAAKiB,OAAOuO,GACZxP,KAAKqP,OAAOG,GAAO3K,EAEnB7E,KAAK0P,aAAaF,KAXdrN,OAAOyN,KAAK5P,KAAKqP,QAAQ9P,SAAWS,KAAKmP,OAC3CnP,KAAKiB,OAAOjB,KAAKsP,OAAO,IAG1BtP,KAAKqP,OAAOG,GAAO3K,EAEnB7E,KAAK0P,aAAaF,GAOtB,CAEAvO,OAAOuO,GACSxP,KAAKqP,OAAOG,KAGxBxP,KAAK6P,aAAaL,GAElBxP,KAAKyP,aAAaD,GAEtB,CAEAK,aAAaL,UACJxP,KAAKqP,OAAOG,EACrB,CAEAC,aAAaD,GACX,MAAM/M,EAAQzC,KAAKsP,OAAOQ,WAAUC,GAAKA,IAAMP,IAE3C/M,GAAS,GACXzC,KAAKsP,OAAOU,OAAOvN,EAAO,EAE9B,CAEAiN,aAAaF,GACXxP,KAAKsP,OAAOpM,KAAKsM,EACnB,GDxCkB,GAEdS,EAAc,CAAC,aAAc,aAAc,eAAgB,WAAY,MAAO,SAAU,SAAU,UA2BxG,SAASC,EAAqBC,EAAc3R,GAC1C,IAAK,IAAIc,EAAI,EAAGA,EAAI6Q,EAAa5Q,OAAQD,IACvCd,EAAUiD,KAAK,EAAInC,EAAI,GAAK6Q,EAAa7Q,EAE7C,CAEA,SAAS8Q,EAAa7R,EAAK8R,EAAYC,EAAUC,GAC/ChS,EAAIiS,KAAO,GAAG9E,OAAO6E,EAAY,KAAK7E,OAAO4E,EAAU,OAAO5E,OAAO2E,GACrE9R,EAAIkS,UAAY,OAChBlS,EAAImS,aAAe,WACnBnS,EAAIoS,UAAY,MAClB,CAEe,MAAMC,EACnBhR,cACEI,KAAKkI,MAAQ,CACXmI,WAAYrB,EACZuB,WAAYtB,EACZ4B,aAAclC,EACd2B,SAvD2B,GAwD3BtN,OAvDwB,EAwDxBwI,KAAK,EACLsF,OAxDwB,IAyDxBC,OAxDwB,IA0D1B/Q,KAAKgR,KAAO,KACZhR,KAAKiR,OAAS,IAChB,CAEItN,cACF,OAAO3D,KAAKiR,MACd,CAEI9R,cACF,OAAOa,KAAKiR,QAAUjR,KAAKiR,OAAO9R,OACpC,CAEI+R,YACF,OApEiB,GAqEnB,CAEA9P,SAAS8G,EAAQ,CAAC,GAChB+H,EAAYkB,SAAQC,IACdA,KAAQlJ,IACVlI,KAAKkI,MAAMkJ,GAAQlJ,EAAMkJ,GAC3B,IAEF,MAAMC,EAASrR,KAAKgR,KACpBhR,KAAKgR,KAAOhR,KAAKsR,UACjB,MAAM1C,EA1EV,SAAqBY,EAAKqB,GACxB,MAAMU,EAAkBrC,EAAMK,IAAIC,GAElC,IAAK+B,EACH,OAAOV,EAGT,MAAMW,EAAW,GACXC,EAAgBF,EAAgBpS,QACtC,IAAIuS,EAAgBvP,OAAOyN,KAAK6B,GAChCC,EAAgB,IAAIC,IAAID,GACxB,IAAI9C,EAAUiC,EAWd,OATIjC,aAAmB7C,QACrB6C,EAAU,IAAI+C,IAAI/C,IAGpBA,EAAQuC,SAAQ9C,IACTqD,EAAcE,IAAIvD,IACrBmD,EAAStO,KAAKmL,EAChB,IAEKmD,CACT,CAmDoBK,CAAY7R,KAAKgR,KAAMhR,KAAKkI,MAAM2I,cAC5CU,EAAkBrC,EAAMK,IAAIvP,KAAKgR,MAEvC,GAAIO,GAAsC,IAAnB3C,EAAQrP,OAK7B,YAJIS,KAAKgR,OAASK,IAChBrR,KAAKiR,OAASM,IAMlB,MAAMO,EAAY9R,KAAK+R,mBAAmB/R,KAAKgR,KAAMpC,EAAS2C,GAE9DvR,KAAKiR,OAASa,EACd5C,EAAMS,IAAI3P,KAAKgR,KAAMc,EACvB,CAEAC,mBAAmBvC,EAAKqB,EAAcU,GACpC,MAAM,WACJlB,EAAU,WACVE,EAAU,SACVD,EAAQ,OACRtN,EAAM,IACNwI,EAAG,OACHuF,EAAM,OACND,GACE9Q,KAAKkI,MACT,IAAIvJ,EAAS4S,GAAmBA,EAAgB9P,KAE3C9C,IACHA,EAASkD,SAASC,cAAc,UAChCnD,EAAOF,MAhHY,MAmHrB,MAAMF,EAAMI,EAAOuF,WAAW,MAC9BkM,EAAa7R,EAAK8R,EAAYC,EAAUC,GACxC,MAAM,QACJpR,EAAO,aACP4D,EAAY,QACZvD,EAAO,QACPH,GDxIC,UAAsB,aAC3BwR,EAAY,aACZmB,EAAY,WACZC,EAAU,OACVjP,EAAM,eACNkP,EAAc,QACd/S,EAAU,CAAC,EAAC,QACZK,EAAU,EAAC,QACXH,EAAU,IAEV,IAAI8S,EAAM,EACN1S,EAAID,EACJF,EAAI,EAER,IAAK,MAAM+O,KAAQwC,EACjB,IAAK1R,EAAQkP,GAAO,CAClB,MAAM5P,EAAQuT,EAAa3D,EAAM/O,KAE7BG,EAAIhB,EAAiB,EAATuE,EAAakP,IAC3BzS,EAAI,EACJ0S,KAGFhT,EAAQkP,GAAQ,CACd5O,EAAGA,EAAIuD,EACPtD,EAAGL,EAAU8S,GAAOF,EAAsB,EAATjP,GAAcA,EAC/CvE,QACAC,OAAQuT,GAEVxS,GAAKhB,EAAiB,EAATuE,CACf,CAGF,MAAMF,EAAYmP,EAAsB,EAATjP,EAC/B,MAAO,CACL7D,UACAK,QAASC,EACTJ,QAASA,EAAU8S,EAAMrP,EACzBC,cAzCyBM,EAyCEhE,GAAW8S,EAAM,GAAKrP,EAxC5CK,KAAKG,IAAI,EAAGH,KAAKI,KAAKJ,KAAKK,KAAKH,OADlC,IAAsBA,CA2C7B,CCiGQ,CAAa,CACf2O,aAAc3D,GAAQ9P,EAAI6T,YAAY/D,GAAM5P,MAC5CwT,WA1He,IA0HH3B,EACZtN,SACA6N,eACAqB,eA/HmB,QAgIfX,GAAmB,CACrBpS,QAASoS,EAAgBpS,QACzBK,QAAS+R,EAAgB/R,QACzBH,QAASkS,EAAgBlS,WAI7B,GAAIV,EAAOD,SAAWqE,EAAc,CAClC,MAAMvE,EAAYD,EAAI8T,aAAa,EAAG,EAAG1T,EAAOF,MAAOE,EAAOD,QAC9DC,EAAOD,OAASqE,EAChBxE,EAAI+T,aAAa9T,EAAW,EAAG,EACjC,CAIA,GAFA4R,EAAa7R,EAAK8R,EAAYC,EAAUC,GAEpC/E,EAAK,CACP,MAAM+G,EAAU,IAAI,IAAJ,CAAYjC,EAAUtN,EAAQ+N,EAAQD,EAAQT,EAAYE,GACpE/R,EAAYD,EAAI8T,aAAa,EAAG,EAAGE,EAAQpL,KAAMoL,EAAQpL,MAE/D,IAAK,MAAMkH,KAAQwC,EACjBX,EAAqBqC,EAAQ/I,KAAK6E,GAAO7P,GACzCD,EAAI+T,aAAa9T,EAAWW,EAAQkP,GAAM5O,EAAIuD,EAAQ7D,EAAQkP,GAAM3O,EAAIsD,EAE5E,MACE,IAAK,MAAMqL,KAAQwC,EACjBtS,EAAIiU,SAASnE,EAAMlP,EAAQkP,GAAM5O,EAAGN,EAAQkP,GAAM3O,EAxJnC,GAwJuC4Q,GAI1D,MAAO,CACL9Q,UACAH,UACAF,UACAsC,KAAM9C,EACNF,MAAOE,EAAOF,MACdC,OAAQC,EAAOD,OAEnB,CAEA4S,UACE,MAAM,WACJjB,EAAU,WACVE,EAAU,SACVD,EAAQ,OACRtN,EAAM,IACNwI,EAAG,OACHuF,EAAM,OACND,GACE9Q,KAAKkI,MAET,OAAIsD,EACK,GAAGE,OAAO2E,EAAY,KAAK3E,OAAO6E,EAAY,KAAK7E,OAAO4E,EAAU,KAAK5E,OAAO1I,EAAQ,KAAK0I,OAAOqF,EAAQ,KAAKrF,OAAOoF,GAG1H,GAAGpF,OAAO2E,EAAY,KAAK3E,OAAO6E,EAAY,KAAK7E,OAAO4E,EAAU,KAAK5E,OAAO1I,EACzF,EE5MF,MCIM,EAAe,CACnBiC,WAAW,EACXF,UAAW,EACXG,UAAW,SACXC,cAAe,EACfC,cAAeC,OAAOC,iBACtBmN,QAAS,CACP7N,KAAM,QACNC,MAAO,CAAC,EAAG,EAAG,EAAG,IAEnBW,YAAa,CACXZ,KAAM,WACNC,MAAOpF,GAAKA,EAAEgG,UAEhBE,QAAS,CACPf,KAAM,WACNC,MAAO,GAETe,SAAU,CACRhB,KAAM,WACNC,MAAO,GAETgB,eAAgB,CACdjB,KAAM,WACNC,MAAO,CAAC,EAAG,IAEb6N,gBAAiB,CACf9N,KAAM,WACNC,MAAO,CAAC,EAAG,EAAG,EAAG,IAEnB8N,aAAc,CACZ/N,KAAM,WACNC,MAAO,CAAC,EAAG,EAAG,EAAG,MAEnB+N,aAAc,CACZhO,KAAM,WACNC,MAAO,CAAC,EAAG,EAAG,EAAG,MAEnBgO,aAAc,CACZjO,KAAM,WACNC,MAAO,IAGI,MAAMiO,UAA4B,IAC/C5M,aACE,OAAOC,MAAMD,WAAW,CACtBE,GDlDN,i/ECmDMC,GCnDN,8sBDoDMC,QAAS,CAACC,EAAA,EAAWC,EAAA,IAEzB,CAEAC,kBACEzG,KAAKgH,sBAAsBC,aAAa,CACtCC,kBAAmB,CACjBC,KAAM,EACNvC,KAAM,KACNwC,KAAMpH,KAAKqH,oBACXC,YAAY,EACZC,SAAU,eAEZC,cAAe,CACbL,KAAM,EACNG,YAAY,EACZC,SAAU,UACVE,aAAc,GAEhBY,eAAgB,CACdlB,KAAM,EACNG,YAAY,EACZC,SAAU,YAEZwL,cAAe,CACb5L,KAAM,EACNI,SAAU,mBAEZyL,qBAAsB,CACpB7L,KAAM,EACNG,YAAY,EACZC,SAAU,kBAEZ0L,mBAAoB,CAClB9L,KAAM,EACNG,YAAY,EACZc,YAAY,EACZxD,KAAM,KACN2C,SAAU,eACVE,aAAc,CAAC,EAAG,EAAG,EAAG,MAE1ByL,mBAAoB,CAClB/L,KAAM,EACNG,YAAY,EACZc,YAAY,EACZxD,KAAM,KACN2C,SAAU,eACVE,aAAc,CAAC,EAAG,EAAG,EAAG,MAE1B0L,mBAAoB,CAClBhM,KAAM,EACNG,YAAY,EACZC,SAAU,eACVE,aAAc,IAGpB,CAEAc,aAAY,MACVL,EAAK,SACLM,EAAQ,YACRC,IAQA,GANAtC,MAAMoC,YAAY,CAChBL,QACAM,WACAC,gBAGEA,EAAYS,kBAAmB,CACjC,IAAIC,EAEJ,MAAM,GACJtJ,GACEG,KAAK4G,QACkC,QAA1CuC,EAAoBnJ,KAAK0G,MAAM0C,aAAyC,IAAtBD,GAAwCA,EAAkBlI,SAC7GjB,KAAK0G,MAAM0C,MAAQpJ,KAAKqJ,UAAUxJ,GAClCG,KAAKgH,sBAAsBsC,eAC7B,CACF,CAEAE,MAAK,SACHC,IAEA,MAAM,SACJC,GACE1J,KAAK4G,SACH,UACJ3B,EAAS,UACTF,EAAS,UACTG,EAAS,cACTC,EAAa,cACbC,EAAa,aACbyN,GACE7S,KAAKkI,MACT,IAAI,QACFuK,GACEzS,KAAKkI,MACT,MAAMkL,EAAoC,WAAdlO,EAAyBwE,EAASI,eAAiB,EAE3E2I,EAAQlT,OAAS,IACnBkT,EAAU,CAACA,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,KAGzDzS,KAAK0G,MAAM0C,MAAMQ,YAAYH,GAAUG,YAAY,CACjD3E,YACAoO,QAASvH,QAAQ+G,GACjBJ,UACA1N,UAAWA,EAAYqO,EACvBjO,gBACAC,kBACCoE,MACL,CAEAH,UAAUxJ,GAER,OAAO,IAAI,IAAMA,EAAI,IAAKG,KAAKkG,aAC7BlH,GAAIgB,KAAKkI,MAAMlJ,GACf+K,SAAU,IAAI,IAAS,CACrBC,SAAU,EACVsJ,YAAa,EACbrJ,WAAY,CACVC,UAAW,CACT/C,KAAM,EACNtC,MAAO,IAAIsF,aATD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,QAatCC,aAAa,GAEjB,EAGF0I,EAAoBjI,UAAY,sBAChCiI,EAAoBnO,aAAe,EErLnC,MAAM4O,EAAwB,CAC5BjD,SLW+B,GKV/BtN,OLW4B,EKV5BwI,KAAK,EACLuF,OLW4B,GKV5BD,OLS4B,IKR5BnF,UAAW,IAEP6H,EAAc,CAClBC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAEFC,EAAqB,CACzBC,IAAK,EACLC,OAAQ,EACRC,QAAS,GAEL,EAAgB,CAAC,EAAG,EAAG,EAAG,KAE1BC,EAAsB,CAAC,WAAY,SAAU,MAAO,SAAU,UAC9D,EAAe,CACnB/O,WAAW,EACXF,UAAW,EACXG,UAAW,SACXC,cAAe,EACfC,cAAeC,OAAOC,iBACtB2O,YAAY,EACZC,mBAAoB,CAClBtP,KAAM,WACNC,MAAO,CAAC,IAAK,IAAK,IAAK,MAEzBsP,eAAgB,CACdvP,KAAM,WACNC,MAAO,GAETuP,eAAgB,CACdxP,KAAM,WACNC,MAAO,GAETwP,kBAAmB,CACjBzP,KAAM,QACNC,MAAO,CAAC,EAAG,EAAG,EAAG,IAEnBgM,aAAc,CACZjM,KAAM,SACNC,MAAO8J,GAET0B,WAAYrB,EACZuB,WAAYtB,EACZnB,WA/B0B,EAgC1BrC,aAAc,CACZ7G,KAAM,SACNC,MAAO,EACPG,IAAK,GAEPoG,aAAc,CACZxG,KAAM,QACNC,MAAO,GAETyP,aAAc,CAAC,EACfrH,UAAW,aACXL,SAAU,CACRhI,KAAM,SACNC,OAAQ,GAEV0P,QAAS,CACP3P,KAAM,WACNC,MAAOpF,GAAKA,EAAE4M,MAEhB7G,YAAa,CACXZ,KAAM,WACNC,MAAOpF,GAAKA,EAAEgG,UAEhBC,SAAU,CACRd,KAAM,WACNC,MAAO,GAETc,QAAS,CACPf,KAAM,WACNC,MAAO,IAETe,SAAU,CACRhB,KAAM,WACNC,MAAO,GAET2P,cAAe,CACb5P,KAAM,WACNC,MAAO,UAET4P,qBAAsB,CACpB7P,KAAM,WACNC,MAAO,UAETgB,eAAgB,CACdjB,KAAM,WACNC,MAAO,CAAC,EAAG,IAEb6P,gBAAiB,CACfC,cAAe,CAAC,aAAc,wBAGnB,MAAMC,UAAkB,IACrCnO,kBACEzG,KAAK0G,MAAQ,CACXmO,aAAc,EACdC,iBAAkB,IAAIlE,EAE1B,CAEArI,aAAY,MACVL,EAAK,SACLM,EAAQ,YACRC,IAEA,MAAMsM,EAActM,EAAYK,aAAeL,EAAYM,wBAA0BN,EAAYM,sBAAsBC,KAAOP,EAAYM,sBAAsBwL,SAC1JS,EAAkBhV,KAAK0G,MAAMmK,aAE/BkE,GACF/U,KAAKiV,cAGP,MAAMC,EAAcF,IAAoBhV,KAAK0G,MAAMmK,cAAgB7Q,KAAKmV,aAAa3M,EAAUN,GAE3FgN,GACFlV,KAAKoV,iBAAiB5M,EAAUN,IAGbgN,GAAehN,EAAM4F,aAAetF,EAASsF,YAAc5F,EAAM+E,YAAczE,EAASyE,WAAa/E,EAAM0E,WAAapE,EAASoE,WAGpJ5M,KAAKuL,SAAS,CACZsJ,aAAc7U,KAAK0G,MAAMmO,aAAe,GAG9C,CAEAQ,gBAAe,KACbC,IAGA,OADAA,EAAK9S,OAAS8S,EAAK7S,OAAS,EAAIzC,KAAKkI,MAAMzG,KAAK6T,EAAK7S,OAAS,KACvD6S,CACT,CAEAF,iBAAiB5M,EAAUN,GACzB,MAAM,aACJoM,EAAY,WACZjE,EAAU,WACVE,GACErI,GACE,iBACJ4M,EAAgB,aAChBjE,GACE7Q,KAAK0G,MACToO,EAAiB1T,SAAS,IAAKmS,KAC1Be,EACHzD,eACAR,aACAE,cAEJ,CAEA4E,aAAa3M,EAAUN,GACrB,GAAIM,EAAS6H,aAAenI,EAAMmI,YAAc7H,EAAS+H,aAAerI,EAAMqI,WAC5E,OAAO,EAGT,GAAI/H,EAAS8L,eAAiBpM,EAAMoM,aAClC,OAAO,EAGT,MAAMiB,EAAkB/M,EAAS8L,cAAgB,CAAC,EAC5CA,EAAepM,EAAMoM,cAAgB,CAAC,EAC5C,OAAON,EAAoBwB,MAAKpE,GAAQmE,EAAgBnE,KAAUkD,EAAalD,IACjF,CAEA6D,cACE,MAAM,KACJxT,EAAI,aACJoP,GACE7Q,KAAKkI,MACHuN,EAAahU,EAAKwI,YAAcxI,EAAKwI,WAAWsK,QACtD,IAMImB,GANA,QACFnB,GACEvU,KAAKkI,OACL,aACFyN,GACElU,EAEJ,MAAMmU,EAAoC,SAAjB/E,GAA2B,IAAIc,IAExD,GAAI8D,GAAcE,EAAc,CAC9B,MAAM,MACJE,EAAK,eACLC,GNwBD,UAA2B,MAChCjR,EAAK,OACLtF,EAAM,OACNwW,EAAM,OACNC,EAAM,aACNL,EAAY,aACZ9E,IAEA,MAAMoF,EAAkBpR,EAAMqR,kBACxBC,EAAgBJ,EAASA,EAASE,EAAkB,EACpDG,EAAgBJ,EAASA,EAASC,EAAkB,EACpDH,EAAiBH,EAAapW,IAAW4D,KAAKI,MAAMsB,EAAMtF,OAAS6W,GAAiBD,GACpFP,EAAmB/E,GAAgB,IAAIc,IACvCkE,EAAQ,IAAI9J,MAAMxM,GACxB,IAAI8W,EAAQxR,EAEZ,GAAIsR,EAAgB,GAAKC,EAAgB,EAAG,CAC1CC,EAAQ,IAAIxR,EAAMjF,YAAYkW,GAE9B,IAAK,IAAIxW,EAAI,EAAGA,EAAIwW,EAAgBxW,IAClC+W,EAAM/W,GAAKuF,EAAMvF,EAAI6W,EAAgBC,EAEzC,CAEA,IAAK,IAAI3T,EAAQ,EAAGA,EAAQlD,EAAQkD,IAAS,CAC3C,MAAM6J,EAAaqJ,EAAalT,GAC1B8J,EAAWoJ,EAAalT,EAAQ,IAAMqT,EACtCQ,EAAeD,EAAME,SAASjK,EAAYC,GAChDsJ,EAAMpT,GAASoM,OAAO2H,cAAcC,MAAM,KAAMH,GAE5CV,GACFU,EAAanF,QAAQyE,EAAiBc,IAAKd,EAE/C,CAEA,GAAIA,EACF,IAAK,MAAMe,KAAYf,EACrB/E,EAAa6F,IAAI7H,OAAO2H,cAAcG,IAI1C,MAAO,CACLd,QACAC,iBAEJ,CMpEUc,CAAkB,IAAMC,YAAYC,OAAOrB,GAAc,CACzD5Q,MAAO4Q,GACLA,EACJlW,OAAQkC,EAAKlC,OACboW,eACA9E,aAAc+E,IAEhBF,EAAeI,EAEfvB,EAAU,CAACwC,GACTtU,WACIoT,EAAMpT,EACd,KAAO,CACL,MAAM,SACJH,EAAQ,WACRC,IACE,QAAed,GACnBkU,EAAe,CAAC,GAChBD,EAAe,EAEf,IAAK,MAAMlT,KAAUF,EAAU,CAC7BC,EAAWE,QACX,MAAM4J,EAAON,MAAMC,KAAKuI,EAAQ/R,EAAQD,IAAe,IAEnDqT,GACFvJ,EAAK8E,QAAQyE,EAAiBc,IAAKd,GAGrCF,GAAgBrJ,EAAK9M,OACrBoW,EAAazS,KAAKwS,EACpB,CACF,CAEA1V,KAAKuL,SAAS,CACZgJ,UACAoB,eACAD,eACA7E,aAAc+E,GAAoB/E,GAEtC,CAEA6B,gBAAgBlQ,EAAQD,GACtB,MAAMf,EAAcxB,KAAK0G,MAAMoO,iBAAiB3V,SAC1C,QACJoV,GACEvU,KAAK0G,OACH,UACJuG,EAAS,SACTL,EAAQ,WACRkB,EAAU,cACV0G,EAAa,qBACbC,GACEzU,KAAKkI,MACH2F,EAAY0G,EAAQ/R,EAAQD,IAAe,IAE/C4E,MAAO1I,EAAOC,IACZkP,EAAmBC,EAAWC,EAAYb,EAAWL,EAAUpL,GAGnE,MAAO,EAFSgS,EAAqC,mBAAlBgB,EAA+BA,EAAchS,EAAQD,GAAciS,GAEnF,GAAK/V,EAAQ,GADhBmV,EAAmD,mBAAzBa,EAAsCA,EAAqBjS,EAAQD,GAAckS,GAC7E,GAAK/V,EAAS,EAAGD,EAAOC,EACxE,CAEAuN,eAAezJ,EAAQD,GACrB,MAAMf,EAAcxB,KAAK0G,MAAMoO,iBAAiB3V,SAC1C,QACJoV,GACEvU,KAAK0G,OACH,UACJuG,EAAS,SACTL,EAAQ,WACRkB,EAAU,cACV0G,EAAa,qBACbC,GACEzU,KAAKkI,MACH2F,EAAY0G,EAAQ/R,EAAQD,IAAe,IAC3C,EACJ9C,EAAC,EACDC,EAAC,SACDsO,EACA7G,MAAO1I,EAAOC,IACZkP,EAAmBC,EAAWC,EAAYb,EAAWL,EAAUpL,GAC7DkJ,EAAU8I,EAAqC,mBAAlBgB,EAA+BA,EAAchS,EAAQD,GAAciS,GAChG7J,EAAUiJ,EAAmD,mBAAzBa,EAAsCA,EAAqBjS,EAAQD,GAAckS,GACrH1G,EAAgBtO,EAAEF,OAClB2M,EAAU,IAAIH,MAAsB,EAAhBgC,GAC1B,IAAItL,EAAQ,EAEZ,IAAK,IAAInD,EAAI,EAAGA,EAAIyO,EAAezO,IAAK,CACtC,MAAM0X,GAAa,EAAItM,IAAYjM,EAAQuP,EAAS1O,IAAM,EAC1D4M,EAAQzJ,MAAYiI,EAAU,GAAKjM,EAAQ,EAAIuY,EAAYvX,EAAEH,GAC7D4M,EAAQzJ,MAAYkI,EAAU,GAAKjM,EAAS,EAAIgB,EAAEJ,EACpD,CAEA,OAAO4M,CACT,CAEA+K,eACE,MAAM,aACJtB,EAAY,aACZD,EAAY,QACZnB,EACAO,kBAAkB,MAChB5D,EAAK,QACLvN,EAAO,QACPxE,GACD,aACD0V,GACE7U,KAAK0G,OACH,KACJjF,EAAI,UACJyV,EAAS,YACT1R,EAAW,SACXE,EAAQ,QACRC,EAAO,SACPC,EAAQ,eACRC,EAAc,mBACdqO,EAAkB,eAClBC,EAAc,eACdC,EAAc,kBACdC,EAAiB,WACjBJ,EAAU,UACVhP,EAAS,aACTqP,EAAY,aACZ7I,EAAY,aACZL,EAAY,UACZrG,EAAS,UACTG,EAAS,cACTC,EAAa,cACbC,EAAa,YACb+R,EAAW,eACXC,GACEpX,KAAKkI,MACHmP,EAAuBrX,KAAKsX,iBAAiB,aAAcvM,GAC3DwM,EAAuBvX,KAAKsX,iBAAiB,aAAcxE,GACjE,MAAO,CAACmB,GAAc,IAAIsD,EAAqB,CAC7C5E,aAAcuB,EACdtB,aAAcuB,EACdtB,aAAcuB,EACd3B,QAAS4B,EACT7O,cACAG,UACAC,WACAC,iBACAZ,YACAF,UAAWA,EAAY/E,KAAK0G,MAAMoO,iBAAiB5M,MAAMoI,SACzDpL,YACAC,gBACAC,gBACA+R,YAAaA,GAAe,CAC1B3R,YAAa2R,EAAY3R,YACzBI,SAAUuR,EAAYvR,SACtBD,QAASwR,EAAYxR,QACrBgN,aAAcwE,EAAYjD,mBAC1BtB,aAAcuE,EAAYhD,eAC1BtB,aAAcsE,EAAY/C,eAC1BvO,eAAgBsR,EAAYtR,iBAE7B7F,KAAKwX,iBAAiB,CACvBxY,GAAI,aACJoY,eAAgB,CACd5R,YAAa4R,EAAe5R,YAC5BI,SAAUwR,EAAexR,SACzBD,QAASyR,EAAezR,QACxBgN,aAAcyE,EAAelD,mBAC7BtB,aAAcwE,EAAejD,eAC7BtB,aAAcuE,EAAehD,eAC7BvO,eAAgBuR,EAAevR,eAC/B6M,gBAAiB,CACf6B,QAAS6C,EAAe7C,QACxBC,cAAe4C,EAAe5C,cAC9BC,qBAAsB2C,EAAe3C,qBACrCI,mBAGF,CACFpT,KAAMA,EAAKwI,WAAa,CACtB1K,OAAQkC,EAAKlC,OACb0K,WAAYxI,EAAKwI,WAAWgK,YAAc,CAAC,GACzCxS,EACJyV,YACAO,eAAe,EACf/E,gBAAiB1S,KAAK0S,gBAAgB5L,KAAK9G,QACzC,IAAIqX,EAAqB,CAC3B7L,IAAK8I,EAAa9I,IAClBG,UAAWtG,OAAOiG,SAASgJ,EAAa3I,WAAa2I,EAAa3I,UAAY4H,EAAsB5H,UACpGF,eACAL,eACA7J,UAAWoC,EACXnC,YAAarC,EACbqG,cACAE,WACAC,UACAC,WACAC,iBACAZ,YACAF,UAAWA,EAAYmM,EACvBhM,YACAC,cAAeA,EAAgB+L,EAC/B9L,cAAeA,EAAgB8L,EAC/BiG,YAAaA,GAAe,CAC1B3R,YAAa2R,EAAY3R,YACzBI,SAAUuR,EAAYvR,SACtBF,SAAUyR,EAAYzR,SACtBC,QAASwR,EAAYxR,QACrBE,eAAgBsR,EAAYtR,iBAE7B7F,KAAKwX,iBAAiB,CACvBxY,GAAI,aACJoY,eAAgB,CACd1V,QAAS0V,EAAe7C,QACxB/O,YAAa4R,EAAe5R,YAC5BI,SAAUwR,EAAexR,SACzBF,SAAU0R,EAAe1R,SACzBC,QAASyR,EAAezR,QACxBE,eAAgBuR,EAAevR,eAC/BoG,eAAgB,CACdsI,QAAS6C,EAAe7C,QACxBC,cAAe4C,EAAe5C,cAC9BC,qBAAsB2C,EAAe3C,qBACrCI,mBAGF,CACFpT,OACAyV,YACAvB,eACAD,eACAzJ,eAAgBjM,KAAKiM,eAAenF,KAAK9G,MACzC0B,QAAS6S,IAEb,EAGFK,EAAU/J,UAAY,YACtB+J,EAAUjQ,aAAe,E,4BC7alB,MAAM+S,GAAc,CACzBC,OAAQ,CACN/S,KAAM,IACNsD,MAAO,CACL0P,OAAQ,SACRvE,QAAS,UACTwE,mBAAoB,qBACpBC,mBAAoB,qBACpBC,eAAgB,iBAChBC,eAAgB,iBAChBC,qBAAsB,kBACtBC,qBAAsB,kBACtBC,iBAAkB,cAClBC,iBAAkB,cAClBzF,aAAc,eACdC,aAAc,eACdC,aAAc,eACdwF,eAAgB,cAGpBtZ,KAAM,CACJ6F,KAAMqB,EACNiC,MAAO,CACL3G,UAAW,YACXC,YAAa,cACb8W,kBAAmB,gBACnBC,kBAAmB,gBACnBC,cAAe,YACfC,cAAe,YACf/W,QAAS,UACTgX,aAAc,WACdC,aAAc,WACdC,mBAAoB,iBACpBC,YAAa,YAGjBxM,KAAM,CACJzH,KAAMgQ,EACN1M,MAAO,CACL4Q,kBAAmB,gBACnBC,kBAAmB,gBACnBC,cAAe,YACfC,cAAe,YACfC,eAAgB,aAChBC,sBAAuB,oBACvBC,eAAgB,aAChBC,eAAgB,aAChBC,eAAgB,aAChBC,aAAc,WACdC,iBAAkB,eAClBC,iBAAkB,eAClBC,cAAe,YACfC,iBAAkB,eAClBpF,QAAS,UACTqF,aAAc,WACdC,aAAc,WACdC,mBAAoB,iBACpBC,YAAa,UACbvF,cAAe,gBACfwF,yBAA0B,uBAC1BC,uBAAwB,qBACxBC,mBAAoB,iBACpBC,mBAAoB,oBAIbC,GAAa,CACxBxV,KAAM,KACNsD,MAAO,CACL8P,eAAgB,aAChBD,eAAgB,aAChBD,mBAAoB,iBACpBD,mBAAoB,iBACpBwC,iBAAkB,eAClBC,eAAgB,aAChBC,eAAgB,aAChB3H,aAAc,WACdC,aAAc,aAGL2H,GAAgB,CAC3B5V,KAAM,KACNsD,MAAO,CACLuS,SAAU,WACV7C,OAAQ,SACR8C,UAAW,YACXC,eAAgB,iBAChBC,SAAU,WACVC,aAAc,eACdlI,aAAc,eACdC,aAAc,iBAGX,SAASkI,IAAgB,KAC9BlW,EAAI,MACJsD,IAEA,MAAMgF,EAAS,CAAC,EAEhB,IAAK,MAAMsC,KAAOtH,EAChBgF,EAAOsC,GAAO5K,EAAKD,aAAauD,EAAMsH,IAGxC,OAAOtC,CACT,CACO,SAAS6N,GAAaC,EAAO7b,GAClC,MAAM,YACJgY,EAAW,eACXC,GACE4D,EAAM9S,MACJgF,EAAS,CACbkK,eAAgB,CAAC,EACjBD,YAAaA,GAAe,CAC1B3R,YAAa2R,EAAYpN,WAI7B,IAAK,MAAMkR,KAAa9b,EAAS,CAC/B,MAAM+b,EAAY/b,EAAQ8b,GAC1B,IAAIpW,EAAQmW,EAAM9S,MAAM+S,GAEpBA,EAAUE,WAAW,SACvBtW,EAAQmW,EAAMI,oBAAoBvW,GAClCqI,EAAOkK,eAAe8D,GAAa9D,EAAe6D,GAE9C9D,IACFjK,EAAOiK,YAAY+D,GAAa/D,EAAY8D,KAIhD/N,EAAOgO,GAAarW,CACtB,CAEA,OAAOqI,CACT,CCrHO,SAASmO,GAAwBC,EAAUC,EAAaC,EAAY,CAAC,GAC1E,MAAMC,EAAY,CAChBC,cAAe,GACfC,aAAc,GACdC,gBAAiB,GACjBC,uBAAwB,KAEpB,SACJC,EAAW,EAAC,OACZC,EAAST,EAAS/b,QAChBic,EAEJ,IAAK,IAAIQ,EAAeF,EAAUE,EAAeD,EAAQC,IAAgB,CACvE,MAAMC,EAAUX,EAASU,GACzBxR,EAAA,SAAWyR,GAAWA,EAAQlS,SAAU,kCACxC,MAAM,SACJA,GACEkS,EAEJ,GAAsB,uBAAlBlS,EAASnF,KAA+B,CAC1C4F,EAAA,SAAWuB,MAAMmQ,QAAQnS,EAASoS,YAAa,0CAC/C,MAAM,WACJA,GACEpS,EAEJ,IAAK,IAAIzK,EAAI,EAAGA,EAAI6c,EAAW5c,OAAQD,IAErC8c,GADoBD,EAAW7c,GACDmc,EAAWF,EAAaU,EAASD,EAEnE,MACEI,GAAiBrS,EAAU0R,EAAWF,EAAaU,EAASD,EAEhE,CAEA,OAAOP,CACT,CAEA,SAASW,GAAiBrS,EAAU0R,EAAWF,EAAac,EAAeC,GACzE,MAAM,KACJ1X,EAAI,YACJ2X,GACExS,GACE,cACJ2R,EAAa,aACbC,EAAY,gBACZC,EAAe,uBACfC,GACEJ,EAEJ,GAqFK,SAA0B7W,EAAM2X,GACrC,IAAIC,EAAYC,GAAsB7X,GAGtC,IAFA4F,EAAA,SAAWgS,EAAW,wBAAwB9Q,OAAO9G,IAE9C2X,KAAiBC,EAAY,GAClCD,EAAcA,EAAY,GAG5B,OAAOA,GAAelX,OAAOiG,SAASiR,EAAY,GACpD,CA9FOG,CAAiB9X,EAAM2X,GAK5B,OAAQ3X,GACN,IAAK,QACH8W,EAAcxY,KAAKqY,EAAY,CAC7BxR,YACCsS,EAAeC,IAClB,MAEF,IAAK,aACHC,EAAYpL,SAAQwL,IAClBjB,EAAcxY,KAAKqY,EAAY,CAC7BxR,SAAU,CACRnF,KAAM,QACN2X,YAAaI,IAEdN,EAAeC,GAAoB,IAExC,MAEF,IAAK,aACHX,EAAazY,KAAKqY,EAAY,CAC5BxR,YACCsS,EAAeC,IAClB,MAEF,IAAK,kBACHC,EAAYpL,SAAQyL,IAClBjB,EAAazY,KAAKqY,EAAY,CAC5BxR,SAAU,CACRnF,KAAM,aACN2X,YAAaK,IAEdP,EAAeC,GAAoB,IAExC,MAEF,IAAK,UACHV,EAAgB1Y,KAAKqY,EAAY,CAC/BxR,YACCsS,EAAeC,IAClBC,EAAYpL,SAAQyL,IAClBf,EAAuB3Y,KAAKqY,EAAY,CACtCxR,SAAU,CACRnF,KAAM,aACN2X,YAAaK,IAEdP,EAAeC,GAAoB,IAExC,MAEF,IAAK,eACHC,EAAYpL,SAAQ0L,IAClBjB,EAAgB1Y,KAAKqY,EAAY,CAC/BxR,SAAU,CACRnF,KAAM,UACN2X,YAAaM,IAEdR,EAAeC,IAClBO,EAAQ1L,SAAQyL,IACdf,EAAuB3Y,KAAKqY,EAAY,CACtCxR,SAAU,CACRnF,KAAM,aACN2X,YAAaK,IAEdP,EAAeC,GAAoB,GACtC,SApEN9R,EAAA,OAAS,GAAGkB,OAAO9G,EAAM,8BAAzB4F,EA0EJ,CAEA,MAAMiS,GAAwB,CAC5BK,MAAO,EACPC,WAAY,EACZC,WAAY,EACZC,gBAAiB,EACjBC,QAAS,EACTC,aAAc,GC/IhB,SAASC,GAAeC,GACtB,OAAOA,EAAEtT,SAASwS,WACpB,CCPA,MAAM,GAAe,IAAKzB,GAAgBpD,GAAYC,WACjDmD,GAAgBpD,GAAY3Y,SAC5B+b,GAAgBpD,GAAYrL,SAC5ByO,GAAgBV,OAChBU,GAAgBN,IACnBnH,SAAS,EACTuE,QAAQ,EACR6C,UAAU,EACVC,WAAW,EACXnZ,UAAW,CACTqD,KAAM,SACNC,MAAO,MAETrD,YAAa,CACXoD,KAAM,SACNC,MAAO,CAAC,GAEVnD,QAAS,CACPkD,KAAM,WACNC,MAAOwY,GAAKA,EAAEC,WAAWve,MAE3BwV,QAAS,CACP3P,KAAM,WACNC,MAAOwY,GAAKA,EAAEC,WAAWjR,MAE3BkR,UAAW,SACXC,UAAW,CACT7I,cAAe,mBAGJ,MAAM8I,WAAqB,IACxChX,kBACEzG,KAAK0G,MAAQ,CACXgX,WAAY,CAAC,EACbpC,SAAU,CAAC,GAGTtb,KAAKkI,MAAMyV,kBACbnT,EAAA,UAAY,mBAAoB,qBAAhCA,EAEJ,CAEAjC,aAAY,MACVL,EAAK,YACLO,IAEA,IAAKA,EAAYK,YACf,OAGF,MAAM,KACJrH,GACEzB,KAAKkI,MACH0V,EAASnc,GAAQ,WAAYA,GAAQ,aAAcA,GAAQ,UAAWA,EAC5EzB,KAAKuL,SAAS,CACZqS,WAGEA,EACF5d,KAAK6d,mBAAmB,CACtB3V,QACAO,gBAGFzI,KAAK8d,iBAAiB,CACpB5V,QACAO,eAGN,CAEAoV,oBAAmB,MACjB3V,EAAK,YACLO,IAEA,MAAMiV,EDpCH,SAAoCK,EAAe7S,GACxD,MAAMwS,EA3CC,CACLM,OAAQ,CAAC,EACTC,MAAO,CAAC,EACRC,SAAU,CAAC,EACXC,gBAAiB,CAAC,IAwCd,OACJH,EAAM,MACNC,EAAK,SACLC,GACEH,EACEK,EEWD,SAAgCL,EAAe7S,GACpD,MAAMmT,EAAgB,CACpBL,OAAQ,KACRC,MAAO,KACPC,SAAU,MAGZ,IAAK,MAAM1O,KAAO6O,EAAe,CAC/B,MAAMC,EAAaP,EAAcvO,GAAK+O,iBAAiB1Z,MACvDwZ,EAAc7O,GAAO,IAAIgP,kBAAsC,EAApBF,EAAW/e,QACtD,MAAMkf,EAAe,GAErB,IAAK,IAAInf,EAAI,EAAGA,EAAIgf,EAAW/e,OAAQD,IACrC4L,EAAmBoT,EAAWhf,GAAImf,GAClCJ,EAAc7O,GAAS,EAAJlQ,EAAQ,GAAKmf,EAAa,GAC7CJ,EAAc7O,GAAS,EAAJlQ,EAAQ,GAAKmf,EAAa,GAC7CJ,EAAc7O,GAAS,EAAJlQ,EAAQ,GAAKmf,EAAa,EAEjD,CAEA,OAAOJ,CACT,CFhC8BK,CAAuBX,EAAe7S,GAgElE,OA/DAwS,EAAWM,OAAOvc,KAAO,CACvBlC,OAAQye,EAAO9T,UAAUrF,MAAMtF,OAASye,EAAO9T,UAAU/C,KACzD8C,WAAY,CACVzE,YAAawY,EAAO9T,UACpBc,sBAAuB,CACrB7D,KAAM,EACNtC,MAAOuZ,EAAoBJ,SAG/BV,WAAYU,EAAOV,WACnBqB,aAAcX,EAAOW,aACrBL,WAAYN,EAAOM,YAErBZ,EAAWO,MAAMxc,KAAO,CACtBlC,OAAQ0e,EAAMW,YAAY/Z,MAAMtF,OAAS,EACzCoW,aAAcsI,EAAMW,YAAY/Z,MAChCoF,WAAY,CACV4U,QAASZ,EAAM/T,UACfc,sBAAuB,CACrB7D,KAAM,EACNtC,MAAOuZ,EAAoBH,QAG/BX,WAAYW,EAAMX,WAClBqB,aAAcV,EAAMU,aACpBL,WAAYL,EAAMK,YAEpBZ,EAAWO,MAAMa,UAAY,OAC7BpB,EAAWQ,SAASzc,KAAO,CACzBlC,OAAQ2e,EAASa,eAAela,MAAMtF,OAAS,EAC/CoW,aAAcuI,EAASa,eAAela,MACtCoF,WAAY,CACV+U,WAAYd,EAAShU,UACrBmU,cAAe,CACblX,KAAM,EACNtC,MAAOuZ,EAAoBF,WAG/BZ,WAAYY,EAASZ,WACrBqB,aAAcT,EAASS,aACvBL,WAAYJ,EAASI,YAEvBZ,EAAWQ,SAASe,YAAa,EAE7Bf,EAASgB,YACXxB,EAAWQ,SAASzc,KAAKwI,WAAWkV,QAAUjB,EAASgB,UAAUra,OAGnE6Y,EAAWS,gBAAgB1c,KAAO,CAChClC,OAAQ2e,EAASkB,wBAAwBva,MAAMtF,OAAS,EACxDoW,aAAcuI,EAASkB,wBAAwBva,MAC/CoF,WAAY,CACV4U,QAASX,EAAShU,UAClBc,sBAAuB,CACrB7D,KAAM,EACNtC,MAAOuZ,EAAoBF,WAG/BZ,WAAYY,EAASZ,WACrBqB,aAAcT,EAASS,aACvBL,WAAYJ,EAASI,YAEvBZ,EAAWS,gBAAgBW,UAAY,OAChCpB,CACT,CCpCuB2B,CAA2BnX,EAAMzG,KAAMzB,KAAKkL,oBAC/DlL,KAAKuL,SAAS,CACZmS,cAEJ,CAEAI,kBAAiB,MACf5V,EAAK,YACLO,IAEA,MAAM6S,EF1FH,SAA4BgE,GACjC,GAAIvT,MAAMmQ,QAAQoD,GAChB,OAAOA,EAKT,OAFA9U,EAAA,SAAW8U,EAAQ1a,KAAM,8BAEjB0a,EAAQ1a,MACd,IAAK,UACH,MAAO,CAAC0a,GAEV,IAAK,oBAEH,OADA9U,EAAA,SAAWuB,MAAMmQ,QAAQoD,EAAQhE,UAAW,wCACrCgE,EAAQhE,SAEjB,QACE,MAAO,CAAC,CACNvR,SAAUuV,IAGlB,CEsEqBC,CAAmBrX,EAAMzG,MACpC8Z,EAAcvb,KAAKwf,eAAe1Y,KAAK9G,MAC7C,IAAIyf,EAAc,CAAC,EACnB,MAAMC,EAAe,CAAC,EAEtB,GAAI3T,MAAMmQ,QAAQzT,EAAYK,aAAc,CAC1C,MAAM6W,EAAc3f,KAAK0G,MAAM4U,SAE/B,IAAK,MAAM9L,KAAOmQ,EAChBF,EAAYjQ,GAAOmQ,EAAYnQ,GAAKoQ,QACpCF,EAAalQ,GAAO,GAGtB,IAAK,MAAMgM,KAAa/S,EAAYK,YAAa,CAC/C,MAAM+W,EAAkBxE,GAAwBC,EAAUC,EAAaC,GAEvE,IAAK,MAAMhM,KAAOmQ,EAChBD,EAAalQ,GAAKtM,MAAK,OAAe,CACpCzB,KAAMge,EAAYjQ,GAClBsQ,SAAUzC,GAAKA,EAAE0C,SAAStd,MAC1B+Y,YACAwE,QAASH,EAAgBrQ,KAG/B,CACF,MACEiQ,EAAcpE,GAAwBC,EAAUC,GAGlD,MAAMmC,EDzGH,SAAsCpC,EAAUoE,GACrD,MAAMhC,EAbC,CACLM,OAAQ,CAAC,EACTC,MAAO,CAAC,EACRC,SAAU,CAAC,EACXC,gBAAiB,CAAC,IAUd,cACJzC,EAAa,aACbC,EAAY,gBACZC,EAAe,uBACfC,GACEP,EAqBJ,OApBAoC,EAAWM,OAAOvc,KAAOia,EAEzBgC,EAAWM,OAAO9G,UAAYwI,EAAahE,eAAiB,KAAOgE,EAAahE,eAEhFgC,EAAWM,OAAOxY,YAAc4X,GAChCM,EAAWO,MAAMxc,KAAOka,EAExB+B,EAAWO,MAAM/G,UAAYwI,EAAa/D,cAAgB,KAAO+D,EAAa/D,cAE9E+B,EAAWO,MAAMY,QAAUzB,GAC3BM,EAAWQ,SAASzc,KAAOma,EAE3B8B,EAAWQ,SAAShH,UAAYwI,EAAa9D,iBAAmB,KAAO8D,EAAa9D,iBAEpF8B,EAAWQ,SAASc,WAAa5B,GACjCM,EAAWS,gBAAgB1c,KAAOoa,EAElC6B,EAAWS,gBAAgBjH,UAAYwI,EAAa7D,wBAA0B,KAAO6D,EAAa7D,wBAElG6B,EAAWS,gBAAgBU,QAAUzB,GAC9BM,CACT,CC4EuBuC,CAA6BR,EAAaC,GAC7D1f,KAAKuL,SAAS,CACZ+P,SAAUmE,EACVC,eACAhC,cAEJ,CAEAwC,qBAAqB5K,GACnB,MAAM6K,EAAqB,GAAGzU,OAAO1L,KAAKhB,GAAI,YACxCohB,EAAiB9K,EAAK+K,YAAYrhB,GAAGmc,WAAWgF,GAEtD,IAAK,MAAMnF,KAAShb,KAAKsgB,eACnBtF,EAAMhc,GAAGmc,WAAWgF,KAAwBC,GAC9CpF,EAAMuF,oBAAoBjL,EAGhC,CAEAkL,sBACE,MAAM,SACJ/F,EAAQ,UACRC,GACE1a,KAAKkI,OACH,WACJwV,GACE1d,KAAK0G,MACH1H,EAAK,gBACLyhB,EAAmBzgB,KAAK0gB,qBAAqB1hB,EAAI0e,EAAWQ,SAASzc,OAASzB,KAAKsX,iBAAiBtY,EAAIwb,GAAc5V,MAE5H,GAAI6b,EAAkB,CACpB,MAAME,EAAiB5F,GAAa/a,KAAMwa,GAActS,OAClD0Y,EAAenG,GAAYC,EAOjC,OALKkG,UACID,EAAe/N,aAGxB+N,EAAevJ,eAAeyJ,WAAaD,EACpC,IAAIH,EAAiBE,EAAgB3gB,KAAKwX,iBAAiB,CAChExY,KACAoY,eAAgBuJ,EAAevJ,iBAC7BsG,EAAWQ,SACjB,CAEA,OAAO,IACT,CAEA4C,oBACE,MAAM,SACJrG,EAAQ,QACRpH,GACErT,KAAKkI,OACH,WACJwV,GACE1d,KAAK0G,MACHqa,EAAuB,kBACvBC,EAAqB,cACrBC,GAAsBxG,GAAYpH,GAAWrT,KAAK0gB,qBAAqBK,EAAsBrD,EAAWS,gBAAgB1c,OAASzB,KAAKsX,iBAAiByJ,EAAsB3G,GAAWxV,MACxLsc,EAAmBlhB,KAAK0gB,qBAAqBM,EAAoBtD,EAAWO,MAAMxc,OAASzB,KAAKsX,iBAAiB0J,EAAoB5G,GAAWxV,MAEtJ,GAAIqc,GAAsBC,EAAkB,CAC1C,MAAMP,EAAiB5F,GAAa/a,KAAMoa,GAAWlS,OACrD,MAAO,CAAC+Y,GAAsB,IAAIA,EAAmBN,EAAgB3gB,KAAKwX,iBAAiB,CACzFxY,GAAI+hB,EACJ3J,eAAgBuJ,EAAevJ,iBAC7BsG,EAAWS,iBAAkB+C,GAAoB,IAAIA,EAAiBP,EAAgB3gB,KAAKwX,iBAAiB,CAC9GxY,GAAIgiB,EACJ5J,eAAgBuJ,EAAevJ,iBAC7BsG,EAAWO,OACjB,CAEA,OAAO,IACT,CAEAkD,qBACE,MAAM,UACJ5D,GACEvd,KAAKkI,OACH,WACJwV,EAAU,OACVE,GACE5d,KAAK0G,MACT,IAAI,uBACF0a,GACEphB,KAAKkI,OAEJ0V,GAAUvY,OAAOiG,SAAS8V,KAC7BA,EAAyB1D,EAAWM,OAAOvc,KAAKqO,WAAUuR,GAAKA,EAAEtB,SAAStd,QAAU2e,KAGtF,MAAME,EAAQ,IAAI3P,IAAI4L,EAAUgE,MAAM,MAChCC,EAAc,GAEpB,IAAK,MAAM5c,KAAQ0c,EAAO,CACxB,MAAMtiB,EAAK,UAAU0M,OAAO9G,GACtB6c,EAAoB/J,GAAY9S,GAChC8c,EAAcD,GAAqBzhB,KAAK0gB,qBAAqB1hB,EAAI0e,EAAWM,OAAOvc,OAASzB,KAAKsX,iBAAiBtY,EAAIyiB,EAAkB7c,MAE9I,GAAI8c,EAAa,CACf,MAAMf,EAAiB5F,GAAa/a,KAAMyhB,EAAkBvZ,OAC5DsZ,EAAYte,KAAK,IAAIwe,EAAYf,EAAgB3gB,KAAKwX,iBAAiB,CACrExY,KACAoY,eAAgBuJ,EAAevJ,eAC/BgK,2BACE1D,EAAWM,QACjB,CACF,CAEA,OAAOwD,CACT,CAEAvK,eACE,MAAM,SACJwD,GACEza,KAAKkI,MAEHyZ,EAAmB3hB,KAAKwgB,sBAM9B,MAAO,EAAE/F,GAAYkH,EAJF3hB,KAAK8gB,oBAEJ9gB,KAAKmhB,qBAEuC1G,GAAYkH,EAC9E,CAEAvG,oBAAoB7T,GAClB,MAAM,OACJqW,GACE5d,KAAK0G,MAET,OAAKkX,GAA8B,mBAAbrW,EAIf,CAAC/E,EAAQ8S,KACd,MAAM,KACJ7T,EAAI,MACJgB,GACE6S,EACE2G,ECnQL,SAAmCxa,EAAMgB,GAC9C,IAAKhB,EACH,OAAO,KAGT,MAAMua,EAAe,iBAAkBva,EAAOA,EAAKkU,aAAalT,GAASA,EACnEmf,EAAgBngB,EAAK6c,WAAWzZ,MAAMmX,GAE5C,OAAsB,IAAlBA,EAON,SAA+Bva,EAAMogB,EAAiBC,GACpD,MAAM7F,EAAU,CACdqB,WAAY,IAAK7b,EAAK6b,WAAWuE,KAInC,IAAK,MAAMzQ,KAAQ3P,EAAKkd,aACtB1C,EAAQqB,WAAWlM,GAAQ3P,EAAKkd,aAAavN,GAAMvM,MAAMid,GAG3D,OAAO7F,CACT,CAjBW8F,CAAsBtgB,EAAMmgB,EAAe5F,GAG7C,IACT,CDsPsBgG,CAA0BvgB,EAAMgB,GAChD,OAAO8E,EAAS0U,EAAS3G,EAAK,EATvBnP,MAAMiV,oBAAoB7T,EAWrC,EAGFkW,GAAa5S,UAAY,eACzB4S,GAAa9Y,aAAe,E,0GE3Q5B,MCIMD,EAAgB,CAAC,EAAG,EAAG,EAAG,KAC1BC,EAAe,CACnBsd,YAAa,SACbC,YAAa,CACXtd,KAAM,SACNI,IAAK,EACLH,MAAO,GAETsd,gBAAiB,CACfvd,KAAM,SACNI,IAAK,EACLH,MAAO,GAETud,gBAAiB,CACfxd,KAAM,SACNI,IAAK,EACLH,MAAOQ,OAAOC,kBAEhB0S,eAAgB,SAChBD,eAAgB,CACdnT,KAAM,SACNI,IAAK,EACLH,MAAO,GAETiT,mBAAoB,CAClBlT,KAAM,SACNI,IAAK,EACLH,MAAO,GAETgT,mBAAoB,CAClBjT,KAAM,SACNI,IAAK,EACLH,MAAOQ,OAAOC,kBAEhB+N,SAAS,EACTuE,QAAQ,EACR3S,WAAW,EACXO,YAAa,CACXZ,KAAM,WACNC,MAAOpF,GAAKA,EAAEgG,UAEhB+X,UAAW,CACT5Y,KAAM,WACNC,MAAO,GAET8N,aAAc,CACZ/N,KAAM,WACNC,MAAOH,GAETkO,aAAc,CACZhO,KAAM,WACNC,MAAOH,GAETmO,aAAc,CACZjO,KAAM,WACNC,MAAO,GAETwd,YAAa,CACX1N,cAAe,gBAEjB2N,QAAS,CACP3N,cAAe,WAEjBjP,SAAU,CACRiP,cAAe,CAAC,eAAgB,kBAGrB,MAAM4N,UAAyB,IAC5Crc,aACE,OAAOC,MAAMD,WAAW,CACtBE,GD1EN,+rEC2EMC,GC3EN,q/BD4EMC,QAAS,CAACC,EAAA,EAAWC,EAAA,IAEzB,CAEAC,kBACEzG,KAAKgH,sBAAsBC,aAAa,CACtCC,kBAAmB,CACjBC,KAAM,EACNvC,KAAM,KACNwC,KAAMpH,KAAKqH,oBACXC,YAAY,EACZC,SAAU,eAEZib,eAAgB,CACdrb,KAAM,EACNG,YAAY,EACZC,SAAU,YACVE,aAAc,GAEhBwL,mBAAoB,CAClB9L,KAAMnH,KAAKkI,MAAMC,YAAY5I,OAC7B+H,YAAY,EACZc,YAAY,EACZxD,KAAM,KACN2C,SAAU,eACVE,aAAc,CAAC,EAAG,EAAG,EAAG,MAE1ByL,mBAAoB,CAClB/L,KAAMnH,KAAKkI,MAAMC,YAAY5I,OAC7B+H,YAAY,EACZc,YAAY,EACZxD,KAAM,KACN2C,SAAU,eACVE,aAAc,CAAC,EAAG,EAAG,EAAG,MAE1B0L,mBAAoB,CAClBhM,KAAM,EACNG,YAAY,EACZC,SAAU,eACVE,aAAc,IAGpB,CAEAc,aAAY,MACVL,EAAK,SACLM,EAAQ,YACRC,IAQA,GANAtC,MAAMoC,YAAY,CAChBL,QACAM,WACAC,gBAGEA,EAAYS,kBAAmB,CACjC,IAAIC,EAEJ,MAAM,GACJtJ,GACEG,KAAK4G,QACkC,QAA1CuC,EAAoBnJ,KAAK0G,MAAM0C,aAAyC,IAAtBD,GAAwCA,EAAkBlI,SAC7GjB,KAAK0G,MAAM0C,MAAQpJ,KAAKqJ,UAAUxJ,GAClCG,KAAKgH,sBAAsBsC,eAC7B,CACF,CAEAE,MAAK,SACHC,IAEA,MAAM,SACJC,GACE1J,KAAK4G,SACH,YACJqb,EAAW,YACXC,EAAW,gBACXC,EAAe,gBACfC,EAAe,QACf/O,EAAO,OACPuE,EAAM,UACN3S,EAAS,eACT+S,EAAc,eACdD,EAAc,mBACdD,EAAkB,mBAClBD,GACE7X,KAAKkI,MACHua,EAAwC,WAAhBR,EAA2BvY,EAASI,eAAiB,EAC7E4Y,EAAyC,WAAnB1K,EAA8BtO,EAASI,eAAiB,EACpF9J,KAAK0G,MAAM0C,MAAMQ,YAAYH,GAAUG,YAAY,CACjDyJ,QAASA,EAAU,EAAI,EACvBuE,SACA3S,YACAid,YAAaA,EAAcO,EAC3BN,kBACAC,kBACArK,eAAgBA,EAAiB2K,EACjC5K,qBACAD,uBACCrO,MACL,CAEAH,UAAUxJ,GAER,OAAO,IAAI,IAAMA,EAAI,IAAKG,KAAKkG,aAC7BlH,GAAIgB,KAAKkI,MAAMlJ,GACf+K,SAAU,IAAI,IAAS,CACrBC,SAAU,EACVsJ,YAAa,EACbrJ,WAAY,CACVC,UAAW,CACT/C,KAAM,EACNtC,MAAO,IAAIsF,aATD,EAAE,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,QAatDC,aAAa,GAEjB,EAGFmY,EAAiB1X,UAAY,mBAC7B0X,EAAiB5d,aAAeA,C,YEnMhC,SAASge,EAAOC,GACZ,KAAM5iB,gBAAgB2iB,GAClB,OAAO,IAAIA,EAAOC,GAEtB5iB,KAAK6iB,MAAQD,GAAQ,CAACE,IAAUA,KAAU,KAAW,KACrD9iB,KAAK+iB,SAAWH,CACpB,CARAI,EAAOC,QAAUN,EAUjBA,EAAOO,UAAUC,QAAU,SAASC,GAMhC,OALApjB,KAAK+iB,QAAS,EACd/iB,KAAK6iB,MAAM,GAAK1f,KAAK6B,IAAIhF,KAAK6iB,MAAM,GAAIO,EAAG,IAC3CpjB,KAAK6iB,MAAM,GAAK1f,KAAK6B,IAAIhF,KAAK6iB,MAAM,GAAIO,EAAG,IAC3CpjB,KAAK6iB,MAAM,GAAK1f,KAAKC,IAAIpD,KAAK6iB,MAAM,GAAIO,EAAG,IAC3CpjB,KAAK6iB,MAAM,GAAK1f,KAAKC,IAAIpD,KAAK6iB,MAAM,GAAIO,EAAG,IACpCpjB,IACX,EAEA2iB,EAAOO,UAAUG,OAAS,SAAStM,GAC/B,IAAIuM,EAEJ,OAD2BA,EAAvBvM,aAAa4L,EAAkB5L,EAAE6L,OAAyB7L,EACvD/W,KAAK6iB,MAAM,IAAMS,EAAM,IAC1BtjB,KAAK6iB,MAAM,IAAMS,EAAM,IACvBtjB,KAAK6iB,MAAM,IAAMS,EAAM,IACvBtjB,KAAK6iB,MAAM,IAAMS,EAAM,EAC/B,EAEAX,EAAOO,UAAUpP,OAAS,SAASiD,GAC/B,OAAK/W,KAAK+iB,OACH,EACF/iB,KAAK6iB,MAAM,GAAK7iB,KAAK6iB,MAAM,IAAM,GACjC7iB,KAAK6iB,MAAM,GAAK7iB,KAAK6iB,MAAM,IAAM,GAHb,IAI7B,EAEAF,EAAOO,UAAUK,MAAQ,SAASxM,GAE9B,IAAIuM,EAMJ,OAPAtjB,KAAK+iB,QAAS,EAEaO,EAAvBvM,aAAa4L,EAAkB5L,EAAE6L,OAAyB7L,EAC9D/W,KAAK6iB,MAAM,GAAK1f,KAAK6B,IAAIhF,KAAK6iB,MAAM,GAAIS,EAAM,IAC9CtjB,KAAK6iB,MAAM,GAAK1f,KAAK6B,IAAIhF,KAAK6iB,MAAM,GAAIS,EAAM,IAC9CtjB,KAAK6iB,MAAM,GAAK1f,KAAKC,IAAIpD,KAAK6iB,MAAM,GAAIS,EAAM,IAC9CtjB,KAAK6iB,MAAM,GAAK1f,KAAKC,IAAIpD,KAAK6iB,MAAM,GAAIS,EAAM,IACvCtjB,IACX,EAEA2iB,EAAOO,UAAUN,KAAO,WACpB,OAAK5iB,KAAK+iB,OACH/iB,KAAK6iB,MADa,IAE7B,EAEAF,EAAOO,UAAUM,SAAW,SAASJ,GACjC,IAAKA,EAAI,OAAOpjB,KAAKyjB,gBACrB,IAAKzjB,KAAK+iB,OAAQ,OAAO,KACzB,IAAIW,EAAMN,EAAG,GAAIO,EAAMP,EAAG,GAC1B,OAAOpjB,KAAK6iB,MAAM,IAAMa,GACpB1jB,KAAK6iB,MAAM,IAAMc,GACjB3jB,KAAK6iB,MAAM,IAAMa,GACjB1jB,KAAK6iB,MAAM,IAAMc,CACzB,EAEAhB,EAAOO,UAAUU,UAAY,SAAS7M,GAClC,OAAK/W,KAAK+iB,QAGiBO,EAAvBvM,aAAa4L,EAAkB5L,EAAE6L,OAAyB7L,IAG5D/W,KAAK6iB,MAAM,GAAKS,EAAM,IACtBtjB,KAAK6iB,MAAM,GAAKS,EAAM,IACtBtjB,KAAK6iB,MAAM,GAAKS,EAAM,IACtBtjB,KAAK6iB,MAAM,GAAKS,EAAM,KATC,KAEzB,IAAIA,CASR,EAEAX,EAAOO,UAAUO,cAAgB,WAC7B,IAAKzjB,KAAK+iB,OAAQ,OAAO,IAAIc,SAAS,gBACtC,IAAIC,EAAO,UACP9jB,KAAK6iB,MAAM,GAAK,cAChB7iB,KAAK6iB,MAAM,GAAK,cAChB7iB,KAAK6iB,MAAM,GAAK,cAChB7iB,KAAK6iB,MAAM,GAAK,WACpB,OAAO,IAAIgB,SAAS,KAAMC,EAC9B,EAEAnB,EAAOO,UAAUrG,QAAU,WACvB,OAAK7c,KAAK+iB,OACH,CACHne,KAAM,UACN2X,YAAa,CACT,CAEI,CAACvc,KAAK6iB,MAAM,GAAI7iB,KAAK6iB,MAAM,IAE3B,CAAC7iB,KAAK6iB,MAAM,GAAI7iB,KAAK6iB,MAAM,IAE3B,CAAC7iB,KAAK6iB,MAAM,GAAI7iB,KAAK6iB,MAAM,IAE3B,CAAC7iB,KAAK6iB,MAAM,GAAI7iB,KAAK6iB,MAAM,IAE3B,CAAC7iB,KAAK6iB,MAAM,GAAI7iB,KAAK6iB,MAAM,OAdd,IAkB7B,C,WCxGAG,EAAOC,QAAU,SAAiBc,GAC9B,OAEA,SAASC,EAASD,GACd,OAAIhY,MAAMmQ,QAAQ6H,IAASA,EAAKxkB,QACT,iBAAZwkB,EAAK,GACL,CAACA,GAELA,EAAKE,QAAO,SAAUC,EAAKC,GAC9B,OAAIpY,MAAMmQ,QAAQiI,IAASpY,MAAMmQ,QAAQiI,EAAK,IACnCD,EAAIxY,OAAOsY,EAASG,KAE3BD,EAAIhhB,KAAKihB,GACFD,EAEf,GAAG,GACP,CAfOF,CAASD,EAgBpB,C,kBCjBA,IAAIK,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,IACzBC,EAAU,EAAQ,MAEhBD,aAA0BR,WAAWQ,EAAiBA,EAAeE,SAE3EvB,EAAOC,QAAU,SAASlM,GACtB,IAAKA,EAAG,MAAO,GACf,IAAI3O,EAAaic,EAAeD,EAAiBrN,IAC7CwF,EAAc,GAKlB,OAJAnU,EAAWkT,SAASnK,SAAQ,SAAS8K,GAC5BA,EAAQlS,WACbwS,EAAcA,EAAY7Q,OAAO4Y,EAAQrI,EAAQlS,SAASwS,cAC9D,IACOA,CACX,C,kBCfA,IAAIiI,EAAgB,EAAQ,OACxBC,EAAW,EAAQ,OACnBC,EAAS,EAAQ,OAEjBC,EAA+B,CAC/BrJ,SAAU,CAAC,qBACXiB,YAAa,CAAC,QAAS,aAAc,aAAc,kBAAmB,UAAW,gBACjFxS,SAAU,CAAC,WACXoS,WAAY,CAAC,uBAGbyI,EAAiBziB,OAAOyN,KAAK+U,GA6BjC,SAASE,EAAU9N,GAGf,IAFA,IAAI+N,EAAMJ,IACNK,EAASP,EAAczN,GAClBzX,EAAI,EAAGA,EAAIylB,EAAOxlB,OAAQD,IAAKwlB,EAAI3B,QAAQ4B,EAAOzlB,IAC3D,OAAOwlB,CACX,CAhCA9B,EAAOC,QAAU,SAASlM,GACtB,OAAO8N,EAAU9N,GAAG6L,MACxB,EAEAI,EAAOC,QAAQpG,QAAU,SAAS9F,GAC9B,OAAO8N,EAAU9N,GAAG8F,SACxB,EAEAmG,EAAOC,QAAQ+B,QAAU,SAASjO,GAC9B,OAAO0N,EAAS1N,GAAG1L,KAAI,SAASxG,GACvBA,GAES+f,EAAepP,MAAK,SAASyP,GACvC,QAAGpgB,EAAMogB,KACmE,IAAjEN,EAA6BM,GAAWC,QAAQrgB,EAAMD,KAGrE,MAGIC,EAAM+d,KAAOiC,EAAUhgB,GAAO+d,OAC9B5iB,KAAKmlB,OAAOtgB,GAGpB,GACJ,C,YCtCAme,EAAOC,QAoBP,SAAmBmC,GACf,IAAKA,IAAOA,EAAGxgB,KAAM,OAAO,KAC5B,IAAIA,EAAO0c,EAAM8D,EAAGxgB,MACpB,OAAKA,EAEQ,aAATA,EACO,CACHA,KAAM,oBACN0W,SAAU,CAAC,CACP1W,KAAM,UACN0Y,WAAY,CAAC,EACbvT,SAAUqb,KAGF,YAATxgB,EACA,CACHA,KAAM,oBACN0W,SAAU,CAAC8J,IAEC,sBAATxgB,EACAwgB,OADJ,EAhBW,IAmBtB,EAxCA,IAAI9D,EAAQ,CACRxE,MAAO,WACPC,WAAY,WACZC,WAAY,WACZC,gBAAiB,WACjBC,QAAS,WACTC,aAAc,WACdkI,mBAAoB,WACpBC,QAAS,UACTC,kBAAmB,oB,yBCTvBvC,EAAOC,QAAUuC,EACjBxC,EAAOC,QAAP,QAAyBuC,EAEzB,IAAIC,EAAM,KAEV,SAASD,EAAQlV,EAAUtN,EAAQ+N,EAAQD,EAAQT,EAAYE,GAC3DvQ,KAAKsQ,SAAWA,GAAY,GAC5BtQ,KAAKgD,YAAoBrB,IAAXqB,EAAuB,EAAIA,EACzChD,KAAK8Q,OAASA,GAAU,IACxB9Q,KAAKqQ,WAAaA,GAAc,aAChCrQ,KAAKuQ,WAAaA,GAAc,SAChCvQ,KAAK+Q,OAASA,GAAU,EAIxB,IAAI5J,EAAOnH,KAAKmH,KAAOnH,KAAKsQ,SAAyB,EAAdtQ,KAAKgD,OAIxC0iB,EAAWve,EAAqB,EAAdnH,KAAKgD,OAE3BhD,KAAKrB,OAASkD,SAASC,cAAc,UACrC9B,KAAKrB,OAAOF,MAAQuB,KAAKrB,OAAOD,OAASyI,EAEzCnH,KAAKzB,IAAMyB,KAAKrB,OAAOuF,WAAW,MAClClE,KAAKzB,IAAIiS,KAAOxQ,KAAKuQ,WAAa,IAAMvQ,KAAKsQ,SAAW,MAAQtQ,KAAKqQ,WAErErQ,KAAKzB,IAAIoS,UAAY,OACrB3Q,KAAKzB,IAAIkS,UAAY,QAGrBzQ,KAAK2lB,UAAY,IAAIC,aAAaF,EAAWA,GAC7C1lB,KAAK6lB,UAAY,IAAID,aAAaF,EAAWA,GAC7C1lB,KAAKqd,EAAI,IAAIuI,aAAaF,GAC1B1lB,KAAK8lB,EAAI,IAAIF,aAAaF,EAAW,GACrC1lB,KAAK+lB,EAAI,IAAIC,YAAYN,GAEzB1lB,KAAKimB,gBAAiEtkB,IAApD3B,KAAKzB,IAAI6T,YAAY,KAAK8T,sBAG5ClmB,KAAK0T,OAASvQ,KAAKgjB,MAAOhf,EAAO,GAAMif,UAAUC,UAAUnB,QAAQ,WAAa,EAAI,IAAM,GAC9F,CAqHA,SAASoB,EAAI7kB,EAAMhD,EAAOC,EAAQ2e,EAAG0I,EAAGD,GACpC,IAAK,IAAIrmB,EAAI,EAAGA,EAAIhB,EAAOgB,IAAK8mB,EAAM9kB,EAAMhC,EAAGhB,EAAOC,EAAQ2e,EAAG0I,EAAGD,GACpE,IAAK,IAAIpmB,EAAI,EAAGA,EAAIhB,EAAQgB,IAAK6mB,EAAM9kB,EAAM/B,EAAIjB,EAAO,EAAGA,EAAO4e,EAAG0I,EAAGD,EAC5E,CAGA,SAASS,EAAMC,EAAMxQ,EAAQD,EAAQxW,EAAQ8d,EAAG0I,EAAGD,GAC/C,IAAIW,EAAGC,EAAGC,EAAGC,EAKb,IAJAb,EAAE,GAAK,EACPD,EAAE,IAAML,EACRK,EAAE,GAAKL,EAEFgB,EAAI,EAAGA,EAAIlnB,EAAQknB,IAAKpJ,EAAEoJ,GAAKD,EAAKxQ,EAASyQ,EAAI1Q,GAEtD,IAAK0Q,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGF,EAAIlnB,EAAQknB,IAAK,CACvC,GACIG,EAAIb,EAAEW,GACNC,GAAKtJ,EAAEoJ,GAAKpJ,EAAEuJ,GAAKH,EAAIA,EAAIG,EAAIA,IAAMH,EAAIG,GAAK,QACzCD,GAAKb,EAAEY,MAAQA,GAAK,GAG7BX,IADAW,GACOD,EACPX,EAAEY,GAAKC,EACPb,EAAEY,EAAI,GAAKjB,CACf,CAEA,IAAKgB,EAAI,EAAGC,EAAI,EAAGD,EAAIlnB,EAAQknB,IAAK,CAChC,KAAOX,EAAEY,EAAI,GAAKD,GAAGC,IACrBE,EAAIb,EAAEW,GACNF,EAAKxQ,EAASyQ,EAAI1Q,GAAUsH,EAAEuJ,IAAMH,EAAIG,IAAMH,EAAIG,EACtD,CACJ,CAhHApB,EAAQtC,UAAU2D,MAAQ,SAAUxY,EAAMyY,GACtC,IAMIroB,EAAOsoB,EAAYroB,EAAQsoB,EAAanT,EAExCoT,EAAQC,EAASC,EAiCjBC,EAzCAC,EAAcrnB,KAAKzB,IAAI6T,YAAY/D,GAGnCiZ,EAAUD,EAAY5oB,MAEtB8oB,EAAe,EAAIvnB,KAAKgD,OAMxB8jB,GAAc9mB,KAAKimB,YAGnBpS,EAAM1Q,KAAKqkB,MAAMH,EAAYI,yBAC7BN,EAAmBnnB,KAAKgD,OAASG,KAAKI,KAAK8jB,EAAYI,yBACvDR,EAASjnB,KAAKgD,OACdkkB,EAAUlnB,KAAKgD,OASfvE,GALAsoB,EAAa5jB,KAAK6B,IAAIhF,KAAKmH,KACvBhE,KAAKI,KAAK8jB,EAAYK,uBAAyBL,EAAYnB,yBAI1CqB,EACrB7oB,GAJAsoB,EAAc7jB,KAAK6B,IAAIhF,KAAKmH,KAAO8f,EAC/B9jB,KAAKI,KAAK8jB,EAAYI,wBAA0BJ,EAAYM,4BAGzCJ,EACvBvnB,KAAKzB,IAAImS,aAAe,eAExBjS,EAAQsoB,EAAa/mB,KAAKmH,KAC1BzI,EAASsoB,EAAchnB,KAAKmH,KAI5B0M,EAAM,GAAK7T,KAAKsQ,SAAW,GAC3B2W,EAASC,EAAU,EACnBC,EAAmBnnB,KAAK0T,OACxB1T,KAAKzB,IAAImS,aAAe,UAIxBqW,GAAcC,IACdhnB,KAAKzB,IAAIK,UAAUsoB,EAASD,EAAQF,EAAYC,GAChDhnB,KAAKzB,IAAIiU,SAASnE,EAAMrO,KAAKgD,OAAQmkB,GACrCC,EAAUpnB,KAAKzB,IAAI8T,aAAa6U,EAASD,EAAQF,EAAYC,IAGjE,IAAI7W,EAAe,IAAIqO,kBAAkB/f,EAAQC,GASjD,OA5FJ,SAAsB0oB,EAAS3oB,EAAOC,EAAQqoB,EAAYC,EAAarB,EAAWE,GAE9EF,EAAUiC,KAAKnC,EAAK,EAAGhnB,EAAQC,GAC/BmnB,EAAU+B,KAAK,EAAG,EAAGnpB,EAAQC,GAI7B,IAFA,IAAIsX,GAAUvX,EAAQsoB,GAAc,EAE3BrnB,EAAI,EAAGA,EAAIsnB,EAAatnB,IAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIsnB,EAAYtnB,IAAK,CACjC,IAAIiP,GAAKhP,EAAIsW,GAAUvX,EAAQgB,EAAIuW,EAC/B6R,EAAIT,EAAQ3lB,KAAK,GAAK/B,EAAIqnB,EAAatnB,GAAK,GAAK,IACrD,GAAU,IAANooB,EACAlC,EAAUjX,GAAK,EACfmX,EAAUnX,GAAK+W,OACZ,GAAU,IAANoC,EACPlC,EAAUjX,GAAK+W,EACfI,EAAUnX,GAAK,MACZ,CACH,IAAIoZ,EAAI3kB,KAAKC,IAAI,EAAG,GAAMykB,GACtBE,EAAI5kB,KAAKC,IAAI,EAAGykB,EAAI,IACxBlC,EAAUjX,GAAKoZ,EAAIA,EACnBjC,EAAUnX,GAAKqZ,EAAIA,CACvB,CACJ,CAER,CA4DIC,CAAaZ,EAAS3oB,EAAOC,EAAQqoB,EAAYC,EAAahnB,KAAK2lB,UAAW3lB,KAAK6lB,WAEnFS,EAAItmB,KAAK2lB,UAAWlnB,EAAOC,EAAQsB,KAAKqd,EAAGrd,KAAK+lB,EAAG/lB,KAAK8lB,GACxDQ,EAAItmB,KAAK6lB,UAAWpnB,EAAOC,EAAQsB,KAAKqd,EAAGrd,KAAK+lB,EAAG/lB,KAAK8lB,GA7D5D,SAAsB3V,EAAc1R,EAAOC,EAAQinB,EAAWE,EAAW9U,EAAQD,GAC7E,IAAK,IAAIxR,EAAI,EAAGA,EAAIb,EAAQC,EAAQY,IAAK,CACrC,IAAI+hB,EAAIle,KAAK8kB,KAAKtC,EAAUrmB,IAAM6D,KAAK8kB,KAAKpC,EAAUvmB,IACtD6Q,EAAa7Q,GAAK6D,KAAKgjB,MAAM,IAAM,KAAO9E,EAAItQ,EAASD,GAC3D,CACJ,CA0DIoX,CAAa/X,EAAc1R,EAAOC,EAAQsB,KAAK2lB,UAAW3lB,KAAK6lB,UAAW7lB,KAAK+Q,OAAQ/Q,KAAK8Q,QAErF,CACHrP,KAAM0O,EACNgY,QAAS,CACL1pB,MAAOsoB,EACProB,OAAQsoB,EACRoB,SAAU3pB,EACV4pB,UAAW3pB,EACXmV,IAAKA,EACLyU,KAAM,EACNhB,QAASA,GAGrB,EAEA9B,EAAQtC,UAAU1Z,KAAO,SAAU6E,GAC/B,OAAOrO,KAAK6mB,MAAMxY,GAAM,GAAO5M,IACnC,EAEA+jB,EAAQtC,UAAUqF,gBAAkB,SAAUla,GAC1C,OAAOrO,KAAK6mB,MAAMxY,GAAM,EAC5B,C,4BC7Je,SAASma,EAAEC,GAAG,OAAOA,GAAGA,EAAE7jB,MAAM,MAAM,IAAI,oBAAoB,OAAO6jB,EAAEnN,SAASmN,EAAEnN,SAAS2I,QAAO,SAASwE,EAAE7B,GAAG,OAAO6B,EAAE/c,OAAO8c,EAAE5B,GAAG,GAAE,IAAI6B,EAAE,IAAI,UAAU,OAAOA,EAAE1e,SAASye,EAAEC,EAAE1e,UAAUsB,KAAI,SAASmd,GAAG,IAAI5B,EAAE,CAAChiB,KAAK,UAAU0Y,WAAWoL,KAAKC,MAAMD,KAAKE,UAAUH,EAAEnL,aAAavT,SAASye,GAAG,YAAO,IAASC,EAAEzpB,KAAK4nB,EAAE5nB,GAAGypB,EAAEzpB,IAAI4nB,CAAC,IAAG,CAAC6B,GAAG,IAAI,aAAa,OAAOA,EAAElM,YAAYlR,KAAI,SAASmd,GAAG,MAAM,CAAC5jB,KAAK,QAAQ2X,YAAYiM,EAAE,IAAG,IAAI,eAAe,OAAOC,EAAElM,YAAYlR,KAAI,SAASmd,GAAG,MAAM,CAAC5jB,KAAK,UAAU2X,YAAYiM,EAAE,IAAG,IAAI,kBAAkB,OAAOC,EAAElM,YAAYlR,KAAI,SAASmd,GAAG,MAAM,CAAC5jB,KAAK,aAAa2X,YAAYiM,EAAE,IAAG,IAAI,qBAAqB,OAAOC,EAAEtM,WAAW9Q,IAAImd,GAAGvE,QAAO,SAASuE,EAAEC,GAAG,OAAOD,EAAE9c,OAAO+c,EAAE,GAAE,IAAI,IAAI,QAAQ,IAAI,UAAU,IAAI,aAAa,MAAM,CAACA,GAAG,C,yCCA/wB,IAAIhE,EAAWzB,EAAOC,QAAU,SAAU4F,GACtC,OAAO,IAAIC,EAASD,EACxB,EAEA,SAASC,EAAUD,GACf7oB,KAAK6E,MAAQgkB,CACjB,CAwGA,SAASE,EAAMC,EAAMC,EAAIC,GACrB,IAAItM,EAAO,GACPuM,EAAU,GACVC,GAAQ,EAEZ,OAAO,SAAUC,EAAQC,GACrB,IAAIC,EAAOL,EAAYM,EAAKF,GAASA,EACjCG,EAAY,CAAC,EAEbC,GAAY,EAEZhjB,EAAQ,CACR6iB,KAAOA,EACPD,MAAQA,EACR1M,KAAO,GAAGlR,OAAOkR,GACjB+M,OAASR,EAAQA,EAAQ5pB,OAAS,GAClC4pB,QAAUA,EACV3Z,IAAMoN,EAAKgD,OAAO,GAAG,GACrBgK,OAAyB,IAAhBhN,EAAKrd,OACdsqB,MAAQjN,EAAKrd,OACbuqB,SAAW,KACX3E,OAAS,SAAU1lB,EAAGsqB,GACbrjB,EAAMkjB,SACPljB,EAAMijB,OAAOJ,KAAK7iB,EAAM8I,KAAO/P,GAEnCiH,EAAM6iB,KAAO9pB,EACTsqB,IAAUL,GAAY,EAC9B,EACA,OAAW,SAAUK,UACVrjB,EAAMijB,OAAOJ,KAAK7iB,EAAM8I,KAC3Bua,IAAUL,GAAY,EAC9B,EACAM,OAAS,SAAUD,GACX7N,EAAQxV,EAAMijB,OAAOJ,MACrB7iB,EAAMijB,OAAOJ,KAAKvZ,OAAOtJ,EAAM8I,IAAK,UAG7B9I,EAAMijB,OAAOJ,KAAK7iB,EAAM8I,KAE/Bua,IAAUL,GAAY,EAC9B,EACA9Z,KAAO,KACPqa,OAAS,SAAU5M,GAAKoM,EAAUQ,OAAS5M,CAAE,EAC7C6M,MAAQ,SAAU7M,GAAKoM,EAAUS,MAAQ7M,CAAE,EAC3C8M,IAAM,SAAU9M,GAAKoM,EAAUU,IAAM9M,CAAE,EACvC+M,KAAO,SAAU/M,GAAKoM,EAAUW,KAAO/M,CAAE,EACzCgN,KAAO,WAAcjB,GAAQ,CAAM,EACnCkB,MAAQ,WAAcZ,GAAY,CAAM,GAG5C,IAAKN,EAAO,OAAO1iB,EAEnB,SAAS6B,IACL,GAA0B,iBAAf7B,EAAM6iB,MAAoC,OAAf7iB,EAAM6iB,KAAe,CAClD7iB,EAAMkJ,MAAQlJ,EAAM4iB,QAAU5iB,EAAM6iB,OACrC7iB,EAAMkJ,KAAO2a,EAAW7jB,EAAM6iB,OAGlC7iB,EAAM8jB,OAA8B,GAArB9jB,EAAMkJ,KAAKrQ,OAE1B,IAAK,IAAID,EAAI,EAAGA,EAAI6pB,EAAQ5pB,OAAQD,IAChC,GAAI6pB,EAAQ7pB,GAAGgqB,QAAUA,EAAO,CAC5B5iB,EAAMojB,SAAWX,EAAQ7pB,GACzB,KACJ,CAER,MAEIoH,EAAM8jB,QAAS,EACf9jB,EAAMkJ,KAAO,KAGjBlJ,EAAM+jB,SAAW/jB,EAAM8jB,OACvB9jB,EAAMgkB,SAAWhkB,EAAMkjB,MAC3B,CAEArhB,IAGA,IAAIoiB,EAAM1B,EAAG2B,KAAKlkB,EAAOA,EAAM6iB,MAK/B,YAJY5nB,IAARgpB,GAAqBjkB,EAAMye,QAAQze,EAAMye,OAAOwF,GAEhDlB,EAAUQ,QAAQR,EAAUQ,OAAOW,KAAKlkB,EAAOA,EAAM6iB,MAEpDG,GAEoB,iBAAdhjB,EAAM6iB,MACC,OAAf7iB,EAAM6iB,MAAkB7iB,EAAMojB,WAC7BX,EAAQjmB,KAAKwD,GAEb6B,IAEA4I,EAAQzK,EAAMkJ,MAAM,SAAUJ,EAAKlQ,GAC/Bsd,EAAK1Z,KAAKsM,GAENia,EAAUU,KAAKV,EAAUU,IAAIS,KAAKlkB,EAAOA,EAAM6iB,KAAK/Z,GAAMA,GAE9D,IAAIqb,EAAQxB,EAAO3iB,EAAM6iB,KAAK/Z,IAC1B0Z,GAAa4B,EAAeF,KAAKlkB,EAAM6iB,KAAM/Z,KAC7C9I,EAAM6iB,KAAK/Z,GAAOqb,EAAMtB,MAG5BsB,EAAME,OAASzrB,GAAKoH,EAAMkJ,KAAKrQ,OAAS,EACxCsrB,EAAMG,QAAe,GAAL1rB,EAEZmqB,EAAUW,MAAMX,EAAUW,KAAKQ,KAAKlkB,EAAOmkB,GAE/CjO,EAAKqO,KACT,IACA9B,EAAQ8B,OAGRxB,EAAUS,OAAOT,EAAUS,MAAMU,KAAKlkB,EAAOA,EAAM6iB,MAEhD7iB,GA9BgBA,CA+B1B,CA9GM,CA8GJsiB,GAAMO,IACb,CAEA,SAASC,EAAM0B,GACX,GAAmB,iBAARA,GAA4B,OAARA,EAAc,CACzC,IAAIC,EAEJ,GAAIjP,EAAQgP,GACRC,EAAM,QAEL,GAkD+B,kBAAbC,EAlDPF,GACZC,EAAM,IAAIE,KAAKH,EAAII,QAAUJ,EAAII,UAAYJ,QAE5C,GAgDiC,oBAAbE,EAhDPF,GACdC,EAAM,IAAII,OAAOL,QAEhB,GA8Cb,SAAkBrC,GAAO,MAAoB,mBAAbuC,EAAIvC,EAA0B,CA9C7C2C,CAAQN,GACbC,EAAM,CAAEM,QAASP,EAAIO,cAEpB,GA4Cb,SAAoB5C,GAAO,MAAoB,qBAAbuC,EAAIvC,EAA4B,CA5CjD6C,CAAUR,GACfC,EAAM,IAAIrf,QAAQof,QAEjB,GA0Cb,SAAmBrC,GAAO,MAAoB,oBAAbuC,EAAIvC,EAA2B,CA1C/C8C,CAAST,GACdC,EAAM,IAAI9lB,OAAO6lB,QAEhB,GAwCb,SAAmBrC,GAAO,MAAoB,oBAAbuC,EAAIvC,EAA2B,CAxC/C+C,CAASV,GACdC,EAAM,IAAItc,OAAOqc,QAEhB,GAAI/oB,OAAO0pB,QAAU1pB,OAAO2pB,eAC7BX,EAAMhpB,OAAO0pB,OAAO1pB,OAAO2pB,eAAeZ,SAEzC,GAAIA,EAAItrB,cAAgBuC,OACzBgpB,EAAM,CAAC,MAEN,CACD,IAAIY,EACCb,EAAItrB,aAAesrB,EAAItrB,YAAYsjB,WACjCgI,EAAIc,WACJ,CAAC,EAEJC,EAAI,WAAa,EACrBA,EAAE/I,UAAY6I,EACdZ,EAAM,IAAIc,CACd,CAKA,OAHA9a,EAAQoZ,EAAWW,IAAM,SAAU1b,GAC/B2b,EAAI3b,GAAO0b,EAAI1b,EACnB,IACO2b,CACX,CACK,OAAOD,CAChB,CA5QApC,EAAS5F,UAAU3T,IAAM,SAAU2c,GAE/B,IADA,IAAI3C,EAAOvpB,KAAK6E,MACPvF,EAAI,EAAGA,EAAI4sB,EAAG3sB,OAAQD,IAAM,CACjC,IAAIkQ,EAAM0c,EAAG5sB,GACb,IAAKiqB,IAASuB,EAAeF,KAAKrB,EAAM/Z,GAAM,CAC1C+Z,OAAO5nB,EACP,KACJ,CACA4nB,EAAOA,EAAK/Z,EAChB,CACA,OAAO+Z,CACX,EAEAT,EAAS5F,UAAUtR,IAAM,SAAUsa,GAE/B,IADA,IAAI3C,EAAOvpB,KAAK6E,MACPvF,EAAI,EAAGA,EAAI4sB,EAAG3sB,OAAQD,IAAM,CACjC,IAAIkQ,EAAM0c,EAAG5sB,GACb,IAAKiqB,IAASuB,EAAeF,KAAKrB,EAAM/Z,GACpC,OAAO,EAEX+Z,EAAOA,EAAK/Z,EAChB,CACA,OAAO,CACX,EAEAsZ,EAAS5F,UAAUvT,IAAM,SAAUuc,EAAIrnB,GAEnC,IADA,IAAI0kB,EAAOvpB,KAAK6E,MACPvF,EAAI,EAAGA,EAAI4sB,EAAG3sB,OAAS,EAAGD,IAAM,CACrC,IAAIkQ,EAAM0c,EAAG5sB,GACRwrB,EAAeF,KAAKrB,EAAM/Z,KAAM+Z,EAAK/Z,GAAO,CAAC,GAClD+Z,EAAOA,EAAK/Z,EAChB,CAEA,OADA+Z,EAAK2C,EAAG5sB,IAAMuF,EACPA,CACX,EAEAikB,EAAS5F,UAAU7X,IAAM,SAAU4d,GAC/B,OAAOF,EAAK/oB,KAAK6E,MAAOokB,GAAI,EAChC,EAEAH,EAAS5F,UAAU/R,QAAU,SAAU8X,GAEnC,OADAjpB,KAAK6E,MAAQkkB,EAAK/oB,KAAK6E,MAAOokB,GAAI,GAC3BjpB,KAAK6E,KAChB,EAEAikB,EAAS5F,UAAUe,OAAS,SAAUgF,EAAIkD,GACtC,IAAIC,EAA4B,IAArBC,UAAU9sB,OACjB2kB,EAAMkI,EAAOpsB,KAAK6E,MAAQsnB,EAM9B,OALAnsB,KAAKmR,SAAQ,SAAU1R,GACdO,KAAK4pB,QAAWwC,IACjBlI,EAAM+E,EAAG2B,KAAK5qB,KAAMkkB,EAAKzkB,GAEjC,IACOykB,CACX,EAEA4E,EAAS5F,UAAUoJ,MAAQ,WACvB,IAAIpI,EAAM,GAIV,OAHAlkB,KAAKmR,SAAQ,SAAU1R,GACnBykB,EAAIhhB,KAAKlD,KAAK4c,KAClB,IACOsH,CACX,EAEA4E,EAAS5F,UAAUqJ,MAAQ,WACvB,IAAIrI,EAAM,GAIV,OAHAlkB,KAAKmR,SAAQ,SAAU1R,GACnBykB,EAAIhhB,KAAKlD,KAAKupB,KAClB,IACOrF,CACX,EAEA4E,EAAS5F,UAAUsJ,MAAQ,WACvB,IAAIrD,EAAU,GAAIoD,EAAQ,GAE1B,OAAO,SAAUC,EAAOtB,GACpB,IAAK,IAAI5rB,EAAI,EAAGA,EAAI6pB,EAAQ5pB,OAAQD,IAChC,GAAI6pB,EAAQ7pB,KAAO4rB,EACf,OAAOqB,EAAMjtB,GAIrB,GAAmB,iBAAR4rB,GAA4B,OAARA,EAAc,CACzC,IAAIC,EAAM3B,EAAK0B,GAWf,OATA/B,EAAQjmB,KAAKgoB,GACbqB,EAAMrpB,KAAKioB,GAEXha,EAAQoZ,EAAWW,IAAM,SAAU1b,GAC/B2b,EAAI3b,GAAOgd,EAAMtB,EAAI1b,GACzB,IAEA2Z,EAAQ8B,MACRsB,EAAMtB,MACCE,CACX,CAEI,OAAOD,CAEd,CAxBM,CAwBJlrB,KAAK6E,MACZ,EA0KA,IAAI0lB,EAAapoB,OAAOyN,MAAQ,SAAeiZ,GAC3C,IAAI4D,EAAM,GACV,IAAK,IAAIjd,KAAOqZ,EAAK4D,EAAIvpB,KAAKsM,GAC9B,OAAOid,CACX,EAEA,SAASrB,EAAKvC,GAAO,OAAO1mB,OAAO+gB,UAAUwJ,SAAS9B,KAAK/B,EAAK,CAQhE,IAAI3M,EAAUnQ,MAAMmQ,SAAW,SAAkByQ,GAC7C,MAA8C,mBAAvCxqB,OAAO+gB,UAAUwJ,SAAS9B,KAAK+B,EAC1C,EAEIxb,EAAU,SAAUwb,EAAIC,GACxB,GAAID,EAAGxb,QAAS,OAAOwb,EAAGxb,QAAQyb,GAC7B,IAAK,IAAIttB,EAAI,EAAGA,EAAIqtB,EAAGptB,OAAQD,IAChCstB,EAAGD,EAAGrtB,GAAIA,EAAGqtB,EAErB,EAEAxb,EAAQoZ,EAAWzB,EAAS5F,YAAY,SAAU1T,GAC9CiV,EAASjV,GAAO,SAAUqZ,GACtB,IAAIgE,EAAO,GAAGjN,MAAMgL,KAAKyB,UAAW,GAChC5D,EAAI,IAAIK,EAASD,GACrB,OAAOJ,EAAEjZ,GAAKiH,MAAMgS,EAAGoE,EAC3B,CACJ,IAEA,IAAI/B,EAAiB3oB,OAAO2oB,gBAAkB,SAAUjC,EAAKrZ,GACzD,OAAOA,KAAOqZ,CAClB,C","sources":["webpack://superset/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/text-layer/font-atlas-manager.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/text-layer/lru-cache.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-vertex.glsl.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-fragment.glsl.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-layer.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/sub-layer-map.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js","webpack://superset/./node_modules/@mapbox/extent/index.js","webpack://superset/./node_modules/@mapbox/geojson-coords/flatten.js","webpack://superset/./node_modules/@mapbox/geojson-coords/index.js","webpack://superset/./node_modules/@mapbox/geojson-extent/index.js","webpack://superset/./node_modules/@mapbox/geojson-normalize/index.js","webpack://superset/./node_modules/@mapbox/tiny-sdf/index.js","webpack://superset/./node_modules/geojson-flatten/dist/index.es.js","webpack://superset/./node_modules/traverse/index.js"],"sourcesContent":["import { Texture2D, copyToTexture, cloneTextureFrom } from '@luma.gl/core';\nimport { ImageLoader } from '@loaders.gl/images';\nimport { load } from '@loaders.gl/core';\nimport { createIterable } from '@deck.gl/core';\nconst DEFAULT_CANVAS_WIDTH = 1024;\nconst DEFAULT_BUFFER = 4;\n\nconst noop = () => {};\n\nconst DEFAULT_TEXTURE_PARAMETERS = {\n  [10241]: 9987,\n  [10240]: 9729,\n  [10242]: 33071,\n  [10243]: 33071\n};\n\nfunction nextPowOfTwo(number) {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n\nfunction resizeImage(ctx, imageData, width, height) {\n  if (width === imageData.width && height === imageData.height) {\n    return imageData;\n  }\n\n  ctx.canvas.height = height;\n  ctx.canvas.width = width;\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.drawImage(imageData, 0, 0, imageData.width, imageData.height, 0, 0, width, height);\n  return ctx.canvas;\n}\n\nfunction getIconId(icon) {\n  return icon && (icon.id || icon.url);\n}\n\nfunction resizeTexture(gl, texture, width, height) {\n  const oldWidth = texture.width;\n  const oldHeight = texture.height;\n  const newTexture = cloneTextureFrom(texture, {\n    width,\n    height\n  });\n  copyToTexture(texture, newTexture, {\n    targetY: 0,\n    width: oldWidth,\n    height: oldHeight\n  });\n  texture.delete();\n  return newTexture;\n}\n\nfunction buildRowMapping(mapping, columns, yOffset) {\n  for (let i = 0; i < columns.length; i++) {\n    const {\n      icon,\n      xOffset\n    } = columns[i];\n    const id = getIconId(icon);\n    mapping[id] = { ...icon,\n      x: xOffset,\n      y: yOffset\n    };\n  }\n}\n\nexport function buildMapping({\n  icons,\n  buffer,\n  mapping = {},\n  xOffset = 0,\n  yOffset = 0,\n  rowHeight = 0,\n  canvasWidth\n}) {\n  let columns = [];\n\n  for (let i = 0; i < icons.length; i++) {\n    const icon = icons[i];\n    const id = getIconId(icon);\n\n    if (!mapping[id]) {\n      const {\n        height,\n        width\n      } = icon;\n\n      if (xOffset + width + buffer > canvasWidth) {\n        buildRowMapping(mapping, columns, yOffset);\n        xOffset = 0;\n        yOffset = rowHeight + yOffset + buffer;\n        rowHeight = 0;\n        columns = [];\n      }\n\n      columns.push({\n        icon,\n        xOffset\n      });\n      xOffset = xOffset + width + buffer;\n      rowHeight = Math.max(rowHeight, height);\n    }\n  }\n\n  if (columns.length > 0) {\n    buildRowMapping(mapping, columns, yOffset);\n  }\n\n  return {\n    mapping,\n    rowHeight,\n    xOffset,\n    yOffset,\n    canvasWidth,\n    canvasHeight: nextPowOfTwo(rowHeight + yOffset + buffer)\n  };\n}\nexport function getDiffIcons(data, getIcon, cachedIcons) {\n  if (!data || !getIcon) {\n    return null;\n  }\n\n  cachedIcons = cachedIcons || {};\n  const icons = {};\n  const {\n    iterable,\n    objectInfo\n  } = createIterable(data);\n\n  for (const object of iterable) {\n    objectInfo.index++;\n    const icon = getIcon(object, objectInfo);\n    const id = getIconId(icon);\n\n    if (!icon) {\n      throw new Error('Icon is missing.');\n    }\n\n    if (!icon.url) {\n      throw new Error('Icon url is missing.');\n    }\n\n    if (!icons[id] && (!cachedIcons[id] || icon.url !== cachedIcons[id].url)) {\n      icons[id] = { ...icon,\n        source: object,\n        sourceIndex: objectInfo.index\n      };\n    }\n  }\n\n  return icons;\n}\nexport default class IconManager {\n  constructor(gl, {\n    onUpdate = noop,\n    onError = noop\n  }) {\n    this.gl = gl;\n    this.onUpdate = onUpdate;\n    this.onError = onError;\n    this._loadOptions = null;\n    this._getIcon = null;\n    this._texture = null;\n    this._externalTexture = null;\n    this._mapping = {};\n    this._pendingCount = 0;\n    this._autoPacking = false;\n    this._xOffset = 0;\n    this._yOffset = 0;\n    this._rowHeight = 0;\n    this._buffer = DEFAULT_BUFFER;\n    this._canvasWidth = DEFAULT_CANVAS_WIDTH;\n    this._canvasHeight = 0;\n    this._canvas = null;\n  }\n\n  finalize() {\n    var _this$_texture;\n\n    (_this$_texture = this._texture) === null || _this$_texture === void 0 ? void 0 : _this$_texture.delete();\n  }\n\n  getTexture() {\n    return this._texture || this._externalTexture;\n  }\n\n  getIconMapping(icon) {\n    const id = this._autoPacking ? getIconId(icon) : icon;\n    return this._mapping[id] || {};\n  }\n\n  setProps({\n    loadOptions,\n    autoPacking,\n    iconAtlas,\n    iconMapping,\n    data,\n    getIcon\n  }) {\n    if (loadOptions) {\n      this._loadOptions = loadOptions;\n    }\n\n    if (autoPacking !== undefined) {\n      this._autoPacking = autoPacking;\n    }\n\n    if (getIcon) {\n      this._getIcon = getIcon;\n    }\n\n    if (iconMapping) {\n      this._mapping = iconMapping;\n    }\n\n    if (iconAtlas) {\n      this._updateIconAtlas(iconAtlas);\n    }\n\n    if (this._autoPacking && (data || getIcon) && typeof document !== 'undefined') {\n      this._canvas = this._canvas || document.createElement('canvas');\n\n      this._updateAutoPacking(data);\n    }\n  }\n\n  get isLoaded() {\n    return this._pendingCount === 0;\n  }\n\n  _updateIconAtlas(iconAtlas) {\n    var _this$_texture2;\n\n    (_this$_texture2 = this._texture) === null || _this$_texture2 === void 0 ? void 0 : _this$_texture2.delete();\n    this._texture = null;\n    this._externalTexture = iconAtlas;\n    this.onUpdate();\n  }\n\n  _updateAutoPacking(data) {\n    const icons = Object.values(getDiffIcons(data, this._getIcon, this._mapping) || {});\n\n    if (icons.length > 0) {\n      const {\n        mapping,\n        xOffset,\n        yOffset,\n        rowHeight,\n        canvasHeight\n      } = buildMapping({\n        icons,\n        buffer: this._buffer,\n        canvasWidth: this._canvasWidth,\n        mapping: this._mapping,\n        rowHeight: this._rowHeight,\n        xOffset: this._xOffset,\n        yOffset: this._yOffset\n      });\n      this._rowHeight = rowHeight;\n      this._mapping = mapping;\n      this._xOffset = xOffset;\n      this._yOffset = yOffset;\n      this._canvasHeight = canvasHeight;\n\n      if (!this._texture) {\n        this._texture = new Texture2D(this.gl, {\n          width: this._canvasWidth,\n          height: this._canvasHeight,\n          parameters: DEFAULT_TEXTURE_PARAMETERS\n        });\n      }\n\n      if (this._texture.height !== this._canvasHeight) {\n        this._texture = resizeTexture(this.gl, this._texture, this._canvasWidth, this._canvasHeight);\n      }\n\n      this.onUpdate();\n\n      this._loadIcons(icons);\n    }\n  }\n\n  _loadIcons(icons) {\n    const ctx = this._canvas.getContext('2d');\n\n    for (const icon of icons) {\n      this._pendingCount++;\n      load(icon.url, ImageLoader, this._loadOptions).then(imageData => {\n        const id = getIconId(icon);\n        const {\n          x,\n          y,\n          width,\n          height\n        } = this._mapping[id];\n        const data = resizeImage(ctx, imageData, width, height);\n\n        this._texture.setSubImageData({\n          data,\n          x,\n          y,\n          width,\n          height\n        });\n\n        this._texture.generateMipmap();\n\n        this.onUpdate();\n      }).catch(error => {\n        this.onError({\n          url: icon.url,\n          source: icon.source,\n          sourceIndex: icon.sourceIndex,\n          loadOptions: this._loadOptions,\n          error\n        });\n      }).finally(() => {\n        this._pendingCount--;\n      });\n    }\n  }\n\n}\n//# sourceMappingURL=icon-manager.js.map","import { Layer, project32, picking, log } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './icon-layer-vertex.glsl';\nimport fs from './icon-layer-fragment.glsl';\nimport IconManager from './icon-manager';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  iconAtlas: {\n    type: 'image',\n    value: null,\n    async: true\n  },\n  iconMapping: {\n    type: 'object',\n    value: {},\n    async: true\n  },\n  sizeScale: {\n    type: 'number',\n    value: 1,\n    min: 0\n  },\n  billboard: true,\n  sizeUnits: 'pixels',\n  sizeMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  sizeMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  alphaCutoff: {\n    type: 'number',\n    value: 0.05,\n    min: 0,\n    max: 1\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getIcon: {\n    type: 'accessor',\n    value: x => x.icon\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getSize: {\n    type: 'accessor',\n    value: 1\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  onIconError: {\n    type: 'function',\n    value: null,\n    compare: false,\n    optional: true\n  }\n};\nexport default class IconLayer extends Layer {\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  initializeState() {\n    this.state = {\n      iconManager: new IconManager(this.context.gl, {\n        onUpdate: this._onUpdate.bind(this),\n        onError: this._onError.bind(this)\n      })\n    };\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1\n      },\n      instanceOffsets: {\n        size: 2,\n        accessor: 'getIcon',\n        transform: this.getInstanceOffset\n      },\n      instanceIconFrames: {\n        size: 4,\n        accessor: 'getIcon',\n        transform: this.getInstanceIconFrame\n      },\n      instanceColorModes: {\n        size: 1,\n        type: 5121,\n        accessor: 'getIcon',\n        transform: this.getInstanceColorMode\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle'\n      },\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      }\n    });\n  }\n\n  updateState({\n    oldProps,\n    props,\n    changeFlags\n  }) {\n    super.updateState({\n      props,\n      oldProps,\n      changeFlags\n    });\n    const attributeManager = this.getAttributeManager();\n    const {\n      iconAtlas,\n      iconMapping,\n      data,\n      getIcon\n    } = props;\n    const {\n      iconManager\n    } = this.state;\n    iconManager.setProps({\n      loadOptions: props.loadOptions\n    });\n    let iconMappingChanged = false;\n    const prePacked = iconAtlas || this.internalState.isAsyncPropLoading('iconAtlas');\n\n    if (prePacked) {\n      if (oldProps.iconAtlas !== props.iconAtlas) {\n        iconManager.setProps({\n          iconAtlas,\n          autoPacking: false\n        });\n      }\n\n      if (oldProps.iconMapping !== props.iconMapping) {\n        iconManager.setProps({\n          iconMapping\n        });\n        iconMappingChanged = true;\n      }\n    } else {\n      iconManager.setProps({\n        autoPacking: true\n      });\n    }\n\n    if (changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon)) {\n      iconManager.setProps({\n        data,\n        getIcon\n      });\n    }\n\n    if (iconMappingChanged) {\n      attributeManager.invalidate('instanceOffsets');\n      attributeManager.invalidate('instanceIconFrames');\n      attributeManager.invalidate('instanceColorModes');\n    }\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      attributeManager.invalidateAll();\n    }\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.state.iconManager.isLoaded;\n  }\n\n  finalizeState() {\n    super.finalizeState();\n    this.state.iconManager.finalize();\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      sizeScale,\n      sizeMinPixels,\n      sizeMaxPixels,\n      sizeUnits,\n      billboard,\n      alphaCutoff\n    } = this.props;\n    const {\n      iconManager\n    } = this.state;\n    const {\n      viewport\n    } = this.context;\n    const iconsTexture = iconManager.getTexture();\n\n    if (iconsTexture) {\n      this.state.model.setUniforms(uniforms).setUniforms({\n        iconsTexture,\n        iconsTextureDim: [iconsTexture.width, iconsTexture.height],\n        sizeScale: sizeScale * (sizeUnits === 'pixels' ? viewport.metersPerPixel : 1),\n        sizeMinPixels,\n        sizeMaxPixels,\n        billboard,\n        alphaCutoff\n      }).draw();\n    }\n  }\n\n  _getModel(gl) {\n    const positions = [-1, -1, -1, 1, 1, 1, 1, -1];\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        attributes: {\n          positions: {\n            size: 2,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n  _onUpdate() {\n    this.setNeedsRedraw();\n  }\n\n  _onError(evt) {\n    const {\n      onIconError\n    } = this.getCurrentLayer().props;\n\n    if (onIconError) {\n      onIconError(evt);\n    } else {\n      log.error(evt.error)();\n    }\n  }\n\n  getInstanceOffset(icon) {\n    const rect = this.state.iconManager.getIconMapping(icon);\n    return [rect.width / 2 - rect.anchorX || 0, rect.height / 2 - rect.anchorY || 0];\n  }\n\n  getInstanceColorMode(icon) {\n    const mapping = this.state.iconManager.getIconMapping(icon);\n    return mapping.mask ? 1 : 0;\n  }\n\n  getInstanceIconFrame(icon) {\n    const rect = this.state.iconManager.getIconMapping(icon);\n    return [rect.x || 0, rect.y || 0, rect.width || 0, rect.height || 0];\n  }\n\n}\nIconLayer.layerName = 'IconLayer';\nIconLayer.defaultProps = defaultProps;\n//# sourceMappingURL=icon-layer.js.map","export default \"#define SHADER_NAME icon-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute float instanceSizes;\\nattribute float instanceAngles;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\nattribute vec4 instanceIconFrames;\\nattribute float instanceColorModes;\\nattribute vec2 instanceOffsets;\\nattribute vec2 instancePixelOffset;\\n\\nuniform float sizeScale;\\nuniform vec2 iconsTextureDim;\\nuniform float sizeMinPixels;\\nuniform float sizeMaxPixels;\\nuniform bool billboard;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvec2 rotate_by_angle(vec2 vertex, float angle) {\\n  float angle_radian = angle * PI / 180.0;\\n  float cos_angle = cos(angle_radian);\\n  float sin_angle = sin(angle_radian);\\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\\n  return rotationMatrix * vertex;\\n}\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  geometry.uv = positions;\\n  geometry.pickingColor = instancePickingColors;\\n  uv = positions;\\n\\n  vec2 iconSize = instanceIconFrames.zw;\\n  float sizePixels = clamp(\\n    project_size_to_pixel(instanceSizes * sizeScale), \\n    sizeMinPixels, sizeMaxPixels\\n  );\\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\\n  pixelOffset += instancePixelOffset;\\n  pixelOffset.y *= -1.0;\\n\\n  if (billboard)  {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = vec3(pixelOffset, 0.0);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n\\n  } else {\\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\\n    DECKGL_FILTER_SIZE(offset_common, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \\n  }\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  vTextureCoords = mix(\\n    instanceIconFrames.xy,\\n    instanceIconFrames.xy + iconSize,\\n    (positions.xy + 1.0) / 2.0\\n  ) / iconsTextureDim;\\n\\n  vColor = instanceColors;\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n\\n  vColorMode = instanceColorModes;\\n}\\n\";\n//# sourceMappingURL=icon-layer-vertex.glsl.js.map","export default \"#define SHADER_NAME icon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float opacity;\\nuniform sampler2D iconsTexture;\\nuniform float alphaCutoff;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\\n  float a = texColor.a * opacity * vColor.a;\\n\\n  if (a < alphaCutoff) {\\n    discard;\\n  }\\n\\n  gl_FragColor = vec4(color, a);\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=icon-layer-fragment.glsl.js.map","export default \"#define SHADER_NAME multi-icon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float opacity;\\nuniform sampler2D iconsTexture;\\nuniform float gamma;\\nuniform bool sdf;\\nuniform float alphaCutoff;\\nuniform float buffer;\\nuniform float outlineBuffer;\\nuniform vec4 outlineColor;\\n\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  if (!picking_uActive) {\\n    float alpha = texture2D(iconsTexture, vTextureCoords).a;\\n    vec4 color = vColor;\\n    if (sdf) {\\n      float distance = alpha;\\n      alpha = smoothstep(buffer - gamma, buffer + gamma, distance);\\n\\n      if (outlineBuffer > 0.0) {\\n        float inFill = alpha;\\n        float inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\\n        color = mix(outlineColor, vColor, inFill);\\n        alpha = inBorder;\\n      }\\n    }\\n    float a = alpha * color.a;\\n    \\n    if (a < alphaCutoff) {\\n      discard;\\n    }\\n\\n    gl_FragColor = vec4(color.rgb, a * opacity);\\n  }\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=multi-icon-layer-fragment.glsl.js.map","import { log } from '@deck.gl/core';\nimport IconLayer from '../../icon-layer/icon-layer';\nimport fs from './multi-icon-layer-fragment.glsl';\nconst DEFAULT_BUFFER = 192.0 / 256;\nconst EMPTY_ARRAY = [];\nconst defaultProps = {\n  getIconOffsets: {\n    type: 'accessor',\n    value: x => x.offsets\n  },\n  alphaCutoff: 0.001,\n  smoothing: 0.1,\n  outlineWidth: 0,\n  outlineColor: {\n    type: 'color',\n    value: [0, 0, 0, 255]\n  }\n};\nexport default class MultiIconLayer extends IconLayer {\n  getShaders() {\n    return { ...super.getShaders(),\n      fs\n    };\n  }\n\n  initializeState() {\n    super.initializeState();\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instanceOffsets: {\n        size: 2,\n        accessor: 'getIconOffsets'\n      },\n      instancePickingColors: {\n        type: 5121,\n        size: 3,\n        accessor: (object, {\n          index,\n          target: value\n        }) => this.encodePickingColor(index, value)\n      }\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {\n      props,\n      oldProps\n    } = params;\n    let {\n      outlineColor\n    } = props;\n\n    if (outlineColor !== oldProps.outlineColor) {\n      outlineColor = outlineColor.map(x => x / 255);\n      outlineColor[3] = Number.isFinite(outlineColor[3]) ? outlineColor[3] : 1;\n      this.setState({\n        outlineColor\n      });\n    }\n\n    if (!props.sdf && props.outlineWidth) {\n      log.warn(\"\".concat(this.id, \": fontSettings.sdf is required to render outline\"))();\n    }\n  }\n\n  draw(params) {\n    const {\n      sdf,\n      smoothing,\n      outlineWidth\n    } = this.props;\n    const {\n      outlineColor\n    } = this.state;\n    params.uniforms = { ...params.uniforms,\n      buffer: DEFAULT_BUFFER,\n      outlineBuffer: outlineWidth ? Math.max(smoothing, DEFAULT_BUFFER * (1 - outlineWidth)) : -1,\n      gamma: smoothing,\n      sdf: Boolean(sdf),\n      outlineColor\n    };\n    super.draw(params);\n  }\n\n  getInstanceOffset(icons) {\n    return icons ? Array.from(icons).map(icon => super.getInstanceOffset(icon)) : EMPTY_ARRAY;\n  }\n\n  getInstanceColorMode(icons) {\n    return 1;\n  }\n\n  getInstanceIconFrame(icons) {\n    return icons ? Array.from(icons).map(icon => super.getInstanceIconFrame(icon)) : EMPTY_ARRAY;\n  }\n\n}\nMultiIconLayer.layerName = 'MultiIconLayer';\nMultiIconLayer.defaultProps = defaultProps;\n//# sourceMappingURL=multi-icon-layer.js.map","import { log } from '@deck.gl/core';\nconst MISSING_CHAR_WIDTH = 32;\nconst SINGLE_LINE = [];\nexport function nextPowOfTwo(number) {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\nexport function buildMapping({\n  characterSet,\n  getFontWidth,\n  fontHeight,\n  buffer,\n  maxCanvasWidth,\n  mapping = {},\n  xOffset = 0,\n  yOffset = 0\n}) {\n  let row = 0;\n  let x = xOffset;\n  let i = 0;\n\n  for (const char of characterSet) {\n    if (!mapping[char]) {\n      const width = getFontWidth(char, i++);\n\n      if (x + width + buffer * 2 > maxCanvasWidth) {\n        x = 0;\n        row++;\n      }\n\n      mapping[char] = {\n        x: x + buffer,\n        y: yOffset + row * (fontHeight + buffer * 2) + buffer,\n        width,\n        height: fontHeight\n      };\n      x += width + buffer * 2;\n    }\n  }\n\n  const rowHeight = fontHeight + buffer * 2;\n  return {\n    mapping,\n    xOffset: x,\n    yOffset: yOffset + row * rowHeight,\n    canvasHeight: nextPowOfTwo(yOffset + (row + 1) * rowHeight)\n  };\n}\n\nfunction getTextWidth(text, startIndex, endIndex, mapping) {\n  let width = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    const character = text[i];\n    let frameWidth = null;\n    const frame = mapping && mapping[character];\n\n    if (frame) {\n      frameWidth = frame.width;\n    }\n\n    width += frameWidth;\n  }\n\n  return width;\n}\n\nfunction breakAll(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n  let rowStartCharIndex = startIndex;\n  let rowOffsetLeft = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    const textWidth = getTextWidth(text, i, i + 1, iconMapping);\n\n    if (rowOffsetLeft + textWidth > maxWidth) {\n      if (rowStartCharIndex < i) {\n        target.push(i);\n      }\n\n      rowStartCharIndex = i;\n      rowOffsetLeft = 0;\n    }\n\n    rowOffsetLeft += textWidth;\n  }\n\n  return rowOffsetLeft;\n}\n\nfunction breakWord(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n  let rowStartCharIndex = startIndex;\n  let groupStartCharIndex = startIndex;\n  let groupEndCharIndex = startIndex;\n  let rowOffsetLeft = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    if (text[i] === ' ') {\n      groupEndCharIndex = i + 1;\n    } else if (text[i + 1] === ' ' || i + 1 === endIndex) {\n      groupEndCharIndex = i + 1;\n    }\n\n    if (groupEndCharIndex > groupStartCharIndex) {\n      let groupWidth = getTextWidth(text, groupStartCharIndex, groupEndCharIndex, iconMapping);\n\n      if (rowOffsetLeft + groupWidth > maxWidth) {\n        if (rowStartCharIndex < groupStartCharIndex) {\n          target.push(groupStartCharIndex);\n          rowStartCharIndex = groupStartCharIndex;\n          rowOffsetLeft = 0;\n        }\n\n        if (groupWidth > maxWidth) {\n          groupWidth = breakAll(text, groupStartCharIndex, groupEndCharIndex, maxWidth, iconMapping, target);\n          rowStartCharIndex = target[target.length - 1];\n        }\n      }\n\n      groupStartCharIndex = groupEndCharIndex;\n      rowOffsetLeft += groupWidth;\n    }\n  }\n\n  return rowOffsetLeft;\n}\n\nexport function autoWrapping(text, wordBreak, maxWidth, iconMapping, startIndex = 0, endIndex) {\n  if (endIndex === undefined) {\n    endIndex = text.length;\n  }\n\n  const result = [];\n\n  if (wordBreak === 'break-all') {\n    breakAll(text, startIndex, endIndex, maxWidth, iconMapping, result);\n  } else {\n    breakWord(text, startIndex, endIndex, maxWidth, iconMapping, result);\n  }\n\n  return result;\n}\n\nfunction transformRow(line, startIndex, endIndex, iconMapping, leftOffsets, rowSize) {\n  let x = 0;\n  let rowHeight = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    const character = line[i];\n    const frame = iconMapping[character];\n\n    if (frame) {\n      if (!rowHeight) {\n        rowHeight = frame.height;\n      }\n\n      leftOffsets[i] = x + frame.width / 2;\n      x += frame.width;\n    } else {\n      log.warn(\"Missing character: \".concat(character, \" (\").concat(character.codePointAt(0), \")\"))();\n      leftOffsets[i] = x;\n      x += MISSING_CHAR_WIDTH;\n    }\n  }\n\n  rowSize[0] = x;\n  rowSize[1] = rowHeight;\n}\n\nexport function transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping) {\n  paragraph = Array.from(paragraph);\n  const numCharacters = paragraph.length;\n  const x = new Array(numCharacters);\n  const y = new Array(numCharacters);\n  const rowWidth = new Array(numCharacters);\n  const autoWrappingEnabled = (wordBreak === 'break-word' || wordBreak === 'break-all') && isFinite(maxWidth) && maxWidth > 0;\n  const size = [0, 0];\n  const rowSize = [];\n  let rowOffsetTop = 0;\n  let lineStartIndex = 0;\n  let lineEndIndex = 0;\n\n  for (let i = 0; i <= numCharacters; i++) {\n    const char = paragraph[i];\n\n    if (char === '\\n' || i === numCharacters) {\n      lineEndIndex = i;\n    }\n\n    if (lineEndIndex > lineStartIndex) {\n      const rows = autoWrappingEnabled ? autoWrapping(paragraph, wordBreak, maxWidth, iconMapping, lineStartIndex, lineEndIndex) : SINGLE_LINE;\n\n      for (let rowIndex = 0; rowIndex <= rows.length; rowIndex++) {\n        const rowStart = rowIndex === 0 ? lineStartIndex : rows[rowIndex - 1];\n        const rowEnd = rowIndex < rows.length ? rows[rowIndex] : lineEndIndex;\n        transformRow(paragraph, rowStart, rowEnd, iconMapping, x, rowSize);\n\n        for (let j = rowStart; j < rowEnd; j++) {\n          y[j] = rowOffsetTop + rowSize[1] / 2;\n          rowWidth[j] = rowSize[0];\n        }\n\n        rowOffsetTop = rowOffsetTop + rowSize[1] * lineHeight;\n        size[0] = Math.max(size[0], rowSize[0]);\n      }\n\n      lineStartIndex = lineEndIndex;\n    }\n\n    if (char === '\\n') {\n      x[lineStartIndex] = 0;\n      y[lineStartIndex] = 0;\n      rowWidth[lineStartIndex] = 0;\n      lineStartIndex++;\n    }\n  }\n\n  size[1] = rowOffsetTop;\n  return {\n    x,\n    y,\n    rowWidth,\n    size\n  };\n}\nexport function getTextFromBuffer({\n  value,\n  length,\n  stride,\n  offset,\n  startIndices,\n  characterSet\n}) {\n  const bytesPerElement = value.BYTES_PER_ELEMENT;\n  const elementStride = stride ? stride / bytesPerElement : 1;\n  const elementOffset = offset ? offset / bytesPerElement : 0;\n  const characterCount = startIndices[length] || Math.ceil((value.length - elementOffset) / elementStride);\n  const autoCharacterSet = characterSet && new Set();\n  const texts = new Array(length);\n  let codes = value;\n\n  if (elementStride > 1 || elementOffset > 0) {\n    codes = new value.constructor(characterCount);\n\n    for (let i = 0; i < characterCount; i++) {\n      codes[i] = value[i * elementStride + elementOffset];\n    }\n  }\n\n  for (let index = 0; index < length; index++) {\n    const startIndex = startIndices[index];\n    const endIndex = startIndices[index + 1] || characterCount;\n    const codesAtIndex = codes.subarray(startIndex, endIndex);\n    texts[index] = String.fromCodePoint.apply(null, codesAtIndex);\n\n    if (autoCharacterSet) {\n      codesAtIndex.forEach(autoCharacterSet.add, autoCharacterSet);\n    }\n  }\n\n  if (autoCharacterSet) {\n    for (const charCode of autoCharacterSet) {\n      characterSet.add(String.fromCodePoint(charCode));\n    }\n  }\n\n  return {\n    texts,\n    characterCount\n  };\n}\n//# sourceMappingURL=utils.js.map","import TinySDF from '@mapbox/tiny-sdf';\nimport { buildMapping } from './utils';\nimport LRUCache from './lru-cache';\n\nfunction getDefaultCharacterSet() {\n  const charSet = [];\n\n  for (let i = 32; i < 128; i++) {\n    charSet.push(String.fromCharCode(i));\n  }\n\n  return charSet;\n}\n\nexport const DEFAULT_CHAR_SET = getDefaultCharacterSet();\nexport const DEFAULT_FONT_FAMILY = 'Monaco, monospace';\nexport const DEFAULT_FONT_WEIGHT = 'normal';\nexport const DEFAULT_FONT_SIZE = 64;\nexport const DEFAULT_BUFFER = 4;\nexport const DEFAULT_CUTOFF = 0.25;\nexport const DEFAULT_RADIUS = 12;\nconst MAX_CANVAS_WIDTH = 1024;\nconst BASELINE_SCALE = 0.9;\nconst HEIGHT_SCALE = 1.2;\nconst CACHE_LIMIT = 3;\nconst cache = new LRUCache(CACHE_LIMIT);\nconst VALID_PROPS = ['fontFamily', 'fontWeight', 'characterSet', 'fontSize', 'sdf', 'buffer', 'cutoff', 'radius'];\n\nfunction getNewChars(key, characterSet) {\n  const cachedFontAtlas = cache.get(key);\n\n  if (!cachedFontAtlas) {\n    return characterSet;\n  }\n\n  const newChars = [];\n  const cachedMapping = cachedFontAtlas.mapping;\n  let cachedCharSet = Object.keys(cachedMapping);\n  cachedCharSet = new Set(cachedCharSet);\n  let charSet = characterSet;\n\n  if (charSet instanceof Array) {\n    charSet = new Set(charSet);\n  }\n\n  charSet.forEach(char => {\n    if (!cachedCharSet.has(char)) {\n      newChars.push(char);\n    }\n  });\n  return newChars;\n}\n\nfunction populateAlphaChannel(alphaChannel, imageData) {\n  for (let i = 0; i < alphaChannel.length; i++) {\n    imageData.data[4 * i + 3] = alphaChannel[i];\n  }\n}\n\nfunction setTextStyle(ctx, fontFamily, fontSize, fontWeight) {\n  ctx.font = \"\".concat(fontWeight, \" \").concat(fontSize, \"px \").concat(fontFamily);\n  ctx.fillStyle = '#000';\n  ctx.textBaseline = 'baseline';\n  ctx.textAlign = 'left';\n}\n\nexport default class FontAtlasManager {\n  constructor() {\n    this.props = {\n      fontFamily: DEFAULT_FONT_FAMILY,\n      fontWeight: DEFAULT_FONT_WEIGHT,\n      characterSet: DEFAULT_CHAR_SET,\n      fontSize: DEFAULT_FONT_SIZE,\n      buffer: DEFAULT_BUFFER,\n      sdf: false,\n      cutoff: DEFAULT_CUTOFF,\n      radius: DEFAULT_RADIUS\n    };\n    this._key = null;\n    this._atlas = null;\n  }\n\n  get texture() {\n    return this._atlas;\n  }\n\n  get mapping() {\n    return this._atlas && this._atlas.mapping;\n  }\n\n  get scale() {\n    return HEIGHT_SCALE;\n  }\n\n  setProps(props = {}) {\n    VALID_PROPS.forEach(prop => {\n      if (prop in props) {\n        this.props[prop] = props[prop];\n      }\n    });\n    const oldKey = this._key;\n    this._key = this._getKey();\n    const charSet = getNewChars(this._key, this.props.characterSet);\n    const cachedFontAtlas = cache.get(this._key);\n\n    if (cachedFontAtlas && charSet.length === 0) {\n      if (this._key !== oldKey) {\n        this._atlas = cachedFontAtlas;\n      }\n\n      return;\n    }\n\n    const fontAtlas = this._generateFontAtlas(this._key, charSet, cachedFontAtlas);\n\n    this._atlas = fontAtlas;\n    cache.set(this._key, fontAtlas);\n  }\n\n  _generateFontAtlas(key, characterSet, cachedFontAtlas) {\n    const {\n      fontFamily,\n      fontWeight,\n      fontSize,\n      buffer,\n      sdf,\n      radius,\n      cutoff\n    } = this.props;\n    let canvas = cachedFontAtlas && cachedFontAtlas.data;\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      canvas.width = MAX_CANVAS_WIDTH;\n    }\n\n    const ctx = canvas.getContext('2d');\n    setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n    const {\n      mapping,\n      canvasHeight,\n      xOffset,\n      yOffset\n    } = buildMapping({\n      getFontWidth: char => ctx.measureText(char).width,\n      fontHeight: fontSize * HEIGHT_SCALE,\n      buffer,\n      characterSet,\n      maxCanvasWidth: MAX_CANVAS_WIDTH,\n      ...(cachedFontAtlas && {\n        mapping: cachedFontAtlas.mapping,\n        xOffset: cachedFontAtlas.xOffset,\n        yOffset: cachedFontAtlas.yOffset\n      })\n    });\n\n    if (canvas.height !== canvasHeight) {\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      canvas.height = canvasHeight;\n      ctx.putImageData(imageData, 0, 0);\n    }\n\n    setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n\n    if (sdf) {\n      const tinySDF = new TinySDF(fontSize, buffer, radius, cutoff, fontFamily, fontWeight);\n      const imageData = ctx.getImageData(0, 0, tinySDF.size, tinySDF.size);\n\n      for (const char of characterSet) {\n        populateAlphaChannel(tinySDF.draw(char), imageData);\n        ctx.putImageData(imageData, mapping[char].x - buffer, mapping[char].y + buffer);\n      }\n    } else {\n      for (const char of characterSet) {\n        ctx.fillText(char, mapping[char].x, mapping[char].y + fontSize * BASELINE_SCALE);\n      }\n    }\n\n    return {\n      xOffset,\n      yOffset,\n      mapping,\n      data: canvas,\n      width: canvas.width,\n      height: canvas.height\n    };\n  }\n\n  _getKey() {\n    const {\n      fontFamily,\n      fontWeight,\n      fontSize,\n      buffer,\n      sdf,\n      radius,\n      cutoff\n    } = this.props;\n\n    if (sdf) {\n      return \"\".concat(fontFamily, \" \").concat(fontWeight, \" \").concat(fontSize, \" \").concat(buffer, \" \").concat(radius, \" \").concat(cutoff);\n    }\n\n    return \"\".concat(fontFamily, \" \").concat(fontWeight, \" \").concat(fontSize, \" \").concat(buffer);\n  }\n\n}\n//# sourceMappingURL=font-atlas-manager.js.map","export default class LRUCache {\n  constructor(limit = 5) {\n    this.limit = limit;\n    this.clear();\n  }\n\n  clear() {\n    this._cache = {};\n    this._order = [];\n  }\n\n  get(key) {\n    const value = this._cache[key];\n\n    if (value) {\n      this._deleteOrder(key);\n\n      this._appendOrder(key);\n    }\n\n    return value;\n  }\n\n  set(key, value) {\n    if (!this._cache[key]) {\n      if (Object.keys(this._cache).length === this.limit) {\n        this.delete(this._order[0]);\n      }\n\n      this._cache[key] = value;\n\n      this._appendOrder(key);\n    } else {\n      this.delete(key);\n      this._cache[key] = value;\n\n      this._appendOrder(key);\n    }\n  }\n\n  delete(key) {\n    const value = this._cache[key];\n\n    if (value) {\n      this._deleteCache(key);\n\n      this._deleteOrder(key);\n    }\n  }\n\n  _deleteCache(key) {\n    delete this._cache[key];\n  }\n\n  _deleteOrder(key) {\n    const index = this._order.findIndex(o => o === key);\n\n    if (index >= 0) {\n      this._order.splice(index, 1);\n    }\n  }\n\n  _appendOrder(key) {\n    this._order.push(key);\n  }\n\n}\n//# sourceMappingURL=lru-cache.js.map","export default \"#define SHADER_NAME text-background-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute vec4 instanceRects;\\nattribute float instanceSizes;\\nattribute float instanceAngles;\\nattribute vec2 instancePixelOffsets;\\nattribute float instanceLineWidths;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform bool billboard;\\nuniform float opacity;\\nuniform float sizeScale;\\nuniform float sizeMinPixels;\\nuniform float sizeMaxPixels;\\nuniform vec4 padding;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying float vLineWidth;\\nvarying vec2 uv;\\nvarying vec2 dimensions;\\n\\nvec2 rotate_by_angle(vec2 vertex, float angle) {\\n  float angle_radian = radians(angle);\\n  float cos_angle = cos(angle_radian);\\n  float sin_angle = sin(angle_radian);\\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\\n  return rotationMatrix * vertex;\\n}\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  geometry.uv = positions;\\n  geometry.pickingColor = instancePickingColors;\\n  uv = positions;\\n  vLineWidth = instanceLineWidths;\\n  float sizePixels = clamp(\\n    project_size_to_pixel(instanceSizes * sizeScale),\\n    sizeMinPixels, sizeMaxPixels\\n  );\\n\\n  dimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\\n\\n  vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\\n  pixelOffset += instancePixelOffsets;\\n  pixelOffset.y *= -1.0;\\n\\n  if (billboard)  {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = vec3(pixelOffset, 0.0);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n  } else {\\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\\n    DECKGL_FILTER_SIZE(offset_common, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\\n  }\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\\n}\\n\";\n//# sourceMappingURL=text-background-layer-vertex.glsl.js.map","import { Layer, project32, picking } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './text-background-layer-vertex.glsl';\nimport fs from './text-background-layer-fragment.glsl';\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  padding: {\n    type: 'array',\n    value: [0, 0, 0, 0]\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getSize: {\n    type: 'accessor',\n    value: 1\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  getBoundingRect: {\n    type: 'accessor',\n    value: [0, 0, 0, 0]\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: [0, 0, 0, 255]\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: [0, 0, 0, 255]\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  }\n};\nexport default class TextBackgroundLayer extends Layer {\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle'\n      },\n      instanceRects: {\n        size: 4,\n        accessor: 'getBoundingRect'\n      },\n      instancePixelOffsets: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      },\n      instanceFillColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState({\n    props,\n    oldProps,\n    changeFlags\n  }) {\n    super.updateState({\n      props,\n      oldProps,\n      changeFlags\n    });\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      viewport\n    } = this.context;\n    const {\n      billboard,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      getLineWidth\n    } = this.props;\n    let {\n      padding\n    } = this.props;\n    const sizeScaleMultiplier = sizeUnits === 'pixels' ? viewport.metersPerPixel : 1;\n\n    if (padding.length < 4) {\n      padding = [padding[0], padding[1], padding[0], padding[1]];\n    }\n\n    this.state.model.setUniforms(uniforms).setUniforms({\n      billboard,\n      stroked: Boolean(getLineWidth),\n      padding,\n      sizeScale: sizeScale * sizeScaleMultiplier,\n      sizeMinPixels,\n      sizeMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const positions = [0, 0, 1, 0, 1, 1, 0, 1];\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 2,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n}\nTextBackgroundLayer.layerName = 'TextBackgroundLayer';\nTextBackgroundLayer.defaultProps = defaultProps;\n//# sourceMappingURL=text-background-layer.js.map","export default \"#define SHADER_NAME text-background-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform bool stroked;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying float vLineWidth;\\nvarying vec2 uv;\\nvarying vec2 dimensions;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  vec2 pixelPosition = uv * dimensions;\\n  if (stroked) {\\n    float distToEdge = min(\\n      min(pixelPosition.x, dimensions.x - pixelPosition.x),\\n      min(pixelPosition.y, dimensions.y - pixelPosition.y)\\n    );\\n    float isBorder = smoothedge(distToEdge, vLineWidth);\\n    gl_FragColor = mix(vFillColor, vLineColor, isBorder);\\n  } else {\\n    gl_FragColor = vFillColor;\\n  }\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=text-background-layer-fragment.glsl.js.map","import { CompositeLayer, createIterable } from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport FontAtlasManager, { DEFAULT_CHAR_SET, DEFAULT_FONT_FAMILY, DEFAULT_FONT_WEIGHT, DEFAULT_FONT_SIZE, DEFAULT_BUFFER, DEFAULT_RADIUS, DEFAULT_CUTOFF } from './font-atlas-manager';\nimport { transformParagraph, getTextFromBuffer } from './utils';\nimport TextBackgroundLayer from './text-background-layer/text-background-layer';\nconst DEFAULT_FONT_SETTINGS = {\n  fontSize: DEFAULT_FONT_SIZE,\n  buffer: DEFAULT_BUFFER,\n  sdf: false,\n  radius: DEFAULT_RADIUS,\n  cutoff: DEFAULT_CUTOFF,\n  smoothing: 0.1\n};\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst DEFAULT_LINE_HEIGHT = 1.0;\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  background: false,\n  getBackgroundColor: {\n    type: 'accessor',\n    value: [255, 255, 255, 255]\n  },\n  getBorderColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getBorderWidth: {\n    type: 'accessor',\n    value: 0\n  },\n  backgroundPadding: {\n    type: 'array',\n    value: [0, 0, 0, 0]\n  },\n  characterSet: {\n    type: 'object',\n    value: DEFAULT_CHAR_SET\n  },\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontWeight: DEFAULT_FONT_WEIGHT,\n  lineHeight: DEFAULT_LINE_HEIGHT,\n  outlineWidth: {\n    type: 'number',\n    value: 0,\n    min: 0\n  },\n  outlineColor: {\n    type: 'color',\n    value: DEFAULT_COLOR\n  },\n  fontSettings: {},\n  wordBreak: 'break-word',\n  maxWidth: {\n    type: 'number',\n    value: -1\n  },\n  getText: {\n    type: 'accessor',\n    value: x => x.text\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getSize: {\n    type: 'accessor',\n    value: 32\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getTextAnchor: {\n    type: 'accessor',\n    value: 'middle'\n  },\n  getAlignmentBaseline: {\n    type: 'accessor',\n    value: 'center'\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  backgroundColor: {\n    deprecatedFor: ['background', 'getBackgroundColor']\n  }\n};\nexport default class TextLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      styleVersion: 0,\n      fontAtlasManager: new FontAtlasManager()\n    };\n  }\n\n  updateState({\n    props,\n    oldProps,\n    changeFlags\n  }) {\n    const textChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText);\n    const oldCharacterSet = this.state.characterSet;\n\n    if (textChanged) {\n      this._updateText();\n    }\n\n    const fontChanged = oldCharacterSet !== this.state.characterSet || this._fontChanged(oldProps, props);\n\n    if (fontChanged) {\n      this._updateFontAtlas(oldProps, props);\n    }\n\n    const styleChanged = fontChanged || props.lineHeight !== oldProps.lineHeight || props.wordBreak !== oldProps.wordBreak || props.maxWidth !== oldProps.maxWidth;\n\n    if (styleChanged) {\n      this.setState({\n        styleVersion: this.state.styleVersion + 1\n      });\n    }\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    info.object = info.index >= 0 ? this.props.data[info.index] : null;\n    return info;\n  }\n\n  _updateFontAtlas(oldProps, props) {\n    const {\n      fontSettings,\n      fontFamily,\n      fontWeight\n    } = props;\n    const {\n      fontAtlasManager,\n      characterSet\n    } = this.state;\n    fontAtlasManager.setProps({ ...DEFAULT_FONT_SETTINGS,\n      ...fontSettings,\n      characterSet,\n      fontFamily,\n      fontWeight\n    });\n  }\n\n  _fontChanged(oldProps, props) {\n    if (oldProps.fontFamily !== props.fontFamily || oldProps.fontWeight !== props.fontWeight) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  _updateText() {\n    const {\n      data,\n      characterSet\n    } = this.props;\n    const textBuffer = data.attributes && data.attributes.getText;\n    let {\n      getText\n    } = this.props;\n    let {\n      startIndices\n    } = data;\n    let numInstances;\n    const autoCharacterSet = characterSet === 'auto' && new Set();\n\n    if (textBuffer && startIndices) {\n      const {\n        texts,\n        characterCount\n      } = getTextFromBuffer({ ...(ArrayBuffer.isView(textBuffer) ? {\n          value: textBuffer\n        } : textBuffer),\n        length: data.length,\n        startIndices,\n        characterSet: autoCharacterSet\n      });\n      numInstances = characterCount;\n\n      getText = (_, {\n        index\n      }) => texts[index];\n    } else {\n      const {\n        iterable,\n        objectInfo\n      } = createIterable(data);\n      startIndices = [0];\n      numInstances = 0;\n\n      for (const object of iterable) {\n        objectInfo.index++;\n        const text = Array.from(getText(object, objectInfo) || '');\n\n        if (autoCharacterSet) {\n          text.forEach(autoCharacterSet.add, autoCharacterSet);\n        }\n\n        numInstances += text.length;\n        startIndices.push(numInstances);\n      }\n    }\n\n    this.setState({\n      getText,\n      startIndices,\n      numInstances,\n      characterSet: autoCharacterSet || characterSet\n    });\n  }\n\n  getBoundingRect(object, objectInfo) {\n    const iconMapping = this.state.fontAtlasManager.mapping;\n    const {\n      getText\n    } = this.state;\n    const {\n      wordBreak,\n      maxWidth,\n      lineHeight,\n      getTextAnchor,\n      getAlignmentBaseline\n    } = this.props;\n    const paragraph = getText(object, objectInfo) || '';\n    const {\n      size: [width, height]\n    } = transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping);\n    const anchorX = TEXT_ANCHOR[typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor];\n    const anchorY = ALIGNMENT_BASELINE[typeof getAlignmentBaseline === 'function' ? getAlignmentBaseline(object, objectInfo) : getAlignmentBaseline];\n    return [(anchorX - 1) * width / 2, (anchorY - 1) * height / 2, width, height];\n  }\n\n  getIconOffsets(object, objectInfo) {\n    const iconMapping = this.state.fontAtlasManager.mapping;\n    const {\n      getText\n    } = this.state;\n    const {\n      wordBreak,\n      maxWidth,\n      lineHeight,\n      getTextAnchor,\n      getAlignmentBaseline\n    } = this.props;\n    const paragraph = getText(object, objectInfo) || '';\n    const {\n      x,\n      y,\n      rowWidth,\n      size: [width, height]\n    } = transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping);\n    const anchorX = TEXT_ANCHOR[typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor];\n    const anchorY = ALIGNMENT_BASELINE[typeof getAlignmentBaseline === 'function' ? getAlignmentBaseline(object, objectInfo) : getAlignmentBaseline];\n    const numCharacters = x.length;\n    const offsets = new Array(numCharacters * 2);\n    let index = 0;\n\n    for (let i = 0; i < numCharacters; i++) {\n      const rowOffset = (1 - anchorX) * (width - rowWidth[i]) / 2;\n      offsets[index++] = (anchorX - 1) * width / 2 + rowOffset + x[i];\n      offsets[index++] = (anchorY - 1) * height / 2 + y[i];\n    }\n\n    return offsets;\n  }\n\n  renderLayers() {\n    const {\n      startIndices,\n      numInstances,\n      getText,\n      fontAtlasManager: {\n        scale,\n        texture,\n        mapping\n      },\n      styleVersion\n    } = this.state;\n    const {\n      data,\n      _dataDiff,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      getBackgroundColor,\n      getBorderColor,\n      getBorderWidth,\n      backgroundPadding,\n      background,\n      billboard,\n      fontSettings,\n      outlineWidth,\n      outlineColor,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n    const CharactersLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n    const BackgroundLayerClass = this.getSubLayerClass('background', TextBackgroundLayer);\n    return [background && new BackgroundLayerClass({\n      getFillColor: getBackgroundColor,\n      getLineColor: getBorderColor,\n      getLineWidth: getBorderWidth,\n      padding: backgroundPadding,\n      getPosition,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      billboard,\n      sizeScale: sizeScale / this.state.fontAtlasManager.props.fontSize,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions: transitions && {\n        getPosition: transitions.getPosition,\n        getAngle: transitions.getAngle,\n        getSize: transitions.getSize,\n        getFillColor: transitions.getBackgroundColor,\n        getLineColor: transitions.getBorderColor,\n        getLineWidth: transitions.getBorderWidth,\n        getPixelOffset: transitions.getPixelOffset\n      }\n    }, this.getSubLayerProps({\n      id: 'background',\n      updateTriggers: {\n        getPosition: updateTriggers.getPosition,\n        getAngle: updateTriggers.getAngle,\n        getSize: updateTriggers.getSize,\n        getFillColor: updateTriggers.getBackgroundColor,\n        getLineColor: updateTriggers.getBorderColor,\n        getLineWidth: updateTriggers.getBorderWidth,\n        getPixelOffset: updateTriggers.getPixelOffset,\n        getBoundingRect: {\n          getText: updateTriggers.getText,\n          getTextAnchor: updateTriggers.getTextAnchor,\n          getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n          styleVersion\n        }\n      }\n    }), {\n      data: data.attributes ? {\n        length: data.length,\n        attributes: data.attributes.background || {}\n      } : data,\n      _dataDiff,\n      autoHighlight: false,\n      getBoundingRect: this.getBoundingRect.bind(this)\n    }), new CharactersLayerClass({\n      sdf: fontSettings.sdf,\n      smoothing: Number.isFinite(fontSettings.smoothing) ? fontSettings.smoothing : DEFAULT_FONT_SETTINGS.smoothing,\n      outlineWidth,\n      outlineColor,\n      iconAtlas: texture,\n      iconMapping: mapping,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      billboard,\n      sizeScale: sizeScale * scale,\n      sizeUnits,\n      sizeMinPixels: sizeMinPixels * scale,\n      sizeMaxPixels: sizeMaxPixels * scale,\n      transitions: transitions && {\n        getPosition: transitions.getPosition,\n        getAngle: transitions.getAngle,\n        getColor: transitions.getColor,\n        getSize: transitions.getSize,\n        getPixelOffset: transitions.getPixelOffset\n      }\n    }, this.getSubLayerProps({\n      id: 'characters',\n      updateTriggers: {\n        getIcon: updateTriggers.getText,\n        getPosition: updateTriggers.getPosition,\n        getAngle: updateTriggers.getAngle,\n        getColor: updateTriggers.getColor,\n        getSize: updateTriggers.getSize,\n        getPixelOffset: updateTriggers.getPixelOffset,\n        getIconOffsets: {\n          getText: updateTriggers.getText,\n          getTextAnchor: updateTriggers.getTextAnchor,\n          getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n          styleVersion\n        }\n      }\n    }), {\n      data,\n      _dataDiff,\n      startIndices,\n      numInstances,\n      getIconOffsets: this.getIconOffsets.bind(this),\n      getIcon: getText\n    })];\n  }\n\n}\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n//# sourceMappingURL=text-layer.js.map","import IconLayer from '../icon-layer/icon-layer';\nimport ScatterplotLayer from '../scatterplot-layer/scatterplot-layer';\nimport TextLayer from '../text-layer/text-layer';\nimport PathLayer from '../path-layer/path-layer';\nimport SolidPolygonLayer from '../solid-polygon-layer/solid-polygon-layer';\nexport const POINT_LAYER = {\n  circle: {\n    type: ScatterplotLayer,\n    props: {\n      filled: 'filled',\n      stroked: 'stroked',\n      lineWidthMaxPixels: 'lineWidthMaxPixels',\n      lineWidthMinPixels: 'lineWidthMinPixels',\n      lineWidthScale: 'lineWidthScale',\n      lineWidthUnits: 'lineWidthUnits',\n      pointRadiusMaxPixels: 'radiusMaxPixels',\n      pointRadiusMinPixels: 'radiusMinPixels',\n      pointRadiusScale: 'radiusScale',\n      pointRadiusUnits: 'radiusUnits',\n      getFillColor: 'getFillColor',\n      getLineColor: 'getLineColor',\n      getLineWidth: 'getLineWidth',\n      getPointRadius: 'getRadius'\n    }\n  },\n  icon: {\n    type: IconLayer,\n    props: {\n      iconAtlas: 'iconAtlas',\n      iconMapping: 'iconMapping',\n      iconSizeMaxPixels: 'sizeMaxPixels',\n      iconSizeMinPixels: 'sizeMinPixels',\n      iconSizeScale: 'sizeScale',\n      iconSizeUnits: 'sizeUnits',\n      getIcon: 'getIcon',\n      getIconAngle: 'getAngle',\n      getIconColor: 'getColor',\n      getIconPixelOffset: 'getPixelOffset',\n      getIconSize: 'getSize'\n    }\n  },\n  text: {\n    type: TextLayer,\n    props: {\n      textSizeMaxPixels: 'sizeMaxPixels',\n      textSizeMinPixels: 'sizeMinPixels',\n      textSizeScale: 'sizeScale',\n      textSizeUnits: 'sizeUnits',\n      textBackground: 'background',\n      textBackgroundPadding: 'backgroundPadding',\n      textFontFamily: 'fontFamily',\n      textFontWeight: 'fontWeight',\n      textLineHeight: 'lineHeight',\n      textMaxWidth: 'maxWidth',\n      textOutlineColor: 'outlineColor',\n      textOutlineWidth: 'outlineWidth',\n      textWordBreak: 'wordBreak',\n      textCharacterSet: 'characterSet',\n      getText: 'getText',\n      getTextAngle: 'getAngle',\n      getTextColor: 'getColor',\n      getTextPixelOffset: 'getPixelOffset',\n      getTextSize: 'getSize',\n      getTextAnchor: 'getTextAnchor',\n      getTextAlignmentBaseline: 'getAlignmentBaseline',\n      getTextBackgroundColor: 'getBackgroundColor',\n      getTextBorderColor: 'getBorderColor',\n      getTextBorderWidth: 'getBorderWidth'\n    }\n  }\n};\nexport const LINE_LAYER = {\n  type: PathLayer,\n  props: {\n    lineWidthUnits: 'widthUnits',\n    lineWidthScale: 'widthScale',\n    lineWidthMinPixels: 'widthMinPixels',\n    lineWidthMaxPixels: 'widthMaxPixels',\n    lineJointRounded: 'jointRounded',\n    lineCapRounded: 'capRounded',\n    lineMiterLimit: 'miterLimit',\n    getLineColor: 'getColor',\n    getLineWidth: 'getWidth'\n  }\n};\nexport const POLYGON_LAYER = {\n  type: SolidPolygonLayer,\n  props: {\n    extruded: 'extruded',\n    filled: 'filled',\n    wireframe: 'wireframe',\n    elevationScale: 'elevationScale',\n    material: 'material',\n    getElevation: 'getElevation',\n    getFillColor: 'getFillColor',\n    getLineColor: 'getLineColor'\n  }\n};\nexport function getDefaultProps({\n  type,\n  props\n}) {\n  const result = {};\n\n  for (const key in props) {\n    result[key] = type.defaultProps[props[key]];\n  }\n\n  return result;\n}\nexport function forwardProps(layer, mapping) {\n  const {\n    transitions,\n    updateTriggers\n  } = layer.props;\n  const result = {\n    updateTriggers: {},\n    transitions: transitions && {\n      getPosition: transitions.geometry\n    }\n  };\n\n  for (const sourceKey in mapping) {\n    const targetKey = mapping[sourceKey];\n    let value = layer.props[sourceKey];\n\n    if (sourceKey.startsWith('get')) {\n      value = layer.getSubLayerAccessor(value);\n      result.updateTriggers[targetKey] = updateTriggers[sourceKey];\n\n      if (transitions) {\n        result.transitions[targetKey] = transitions[sourceKey];\n      }\n    }\n\n    result[targetKey] = value;\n  }\n\n  return result;\n}\n//# sourceMappingURL=sub-layer-map.js.map","import { log } from '@deck.gl/core';\nexport function getGeojsonFeatures(geojson) {\n  if (Array.isArray(geojson)) {\n    return geojson;\n  }\n\n  log.assert(geojson.type, 'GeoJSON does not have type');\n\n  switch (geojson.type) {\n    case 'Feature':\n      return [geojson];\n\n    case 'FeatureCollection':\n      log.assert(Array.isArray(geojson.features), 'GeoJSON does not have features array');\n      return geojson.features;\n\n    default:\n      return [{\n        geometry: geojson\n      }];\n  }\n}\nexport function separateGeojsonFeatures(features, wrapFeature, dataRange = {}) {\n  const separated = {\n    pointFeatures: [],\n    lineFeatures: [],\n    polygonFeatures: [],\n    polygonOutlineFeatures: []\n  };\n  const {\n    startRow = 0,\n    endRow = features.length\n  } = dataRange;\n\n  for (let featureIndex = startRow; featureIndex < endRow; featureIndex++) {\n    const feature = features[featureIndex];\n    log.assert(feature && feature.geometry, 'GeoJSON does not have geometry');\n    const {\n      geometry\n    } = feature;\n\n    if (geometry.type === 'GeometryCollection') {\n      log.assert(Array.isArray(geometry.geometries), 'GeoJSON does not have geometries array');\n      const {\n        geometries\n      } = geometry;\n\n      for (let i = 0; i < geometries.length; i++) {\n        const subGeometry = geometries[i];\n        separateGeometry(subGeometry, separated, wrapFeature, feature, featureIndex);\n      }\n    } else {\n      separateGeometry(geometry, separated, wrapFeature, feature, featureIndex);\n    }\n  }\n\n  return separated;\n}\n\nfunction separateGeometry(geometry, separated, wrapFeature, sourceFeature, sourceFeatureIndex) {\n  const {\n    type,\n    coordinates\n  } = geometry;\n  const {\n    pointFeatures,\n    lineFeatures,\n    polygonFeatures,\n    polygonOutlineFeatures\n  } = separated;\n\n  if (!validateGeometry(type, coordinates)) {\n    log.warn(\"\".concat(type, \" coordinates are malformed\"))();\n    return;\n  }\n\n  switch (type) {\n    case 'Point':\n      pointFeatures.push(wrapFeature({\n        geometry\n      }, sourceFeature, sourceFeatureIndex));\n      break;\n\n    case 'MultiPoint':\n      coordinates.forEach(point => {\n        pointFeatures.push(wrapFeature({\n          geometry: {\n            type: 'Point',\n            coordinates: point\n          }\n        }, sourceFeature, sourceFeatureIndex));\n      });\n      break;\n\n    case 'LineString':\n      lineFeatures.push(wrapFeature({\n        geometry\n      }, sourceFeature, sourceFeatureIndex));\n      break;\n\n    case 'MultiLineString':\n      coordinates.forEach(path => {\n        lineFeatures.push(wrapFeature({\n          geometry: {\n            type: 'LineString',\n            coordinates: path\n          }\n        }, sourceFeature, sourceFeatureIndex));\n      });\n      break;\n\n    case 'Polygon':\n      polygonFeatures.push(wrapFeature({\n        geometry\n      }, sourceFeature, sourceFeatureIndex));\n      coordinates.forEach(path => {\n        polygonOutlineFeatures.push(wrapFeature({\n          geometry: {\n            type: 'LineString',\n            coordinates: path\n          }\n        }, sourceFeature, sourceFeatureIndex));\n      });\n      break;\n\n    case 'MultiPolygon':\n      coordinates.forEach(polygon => {\n        polygonFeatures.push(wrapFeature({\n          geometry: {\n            type: 'Polygon',\n            coordinates: polygon\n          }\n        }, sourceFeature, sourceFeatureIndex));\n        polygon.forEach(path => {\n          polygonOutlineFeatures.push(wrapFeature({\n            geometry: {\n              type: 'LineString',\n              coordinates: path\n            }\n          }, sourceFeature, sourceFeatureIndex));\n        });\n      });\n      break;\n\n    default:\n  }\n}\n\nconst COORDINATE_NEST_LEVEL = {\n  Point: 1,\n  MultiPoint: 2,\n  LineString: 2,\n  MultiLineString: 3,\n  Polygon: 3,\n  MultiPolygon: 4\n};\nexport function validateGeometry(type, coordinates) {\n  let nestLevel = COORDINATE_NEST_LEVEL[type];\n  log.assert(nestLevel, \"Unknown GeoJSON type \".concat(type));\n\n  while (coordinates && --nestLevel > 0) {\n    coordinates = coordinates[0];\n  }\n\n  return coordinates && Number.isFinite(coordinates[0]);\n}\n//# sourceMappingURL=geojson.js.map","import { calculatePickingColors } from './geojson-binary';\n\nfunction createEmptyLayerProps() {\n  return {\n    points: {},\n    lines: {},\n    polygons: {},\n    polygonsOutline: {}\n  };\n}\n\nfunction getCoordinates(f) {\n  return f.geometry.coordinates;\n}\n\nexport function createLayerPropsFromFeatures(features, featuresDiff) {\n  const layerProps = createEmptyLayerProps();\n  const {\n    pointFeatures,\n    lineFeatures,\n    polygonFeatures,\n    polygonOutlineFeatures\n  } = features;\n  layerProps.points.data = pointFeatures;\n\n  layerProps.points._dataDiff = featuresDiff.pointFeatures && (() => featuresDiff.pointFeatures);\n\n  layerProps.points.getPosition = getCoordinates;\n  layerProps.lines.data = lineFeatures;\n\n  layerProps.lines._dataDiff = featuresDiff.lineFeatures && (() => featuresDiff.lineFeatures);\n\n  layerProps.lines.getPath = getCoordinates;\n  layerProps.polygons.data = polygonFeatures;\n\n  layerProps.polygons._dataDiff = featuresDiff.polygonFeatures && (() => featuresDiff.polygonFeatures);\n\n  layerProps.polygons.getPolygon = getCoordinates;\n  layerProps.polygonsOutline.data = polygonOutlineFeatures;\n\n  layerProps.polygonsOutline._dataDiff = featuresDiff.polygonOutlineFeatures && (() => featuresDiff.polygonOutlineFeatures);\n\n  layerProps.polygonsOutline.getPath = getCoordinates;\n  return layerProps;\n}\nexport function createLayerPropsFromBinary(geojsonBinary, encodePickingColor) {\n  const layerProps = createEmptyLayerProps();\n  const {\n    points,\n    lines,\n    polygons\n  } = geojsonBinary;\n  const customPickingColors = calculatePickingColors(geojsonBinary, encodePickingColor);\n  layerProps.points.data = {\n    length: points.positions.value.length / points.positions.size,\n    attributes: {\n      getPosition: points.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.points\n      }\n    },\n    properties: points.properties,\n    numericProps: points.numericProps,\n    featureIds: points.featureIds\n  };\n  layerProps.lines.data = {\n    length: lines.pathIndices.value.length - 1,\n    startIndices: lines.pathIndices.value,\n    attributes: {\n      getPath: lines.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.lines\n      }\n    },\n    properties: lines.properties,\n    numericProps: lines.numericProps,\n    featureIds: lines.featureIds\n  };\n  layerProps.lines._pathType = 'open';\n  layerProps.polygons.data = {\n    length: polygons.polygonIndices.value.length - 1,\n    startIndices: polygons.polygonIndices.value,\n    attributes: {\n      getPolygon: polygons.positions,\n      pickingColors: {\n        size: 3,\n        value: customPickingColors.polygons\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  };\n  layerProps.polygons._normalize = false;\n\n  if (polygons.triangles) {\n    layerProps.polygons.data.attributes.indices = polygons.triangles.value;\n  }\n\n  layerProps.polygonsOutline.data = {\n    length: polygons.primitivePolygonIndices.value.length - 1,\n    startIndices: polygons.primitivePolygonIndices.value,\n    attributes: {\n      getPath: polygons.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.polygons\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  };\n  layerProps.polygonsOutline._pathType = 'open';\n  return layerProps;\n}\n//# sourceMappingURL=geojson-layer-props.js.map","import { CompositeLayer, log } from '@deck.gl/core';\nimport { replaceInRange } from '../utils';\nimport { binaryToFeatureForAccesor } from './geojson-binary';\nimport { POINT_LAYER, LINE_LAYER, POLYGON_LAYER, getDefaultProps, forwardProps } from './sub-layer-map';\nimport { getGeojsonFeatures, separateGeojsonFeatures } from './geojson';\nimport { createLayerPropsFromFeatures, createLayerPropsFromBinary } from './geojson-layer-props';\nconst defaultProps = { ...getDefaultProps(POINT_LAYER.circle),\n  ...getDefaultProps(POINT_LAYER.icon),\n  ...getDefaultProps(POINT_LAYER.text),\n  ...getDefaultProps(LINE_LAYER),\n  ...getDefaultProps(POLYGON_LAYER),\n  stroked: true,\n  filled: true,\n  extruded: false,\n  wireframe: false,\n  iconAtlas: {\n    type: 'object',\n    value: null\n  },\n  iconMapping: {\n    type: 'object',\n    value: {}\n  },\n  getIcon: {\n    type: 'accessor',\n    value: f => f.properties.icon\n  },\n  getText: {\n    type: 'accessor',\n    value: f => f.properties.text\n  },\n  pointType: 'circle',\n  getRadius: {\n    deprecatedFor: 'getPointRadius'\n  }\n};\nexport default class GeoJsonLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      layerProps: {},\n      features: {}\n    };\n\n    if (this.props.getLineDashArray) {\n      log.removed('getLineDashArray', 'PathStyleExtension')();\n    }\n  }\n\n  updateState({\n    props,\n    changeFlags\n  }) {\n    if (!changeFlags.dataChanged) {\n      return;\n    }\n\n    const {\n      data\n    } = this.props;\n    const binary = data && 'points' in data && 'polygons' in data && 'lines' in data;\n    this.setState({\n      binary\n    });\n\n    if (binary) {\n      this._updateStateBinary({\n        props,\n        changeFlags\n      });\n    } else {\n      this._updateStateJSON({\n        props,\n        changeFlags\n      });\n    }\n  }\n\n  _updateStateBinary({\n    props,\n    changeFlags\n  }) {\n    const layerProps = createLayerPropsFromBinary(props.data, this.encodePickingColor);\n    this.setState({\n      layerProps\n    });\n  }\n\n  _updateStateJSON({\n    props,\n    changeFlags\n  }) {\n    const features = getGeojsonFeatures(props.data);\n    const wrapFeature = this.getSubLayerRow.bind(this);\n    let newFeatures = {};\n    const featuresDiff = {};\n\n    if (Array.isArray(changeFlags.dataChanged)) {\n      const oldFeatures = this.state.features;\n\n      for (const key in oldFeatures) {\n        newFeatures[key] = oldFeatures[key].slice();\n        featuresDiff[key] = [];\n      }\n\n      for (const dataRange of changeFlags.dataChanged) {\n        const partialFeatures = separateGeojsonFeatures(features, wrapFeature, dataRange);\n\n        for (const key in oldFeatures) {\n          featuresDiff[key].push(replaceInRange({\n            data: newFeatures[key],\n            getIndex: f => f.__source.index,\n            dataRange,\n            replace: partialFeatures[key]\n          }));\n        }\n      }\n    } else {\n      newFeatures = separateGeojsonFeatures(features, wrapFeature);\n    }\n\n    const layerProps = createLayerPropsFromFeatures(newFeatures, featuresDiff);\n    this.setState({\n      features: newFeatures,\n      featuresDiff,\n      layerProps\n    });\n  }\n\n  _updateAutoHighlight(info) {\n    const pointLayerIdPrefix = \"\".concat(this.id, \"-points-\");\n    const sourceIsPoints = info.sourceLayer.id.startsWith(pointLayerIdPrefix);\n\n    for (const layer of this.getSubLayers()) {\n      if (layer.id.startsWith(pointLayerIdPrefix) === sourceIsPoints) {\n        layer.updateAutoHighlight(info);\n      }\n    }\n  }\n\n  _renderPolygonLayer() {\n    const {\n      extruded,\n      wireframe\n    } = this.props;\n    const {\n      layerProps\n    } = this.state;\n    const id = 'polygons-fill';\n    const PolygonFillLayer = this.shouldRenderSubLayer(id, layerProps.polygons.data) && this.getSubLayerClass(id, POLYGON_LAYER.type);\n\n    if (PolygonFillLayer) {\n      const forwardedProps = forwardProps(this, POLYGON_LAYER.props);\n      const useLineColor = extruded && wireframe;\n\n      if (!useLineColor) {\n        delete forwardedProps.getLineColor;\n      }\n\n      forwardedProps.updateTriggers.lineColors = useLineColor;\n      return new PolygonFillLayer(forwardedProps, this.getSubLayerProps({\n        id,\n        updateTriggers: forwardedProps.updateTriggers\n      }), layerProps.polygons);\n    }\n\n    return null;\n  }\n\n  _renderLineLayers() {\n    const {\n      extruded,\n      stroked\n    } = this.props;\n    const {\n      layerProps\n    } = this.state;\n    const polygonStrokeLayerId = 'polygons-stroke';\n    const lineStringsLayerId = 'linestrings';\n    const PolygonStrokeLayer = !extruded && stroked && this.shouldRenderSubLayer(polygonStrokeLayerId, layerProps.polygonsOutline.data) && this.getSubLayerClass(polygonStrokeLayerId, LINE_LAYER.type);\n    const LineStringsLayer = this.shouldRenderSubLayer(lineStringsLayerId, layerProps.lines.data) && this.getSubLayerClass(lineStringsLayerId, LINE_LAYER.type);\n\n    if (PolygonStrokeLayer || LineStringsLayer) {\n      const forwardedProps = forwardProps(this, LINE_LAYER.props);\n      return [PolygonStrokeLayer && new PolygonStrokeLayer(forwardedProps, this.getSubLayerProps({\n        id: polygonStrokeLayerId,\n        updateTriggers: forwardedProps.updateTriggers\n      }), layerProps.polygonsOutline), LineStringsLayer && new LineStringsLayer(forwardedProps, this.getSubLayerProps({\n        id: lineStringsLayerId,\n        updateTriggers: forwardedProps.updateTriggers\n      }), layerProps.lines)];\n    }\n\n    return null;\n  }\n\n  _renderPointLayers() {\n    const {\n      pointType\n    } = this.props;\n    const {\n      layerProps,\n      binary\n    } = this.state;\n    let {\n      highlightedObjectIndex\n    } = this.props;\n\n    if (!binary && Number.isFinite(highlightedObjectIndex)) {\n      highlightedObjectIndex = layerProps.points.data.findIndex(d => d.__source.index === highlightedObjectIndex);\n    }\n\n    const types = new Set(pointType.split('+'));\n    const pointLayers = [];\n\n    for (const type of types) {\n      const id = \"points-\".concat(type);\n      const PointLayerMapping = POINT_LAYER[type];\n      const PointsLayer = PointLayerMapping && this.shouldRenderSubLayer(id, layerProps.points.data) && this.getSubLayerClass(id, PointLayerMapping.type);\n\n      if (PointsLayer) {\n        const forwardedProps = forwardProps(this, PointLayerMapping.props);\n        pointLayers.push(new PointsLayer(forwardedProps, this.getSubLayerProps({\n          id,\n          updateTriggers: forwardedProps.updateTriggers,\n          highlightedObjectIndex\n        }), layerProps.points));\n      }\n    }\n\n    return pointLayers;\n  }\n\n  renderLayers() {\n    const {\n      extruded\n    } = this.props;\n\n    const polygonFillLayer = this._renderPolygonLayer();\n\n    const lineLayers = this._renderLineLayers();\n\n    const pointLayers = this._renderPointLayers();\n\n    return [!extruded && polygonFillLayer, lineLayers, pointLayers, extruded && polygonFillLayer];\n  }\n\n  getSubLayerAccessor(accessor) {\n    const {\n      binary\n    } = this.state;\n\n    if (!binary || typeof accessor !== 'function') {\n      return super.getSubLayerAccessor(accessor);\n    }\n\n    return (object, info) => {\n      const {\n        data,\n        index\n      } = info;\n      const feature = binaryToFeatureForAccesor(data, index);\n      return accessor(feature, info);\n    };\n  }\n\n}\nGeoJsonLayer.layerName = 'GeoJsonLayer';\nGeoJsonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=geojson-layer.js.map","const GEOM_TYPES = ['points', 'lines', 'polygons'];\nexport function binaryToFeatureForAccesor(data, index) {\n  if (!data) {\n    return null;\n  }\n\n  const featureIndex = 'startIndices' in data ? data.startIndices[index] : index;\n  const geometryIndex = data.featureIds.value[featureIndex];\n\n  if (featureIndex !== -1) {\n    return getPropertiesForIndex(data, geometryIndex, featureIndex);\n  }\n\n  return null;\n}\n\nfunction getPropertiesForIndex(data, propertiesIndex, numericPropsIndex) {\n  const feature = {\n    properties: { ...data.properties[propertiesIndex]\n    }\n  };\n\n  for (const prop in data.numericProps) {\n    feature.properties[prop] = data.numericProps[prop].value[numericPropsIndex];\n  }\n\n  return feature;\n}\n\nexport function findIndexBinary(data, uniqueIdProperty, featureId) {\n  if (!data) {\n    return -1;\n  }\n\n  for (const gt of GEOM_TYPES) {\n    const index = findIndexByType(data, uniqueIdProperty, featureId, gt);\n\n    if (index !== -1) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nfunction findIndexByType(data, uniqueIdProperty, featureId, geomType) {\n  if (!data) {\n    return -1;\n  }\n\n  if (!(geomType in data) || !data[geomType].positions.value.length) return -1;\n  let index = -1;\n\n  if (data[geomType].numericProps[uniqueIdProperty]) {\n    index = data[geomType].numericProps[uniqueIdProperty].value.indexOf(featureId);\n  } else {\n    const propertyIndex = data[geomType].properties.findIndex(elem => elem[uniqueIdProperty] === featureId);\n    index = data[geomType].featureIds.value.indexOf(propertyIndex);\n  }\n\n  return index;\n}\n\nexport function calculatePickingColors(geojsonBinary, encodePickingColor) {\n  const pickingColors = {\n    points: null,\n    lines: null,\n    polygons: null\n  };\n\n  for (const key in pickingColors) {\n    const featureIds = geojsonBinary[key].globalFeatureIds.value;\n    pickingColors[key] = new Uint8ClampedArray(featureIds.length * 3);\n    const pickingColor = [];\n\n    for (let i = 0; i < featureIds.length; i++) {\n      encodePickingColor(featureIds[i], pickingColor);\n      pickingColors[key][i * 3 + 0] = pickingColor[0];\n      pickingColors[key][i * 3 + 1] = pickingColor[1];\n      pickingColors[key][i * 3 + 2] = pickingColor[2];\n    }\n  }\n\n  return pickingColors;\n}\n//# sourceMappingURL=geojson-binary.js.map","export default \"#define SHADER_NAME scatterplot-layer-vertex-shader\\n\\nattribute vec3 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute float instanceRadius;\\nattribute float instanceLineWidths;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform float opacity;\\nuniform float radiusScale;\\nuniform float radiusMinPixels;\\nuniform float radiusMaxPixels;\\nuniform float lineWidthScale;\\nuniform float lineWidthMinPixels;\\nuniform float lineWidthMaxPixels;\\nuniform float stroked;\\nuniform bool filled;\\nuniform bool billboard;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying vec2 unitPosition;\\nvarying float innerUnitRadius;\\nvarying float outerRadiusPixels;\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  outerRadiusPixels = clamp(\\n    project_size_to_pixel(radiusScale * instanceRadius),\\n    radiusMinPixels, radiusMaxPixels\\n  );\\n  float lineWidthPixels = clamp(\\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\\n    lineWidthMinPixels, lineWidthMaxPixels\\n  );\\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\\n  unitPosition = positions.xy;\\n  geometry.uv = unitPosition;\\n  geometry.pickingColor = instancePickingColors;\\n\\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\\n  \\n  if (billboard) {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = positions * outerRadiusPixels;\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n  } else {\\n    vec3 offset = positions * project_pixel_size(outerRadiusPixels);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\\n  }\\n\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\\n}\\n\";\n//# sourceMappingURL=scatterplot-layer-vertex.glsl.js.map","import { Layer, project32, picking } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  radiusUnits: 'meters',\n  radiusScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  radiusMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  radiusMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  lineWidthUnits: 'meters',\n  lineWidthScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  lineWidthMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  lineWidthMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  stroked: false,\n  filled: true,\n  billboard: false,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getRadius: {\n    type: 'accessor',\n    value: 1\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  strokeWidth: {\n    deprecatedFor: 'getLineWidth'\n  },\n  outline: {\n    deprecatedFor: 'stroked'\n  },\n  getColor: {\n    deprecatedFor: ['getFillColor', 'getLineColor']\n  }\n};\nexport default class ScatterplotLayer extends Layer {\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceFillColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState({\n    props,\n    oldProps,\n    changeFlags\n  }) {\n    super.updateState({\n      props,\n      oldProps,\n      changeFlags\n    });\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      viewport\n    } = this.context;\n    const {\n      radiusUnits,\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      stroked,\n      filled,\n      billboard,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    } = this.props;\n    const pointRadiusMultiplier = radiusUnits === 'pixels' ? viewport.metersPerPixel : 1;\n    const lineWidthMultiplier = lineWidthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      stroked: stroked ? 1 : 0,\n      filled,\n      billboard,\n      radiusScale: radiusScale * pointRadiusMultiplier,\n      radiusMinPixels,\n      radiusMaxPixels,\n      lineWidthScale: lineWidthScale * lineWidthMultiplier,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const positions = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 3,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n}\nScatterplotLayer.layerName = 'ScatterplotLayer';\nScatterplotLayer.defaultProps = defaultProps;\n//# sourceMappingURL=scatterplot-layer.js.map","export default \"#define SHADER_NAME scatterplot-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform bool filled;\\nuniform float stroked;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying vec2 unitPosition;\\nvarying float innerUnitRadius;\\nvarying float outerRadiusPixels;\\n\\nvoid main(void) {\\n  geometry.uv = unitPosition;\\n\\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\\n  float inCircle = smoothedge(distToCenter, outerRadiusPixels);\\n\\n  if (inCircle == 0.0) {\\n    discard;\\n  }\\n\\n  if (stroked > 0.5) {\\n    float isLine = smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter);\\n    if (filled) {\\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\\n    } else {\\n      if (isLine == 0.0) {\\n        discard;\\n      }\\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\\n    }\\n  } else if (filled) {\\n    gl_FragColor = vFillColor;\\n  } else {\\n    discard;\\n  }\\n\\n  gl_FragColor.a *= inCircle;\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=scatterplot-layer-fragment.glsl.js.map","module.exports = Extent;\n\nfunction Extent(bbox) {\n    if (!(this instanceof Extent)) {\n        return new Extent(bbox);\n    }\n    this._bbox = bbox || [Infinity, Infinity, -Infinity, -Infinity];\n    this._valid = !!bbox;\n}\n\nExtent.prototype.include = function(ll) {\n    this._valid = true;\n    this._bbox[0] = Math.min(this._bbox[0], ll[0]);\n    this._bbox[1] = Math.min(this._bbox[1], ll[1]);\n    this._bbox[2] = Math.max(this._bbox[2], ll[0]);\n    this._bbox[3] = Math.max(this._bbox[3], ll[1]);\n    return this;\n};\n\nExtent.prototype.equals = function(_) {\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    return this._bbox[0] == other[0] &&\n        this._bbox[1] == other[1] &&\n        this._bbox[2] == other[2] &&\n        this._bbox[3] == other[3];\n};\n\nExtent.prototype.center = function(_) {\n    if (!this._valid) return null;\n    return [\n        (this._bbox[0] + this._bbox[2]) / 2,\n        (this._bbox[1] + this._bbox[3]) / 2]\n};\n\nExtent.prototype.union = function(_) {\n    this._valid = true;\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    this._bbox[0] = Math.min(this._bbox[0], other[0]);\n    this._bbox[1] = Math.min(this._bbox[1], other[1]);\n    this._bbox[2] = Math.max(this._bbox[2], other[2]);\n    this._bbox[3] = Math.max(this._bbox[3], other[3]);\n    return this;\n};\n\nExtent.prototype.bbox = function() {\n    if (!this._valid) return null;\n    return this._bbox;\n};\n\nExtent.prototype.contains = function(ll) {\n    if (!ll) return this._fastContains();\n    if (!this._valid) return null;\n    var lon = ll[0], lat = ll[1];\n    return this._bbox[0] <= lon &&\n        this._bbox[1] <= lat &&\n        this._bbox[2] >= lon &&\n        this._bbox[3] >= lat;\n};\n\nExtent.prototype.intersect = function(_) {\n    if (!this._valid) return null;\n\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n\n    return !(\n      this._bbox[0] > other[2] ||\n      this._bbox[2] < other[0] ||\n      this._bbox[3] < other[1] ||\n      this._bbox[1] > other[3]\n    );\n};\n\nExtent.prototype._fastContains = function() {\n    if (!this._valid) return new Function('return null;');\n    var body = 'return ' +\n        this._bbox[0] + '<= ll[0] &&' +\n        this._bbox[1] + '<= ll[1] &&' +\n        this._bbox[2] + '>= ll[0] &&' +\n        this._bbox[3] + '>= ll[1]';\n    return new Function('ll', body);\n};\n\nExtent.prototype.polygon = function() {\n    if (!this._valid) return null;\n    return {\n        type: 'Polygon',\n        coordinates: [\n            [\n                // W, S\n                [this._bbox[0], this._bbox[1]],\n                // E, S\n                [this._bbox[2], this._bbox[1]],\n                // E, N\n                [this._bbox[2], this._bbox[3]],\n                // W, N\n                [this._bbox[0], this._bbox[3]],\n                // W, S\n                [this._bbox[0], this._bbox[1]]\n            ]\n        ]\n    };\n};\n","module.exports = function flatten(list) {\n    return _flatten(list);\n\n    function _flatten(list) {\n        if (Array.isArray(list) && list.length &&\n            typeof list[0] === 'number') {\n            return [list];\n        }\n        return list.reduce(function (acc, item) {\n            if (Array.isArray(item) && Array.isArray(item[0])) {\n                return acc.concat(_flatten(item));\n            } else {\n                acc.push(item);\n                return acc;\n            }\n        }, []);\n    }\n};\n","var geojsonNormalize = require('@mapbox/geojson-normalize'),\n    geojsonFlatten = require('geojson-flatten'),\n    flatten = require('./flatten');\n\nif (!(geojsonFlatten instanceof Function)) geojsonFlatten = geojsonFlatten.default;\n\nmodule.exports = function(_) {\n    if (!_) return [];\n    var normalized = geojsonFlatten(geojsonNormalize(_)),\n        coordinates = [];\n    normalized.features.forEach(function(feature) {\n        if (!feature.geometry) return;\n        coordinates = coordinates.concat(flatten(feature.geometry.coordinates));\n    });\n    return coordinates;\n};\n","var geojsonCoords = require('@mapbox/geojson-coords'),\n    traverse = require('traverse'),\n    extent = require('@mapbox/extent');\n\nvar geojsonTypesByDataAttributes = {\n    features: ['FeatureCollection'],\n    coordinates: ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'],\n    geometry: ['Feature'],\n    geometries: ['GeometryCollection']\n}\n\nvar dataAttributes = Object.keys(geojsonTypesByDataAttributes);\n\nmodule.exports = function(_) {\n    return getExtent(_).bbox();\n};\n\nmodule.exports.polygon = function(_) {\n    return getExtent(_).polygon();\n};\n\nmodule.exports.bboxify = function(_) {\n    return traverse(_).map(function(value) {\n        if (!value) return ;\n\n        var isValid = dataAttributes.some(function(attribute){\n            if(value[attribute]) {\n                return geojsonTypesByDataAttributes[attribute].indexOf(value.type) !== -1;\n            }\n            return false;\n        });\n\n        if(isValid){\n            value.bbox = getExtent(value).bbox();\n            this.update(value);\n        }\n\n    });\n};\n\nfunction getExtent(_) {\n    var ext = extent(),\n        coords = geojsonCoords(_);\n    for (var i = 0; i < coords.length; i++) ext.include(coords[i]);\n    return ext;\n}\n","module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n","'use strict';\n\nmodule.exports = TinySDF;\nmodule.exports.default = TinySDF;\n\nvar INF = 1e20;\n\nfunction TinySDF(fontSize, buffer, radius, cutoff, fontFamily, fontWeight) {\n    this.fontSize = fontSize || 24;\n    this.buffer = buffer === undefined ? 3 : buffer;\n    this.cutoff = cutoff || 0.25;\n    this.fontFamily = fontFamily || 'sans-serif';\n    this.fontWeight = fontWeight || 'normal';\n    this.radius = radius || 8;\n\n    // For backwards compatibility, we honor the implicit contract that the\n    // size of the returned bitmap will be fontSize + buffer * 2\n    var size = this.size = this.fontSize + this.buffer * 2;\n    // Glyphs may be slightly larger than their fontSize. The canvas already\n    // has buffer space, but create extra buffer space in the output grid for the\n    // \"halo\" to extend into (if metric extraction is enabled)\n    var gridSize = size + this.buffer * 2;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = size;\n\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\n\n    this.ctx.textAlign = 'left'; // Necessary so that RTL text doesn't have different alignment\n    this.ctx.fillStyle = 'black';\n\n    // temporary arrays for the distance transform\n    this.gridOuter = new Float64Array(gridSize * gridSize);\n    this.gridInner = new Float64Array(gridSize * gridSize);\n    this.f = new Float64Array(gridSize);\n    this.z = new Float64Array(gridSize + 1);\n    this.v = new Uint16Array(gridSize);\n\n    this.useMetrics = this.ctx.measureText('A').actualBoundingBoxLeft !== undefined;\n\n    // hack around https://bugzilla.mozilla.org/show_bug.cgi?id=737852\n    this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\n}\n\nfunction prepareGrids(imgData, width, height, glyphWidth, glyphHeight, gridOuter, gridInner) {\n    // Initialize grids outside the glyph range to alpha 0\n    gridOuter.fill(INF, 0, width * height);\n    gridInner.fill(0, 0, width * height);\n\n    var offset = (width - glyphWidth) / 2; // This is zero if we're not extracting metrics\n\n    for (var y = 0; y < glyphHeight; y++) {\n        for (var x = 0; x < glyphWidth; x++) {\n            var j = (y + offset) * width + x + offset;\n            var a = imgData.data[4 * (y * glyphWidth + x) + 3] / 255; // alpha value\n            if (a === 1) {\n                gridOuter[j] = 0;\n                gridInner[j] = INF;\n            } else if (a === 0) {\n                gridOuter[j] = INF;\n                gridInner[j] = 0;\n            } else {\n                var b = Math.max(0, 0.5 - a);\n                var c = Math.max(0, a - 0.5);\n                gridOuter[j] = b * b;\n                gridInner[j] = c * c;\n            }\n        }\n    }\n}\n\nfunction extractAlpha(alphaChannel, width, height, gridOuter, gridInner, radius, cutoff) {\n    for (var i = 0; i < width * height; i++) {\n        var d = Math.sqrt(gridOuter[i]) - Math.sqrt(gridInner[i]);\n        alphaChannel[i] = Math.round(255 - 255 * (d / radius + cutoff));\n    }\n}\n\nTinySDF.prototype._draw = function (char, getMetrics) {\n    var textMetrics = this.ctx.measureText(char);\n    // Older browsers only expose the glyph width\n    // This is enough for basic layout with all glyphs using the same fixed size\n    var advance = textMetrics.width;\n\n    var doubleBuffer = 2 * this.buffer;\n    var width, glyphWidth, height, glyphHeight, top;\n\n    var imgTop, imgLeft, baselinePosition;\n    // If the browser supports bounding box metrics, we can generate a smaller\n    // SDF. This is a significant performance win.\n    if (getMetrics && this.useMetrics) {\n        // The integer/pixel part of the top alignment is encoded in metrics.top\n        // The remainder is implicitly encoded in the rasterization\n        top = Math.floor(textMetrics.actualBoundingBoxAscent);\n        baselinePosition = this.buffer + Math.ceil(textMetrics.actualBoundingBoxAscent);\n        imgTop = this.buffer;\n        imgLeft = this.buffer;\n\n        // If the glyph overflows the canvas size, it will be clipped at the\n        // bottom/right\n        glyphWidth = Math.min(this.size,\n            Math.ceil(textMetrics.actualBoundingBoxRight - textMetrics.actualBoundingBoxLeft));\n        glyphHeight = Math.min(this.size - imgTop,\n            Math.ceil(textMetrics.actualBoundingBoxAscent + textMetrics.actualBoundingBoxDescent));\n\n        width = glyphWidth + doubleBuffer;\n        height = glyphHeight + doubleBuffer;\n        this.ctx.textBaseline = 'alphabetic';\n    } else {\n        width = glyphWidth = this.size;\n        height = glyphHeight = this.size;\n        // 19 points is an approximation of the \"cap height\" ascent from alphabetic\n        // baseline (even though actual drawing is from middle baseline, we can\n        // use the approximation because every glyph fills the em box)\n        top = 19 * this.fontSize / 24;\n        imgTop = imgLeft = 0;\n        baselinePosition = this.middle;\n        this.ctx.textBaseline = 'middle';\n    }\n\n    var imgData;\n    if (glyphWidth && glyphHeight) {\n        this.ctx.clearRect(imgLeft, imgTop, glyphWidth, glyphHeight);\n        this.ctx.fillText(char, this.buffer, baselinePosition);\n        imgData = this.ctx.getImageData(imgLeft, imgTop, glyphWidth, glyphHeight);\n    }\n\n    var alphaChannel = new Uint8ClampedArray(width * height);\n\n    prepareGrids(imgData, width, height, glyphWidth, glyphHeight, this.gridOuter, this.gridInner);\n\n    edt(this.gridOuter, width, height, this.f, this.v, this.z);\n    edt(this.gridInner, width, height, this.f, this.v, this.z);\n\n    extractAlpha(alphaChannel, width, height, this.gridOuter, this.gridInner, this.radius, this.cutoff);\n\n    return {\n        data: alphaChannel,\n        metrics: {\n            width: glyphWidth,\n            height: glyphHeight,\n            sdfWidth: width,\n            sdfHeight: height,\n            top: top,\n            left: 0,\n            advance: advance\n        }\n    };\n};\n\nTinySDF.prototype.draw = function (char) {\n    return this._draw(char, false).data;\n};\n\nTinySDF.prototype.drawWithMetrics = function (char) {\n    return this._draw(char, true);\n};\n\n// 2D Euclidean squared distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\nfunction edt(data, width, height, f, v, z) {\n    for (var x = 0; x < width; x++) edt1d(data, x, width, height, f, v, z);\n    for (var y = 0; y < height; y++) edt1d(data, y * width, 1, width, f, v, z);\n}\n\n// 1D squared distance transform\nfunction edt1d(grid, offset, stride, length, f, v, z) {\n    var q, k, s, r;\n    v[0] = 0;\n    z[0] = -INF;\n    z[1] = INF;\n\n    for (q = 0; q < length; q++) f[q] = grid[offset + q * stride];\n\n    for (q = 1, k = 0, s = 0; q < length; q++) {\n        do {\n            r = v[k];\n            s = (f[q] - f[r] + q * q - r * r) / (q - r) / 2;\n        } while (s <= z[k] && --k > -1);\n\n        k++;\n        v[k] = q;\n        z[k] = s;\n        z[k + 1] = INF;\n    }\n\n    for (q = 0, k = 0; q < length; q++) {\n        while (z[k + 1] < q) k++;\n        r = v[k];\n        grid[offset + q * stride] = f[r] + (q - r) * (q - r);\n    }\n}\n","export default function e(t){switch(t&&t.type||null){case\"FeatureCollection\":return t.features=t.features.reduce(function(t,r){return t.concat(e(r))},[]),t;case\"Feature\":return t.geometry?e(t.geometry).map(function(e){var r={type:\"Feature\",properties:JSON.parse(JSON.stringify(t.properties)),geometry:e};return void 0!==t.id&&(r.id=t.id),r}):[t];case\"MultiPoint\":return t.coordinates.map(function(e){return{type:\"Point\",coordinates:e}});case\"MultiPolygon\":return t.coordinates.map(function(e){return{type:\"Polygon\",coordinates:e}});case\"MultiLineString\":return t.coordinates.map(function(e){return{type:\"LineString\",coordinates:e}});case\"GeometryCollection\":return t.geometries.map(e).reduce(function(e,t){return e.concat(t)},[]);case\"Point\":case\"Polygon\":case\"LineString\":return[t]}}\n//# sourceMappingURL=index.es.js.map\n","var traverse = module.exports = function (obj) {\n    return new Traverse(obj);\n};\n\nfunction Traverse (obj) {\n    this.value = obj;\n}\n\nTraverse.prototype.get = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            node = undefined;\n            break;\n        }\n        node = node[key];\n    }\n    return node;\n};\n\nTraverse.prototype.has = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            return false;\n        }\n        node = node[key];\n    }\n    return true;\n};\n\nTraverse.prototype.set = function (ps, value) {\n    var node = this.value;\n    for (var i = 0; i < ps.length - 1; i ++) {\n        var key = ps[i];\n        if (!hasOwnProperty.call(node, key)) node[key] = {};\n        node = node[key];\n    }\n    node[ps[i]] = value;\n    return value;\n};\n\nTraverse.prototype.map = function (cb) {\n    return walk(this.value, cb, true);\n};\n\nTraverse.prototype.forEach = function (cb) {\n    this.value = walk(this.value, cb, false);\n    return this.value;\n};\n\nTraverse.prototype.reduce = function (cb, init) {\n    var skip = arguments.length === 1;\n    var acc = skip ? this.value : init;\n    this.forEach(function (x) {\n        if (!this.isRoot || !skip) {\n            acc = cb.call(this, acc, x);\n        }\n    });\n    return acc;\n};\n\nTraverse.prototype.paths = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.path); \n    });\n    return acc;\n};\n\nTraverse.prototype.nodes = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.node);\n    });\n    return acc;\n};\n\nTraverse.prototype.clone = function () {\n    var parents = [], nodes = [];\n    \n    return (function clone (src) {\n        for (var i = 0; i < parents.length; i++) {\n            if (parents[i] === src) {\n                return nodes[i];\n            }\n        }\n        \n        if (typeof src === 'object' && src !== null) {\n            var dst = copy(src);\n            \n            parents.push(src);\n            nodes.push(dst);\n            \n            forEach(objectKeys(src), function (key) {\n                dst[key] = clone(src[key]);\n            });\n            \n            parents.pop();\n            nodes.pop();\n            return dst;\n        }\n        else {\n            return src;\n        }\n    })(this.value);\n};\n\nfunction walk (root, cb, immutable) {\n    var path = [];\n    var parents = [];\n    var alive = true;\n    \n    return (function walker (node_) {\n        var node = immutable ? copy(node_) : node_;\n        var modifiers = {};\n        \n        var keepGoing = true;\n        \n        var state = {\n            node : node,\n            node_ : node_,\n            path : [].concat(path),\n            parent : parents[parents.length - 1],\n            parents : parents,\n            key : path.slice(-1)[0],\n            isRoot : path.length === 0,\n            level : path.length,\n            circular : null,\n            update : function (x, stopHere) {\n                if (!state.isRoot) {\n                    state.parent.node[state.key] = x;\n                }\n                state.node = x;\n                if (stopHere) keepGoing = false;\n            },\n            'delete' : function (stopHere) {\n                delete state.parent.node[state.key];\n                if (stopHere) keepGoing = false;\n            },\n            remove : function (stopHere) {\n                if (isArray(state.parent.node)) {\n                    state.parent.node.splice(state.key, 1);\n                }\n                else {\n                    delete state.parent.node[state.key];\n                }\n                if (stopHere) keepGoing = false;\n            },\n            keys : null,\n            before : function (f) { modifiers.before = f },\n            after : function (f) { modifiers.after = f },\n            pre : function (f) { modifiers.pre = f },\n            post : function (f) { modifiers.post = f },\n            stop : function () { alive = false },\n            block : function () { keepGoing = false }\n        };\n        \n        if (!alive) return state;\n        \n        function updateState() {\n            if (typeof state.node === 'object' && state.node !== null) {\n                if (!state.keys || state.node_ !== state.node) {\n                    state.keys = objectKeys(state.node)\n                }\n                \n                state.isLeaf = state.keys.length == 0;\n                \n                for (var i = 0; i < parents.length; i++) {\n                    if (parents[i].node_ === node_) {\n                        state.circular = parents[i];\n                        break;\n                    }\n                }\n            }\n            else {\n                state.isLeaf = true;\n                state.keys = null;\n            }\n            \n            state.notLeaf = !state.isLeaf;\n            state.notRoot = !state.isRoot;\n        }\n        \n        updateState();\n        \n        // use return values to update if defined\n        var ret = cb.call(state, state.node);\n        if (ret !== undefined && state.update) state.update(ret);\n        \n        if (modifiers.before) modifiers.before.call(state, state.node);\n        \n        if (!keepGoing) return state;\n        \n        if (typeof state.node == 'object'\n        && state.node !== null && !state.circular) {\n            parents.push(state);\n            \n            updateState();\n            \n            forEach(state.keys, function (key, i) {\n                path.push(key);\n                \n                if (modifiers.pre) modifiers.pre.call(state, state.node[key], key);\n                \n                var child = walker(state.node[key]);\n                if (immutable && hasOwnProperty.call(state.node, key)) {\n                    state.node[key] = child.node;\n                }\n                \n                child.isLast = i == state.keys.length - 1;\n                child.isFirst = i == 0;\n                \n                if (modifiers.post) modifiers.post.call(state, child);\n                \n                path.pop();\n            });\n            parents.pop();\n        }\n        \n        if (modifiers.after) modifiers.after.call(state, state.node);\n        \n        return state;\n    })(root).node;\n}\n\nfunction copy (src) {\n    if (typeof src === 'object' && src !== null) {\n        var dst;\n        \n        if (isArray(src)) {\n            dst = [];\n        }\n        else if (isDate(src)) {\n            dst = new Date(src.getTime ? src.getTime() : src);\n        }\n        else if (isRegExp(src)) {\n            dst = new RegExp(src);\n        }\n        else if (isError(src)) {\n            dst = { message: src.message };\n        }\n        else if (isBoolean(src)) {\n            dst = new Boolean(src);\n        }\n        else if (isNumber(src)) {\n            dst = new Number(src);\n        }\n        else if (isString(src)) {\n            dst = new String(src);\n        }\n        else if (Object.create && Object.getPrototypeOf) {\n            dst = Object.create(Object.getPrototypeOf(src));\n        }\n        else if (src.constructor === Object) {\n            dst = {};\n        }\n        else {\n            var proto =\n                (src.constructor && src.constructor.prototype)\n                || src.__proto__\n                || {}\n            ;\n            var T = function () {};\n            T.prototype = proto;\n            dst = new T;\n        }\n        \n        forEach(objectKeys(src), function (key) {\n            dst[key] = src[key];\n        });\n        return dst;\n    }\n    else return src;\n}\n\nvar objectKeys = Object.keys || function keys (obj) {\n    var res = [];\n    for (var key in obj) res.push(key)\n    return res;\n};\n\nfunction toS (obj) { return Object.prototype.toString.call(obj) }\nfunction isDate (obj) { return toS(obj) === '[object Date]' }\nfunction isRegExp (obj) { return toS(obj) === '[object RegExp]' }\nfunction isError (obj) { return toS(obj) === '[object Error]' }\nfunction isBoolean (obj) { return toS(obj) === '[object Boolean]' }\nfunction isNumber (obj) { return toS(obj) === '[object Number]' }\nfunction isString (obj) { return toS(obj) === '[object String]' }\n\nvar isArray = Array.isArray || function isArray (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nforEach(objectKeys(Traverse.prototype), function (key) {\n    traverse[key] = function (obj) {\n        var args = [].slice.call(arguments, 1);\n        var t = new Traverse(obj);\n        return t[key].apply(t, args);\n    };\n});\n\nvar hasOwnProperty = Object.hasOwnProperty || function (obj, key) {\n    return key in obj;\n};\n"],"names":["noop","DEFAULT_TEXTURE_PARAMETERS","resizeImage","ctx","imageData","width","height","canvas","clearRect","drawImage","getIconId","icon","id","url","buildRowMapping","mapping","columns","yOffset","i","length","xOffset","x","y","IconManager","constructor","gl","onUpdate","onError","this","_loadOptions","_getIcon","_texture","_externalTexture","_mapping","_pendingCount","_autoPacking","_xOffset","_yOffset","_rowHeight","_buffer","_canvasWidth","_canvasHeight","_canvas","finalize","_this$_texture","delete","getTexture","getIconMapping","setProps","loadOptions","autoPacking","iconAtlas","iconMapping","data","getIcon","undefined","_updateIconAtlas","document","createElement","_updateAutoPacking","isLoaded","_this$_texture2","icons","Object","values","cachedIcons","iterable","objectInfo","object","index","Error","source","sourceIndex","getDiffIcons","rowHeight","canvasHeight","buffer","canvasWidth","push","Math","max","number","pow","ceil","log2","buildMapping","parameters","texture","oldWidth","oldHeight","newTexture","targetY","resizeTexture","_loadIcons","getContext","load","then","setSubImageData","generateMipmap","catch","error","finally","DEFAULT_COLOR","defaultProps","type","value","async","sizeScale","min","billboard","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","alphaCutoff","getPosition","position","getColor","getSize","getAngle","getPixelOffset","onIconError","compare","optional","IconLayer","getShaders","super","vs","fs","modules","project32","picking","initializeState","state","iconManager","context","_onUpdate","bind","_onError","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","transition","accessor","instanceSizes","defaultValue","instanceOffsets","transform","getInstanceOffset","instanceIconFrames","getInstanceIconFrame","instanceColorModes","getInstanceColorMode","instanceColors","props","colorFormat","normalized","instanceAngles","instancePixelOffset","updateState","oldProps","changeFlags","attributeManager","iconMappingChanged","internalState","isAsyncPropLoading","dataChanged","updateTriggersChanged","all","invalidate","extensionsChanged","_this$state$model","model","_getModel","invalidateAll","finalizeState","draw","uniforms","viewport","iconsTexture","setUniforms","iconsTextureDim","metersPerPixel","geometry","drawMode","attributes","positions","Float32Array","isInstanced","setNeedsRedraw","evt","getCurrentLayer","log","rect","anchorX","anchorY","mask","layerName","EMPTY_ARRAY","MultiIconLayer","instancePickingColors","target","encodePickingColor","params","outlineColor","map","isFinite","setState","sdf","outlineWidth","concat","smoothing","outlineBuffer","gamma","Boolean","Array","from","getIconOffsets","offsets","SINGLE_LINE","getTextWidth","text","startIndex","endIndex","character","frameWidth","frame","breakAll","maxWidth","rowStartCharIndex","rowOffsetLeft","textWidth","autoWrapping","wordBreak","result","groupStartCharIndex","groupEndCharIndex","groupWidth","breakWord","transformRow","line","leftOffsets","rowSize","codePointAt","transformParagraph","paragraph","lineHeight","numCharacters","rowWidth","autoWrappingEnabled","rowOffsetTop","lineStartIndex","lineEndIndex","char","rows","rowIndex","rowStart","rowEnd","j","DEFAULT_CHAR_SET","charSet","String","fromCharCode","getDefaultCharacterSet","DEFAULT_FONT_FAMILY","DEFAULT_FONT_WEIGHT","cache","limit","clear","_cache","_order","get","key","_deleteOrder","_appendOrder","set","keys","_deleteCache","findIndex","o","splice","VALID_PROPS","populateAlphaChannel","alphaChannel","setTextStyle","fontFamily","fontSize","fontWeight","font","fillStyle","textBaseline","textAlign","FontAtlasManager","characterSet","cutoff","radius","_key","_atlas","scale","forEach","prop","oldKey","_getKey","cachedFontAtlas","newChars","cachedMapping","cachedCharSet","Set","has","getNewChars","fontAtlas","_generateFontAtlas","getFontWidth","fontHeight","maxCanvasWidth","row","measureText","getImageData","putImageData","tinySDF","fillText","padding","getBoundingRect","getFillColor","getLineColor","getLineWidth","TextBackgroundLayer","instanceRects","instancePixelOffsets","instanceFillColors","instanceLineColors","instanceLineWidths","sizeScaleMultiplier","stroked","vertexCount","DEFAULT_FONT_SETTINGS","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","FONT_SETTINGS_PROPS","background","getBackgroundColor","getBorderColor","getBorderWidth","backgroundPadding","fontSettings","getText","getTextAnchor","getAlignmentBaseline","backgroundColor","deprecatedFor","TextLayer","styleVersion","fontAtlasManager","textChanged","oldCharacterSet","_updateText","fontChanged","_fontChanged","_updateFontAtlas","getPickingInfo","info","oldFontSettings","some","textBuffer","numInstances","startIndices","autoCharacterSet","texts","characterCount","stride","offset","bytesPerElement","BYTES_PER_ELEMENT","elementStride","elementOffset","codes","codesAtIndex","subarray","fromCodePoint","apply","add","charCode","getTextFromBuffer","ArrayBuffer","isView","_","rowOffset","renderLayers","_dataDiff","transitions","updateTriggers","CharactersLayerClass","getSubLayerClass","BackgroundLayerClass","getSubLayerProps","autoHighlight","POINT_LAYER","circle","filled","lineWidthMaxPixels","lineWidthMinPixels","lineWidthScale","lineWidthUnits","pointRadiusMaxPixels","pointRadiusMinPixels","pointRadiusScale","pointRadiusUnits","getPointRadius","iconSizeMaxPixels","iconSizeMinPixels","iconSizeScale","iconSizeUnits","getIconAngle","getIconColor","getIconPixelOffset","getIconSize","textSizeMaxPixels","textSizeMinPixels","textSizeScale","textSizeUnits","textBackground","textBackgroundPadding","textFontFamily","textFontWeight","textLineHeight","textMaxWidth","textOutlineColor","textOutlineWidth","textWordBreak","textCharacterSet","getTextAngle","getTextColor","getTextPixelOffset","getTextSize","getTextAlignmentBaseline","getTextBackgroundColor","getTextBorderColor","getTextBorderWidth","LINE_LAYER","lineJointRounded","lineCapRounded","lineMiterLimit","POLYGON_LAYER","extruded","wireframe","elevationScale","material","getElevation","getDefaultProps","forwardProps","layer","sourceKey","targetKey","startsWith","getSubLayerAccessor","separateGeojsonFeatures","features","wrapFeature","dataRange","separated","pointFeatures","lineFeatures","polygonFeatures","polygonOutlineFeatures","startRow","endRow","featureIndex","feature","isArray","geometries","separateGeometry","sourceFeature","sourceFeatureIndex","coordinates","nestLevel","COORDINATE_NEST_LEVEL","validateGeometry","point","path","polygon","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","getCoordinates","f","properties","pointType","getRadius","GeoJsonLayer","layerProps","getLineDashArray","binary","_updateStateBinary","_updateStateJSON","geojsonBinary","points","lines","polygons","polygonsOutline","customPickingColors","pickingColors","featureIds","globalFeatureIds","Uint8ClampedArray","pickingColor","calculatePickingColors","numericProps","pathIndices","getPath","_pathType","polygonIndices","getPolygon","_normalize","triangles","indices","primitivePolygonIndices","createLayerPropsFromBinary","geojson","getGeojsonFeatures","getSubLayerRow","newFeatures","featuresDiff","oldFeatures","slice","partialFeatures","getIndex","__source","replace","createLayerPropsFromFeatures","_updateAutoHighlight","pointLayerIdPrefix","sourceIsPoints","sourceLayer","getSubLayers","updateAutoHighlight","_renderPolygonLayer","PolygonFillLayer","shouldRenderSubLayer","forwardedProps","useLineColor","lineColors","_renderLineLayers","polygonStrokeLayerId","lineStringsLayerId","PolygonStrokeLayer","LineStringsLayer","_renderPointLayers","highlightedObjectIndex","d","types","split","pointLayers","PointLayerMapping","PointsLayer","polygonFillLayer","geometryIndex","propertiesIndex","numericPropsIndex","getPropertiesForIndex","binaryToFeatureForAccesor","radiusUnits","radiusScale","radiusMinPixels","radiusMaxPixels","strokeWidth","outline","ScatterplotLayer","instanceRadius","pointRadiusMultiplier","lineWidthMultiplier","Extent","bbox","_bbox","Infinity","_valid","module","exports","prototype","include","ll","equals","other","union","contains","_fastContains","lon","lat","intersect","Function","body","list","_flatten","reduce","acc","item","geojsonNormalize","geojsonFlatten","flatten","default","geojsonCoords","traverse","extent","geojsonTypesByDataAttributes","dataAttributes","getExtent","ext","coords","bboxify","attribute","indexOf","update","gj","GeometryCollection","Feature","FeatureCollection","TinySDF","INF","gridSize","gridOuter","Float64Array","gridInner","z","v","Uint16Array","useMetrics","actualBoundingBoxLeft","round","navigator","userAgent","edt","edt1d","grid","q","k","s","r","_draw","getMetrics","glyphWidth","glyphHeight","imgTop","imgLeft","baselinePosition","imgData","textMetrics","advance","doubleBuffer","floor","actualBoundingBoxAscent","actualBoundingBoxRight","actualBoundingBoxDescent","fill","a","b","c","prepareGrids","sqrt","extractAlpha","metrics","sdfWidth","sdfHeight","left","drawWithMetrics","e","t","JSON","parse","stringify","obj","Traverse","walk","root","cb","immutable","parents","alive","walker","node_","node","copy","modifiers","keepGoing","parent","isRoot","level","circular","stopHere","remove","before","after","pre","post","stop","block","objectKeys","isLeaf","notLeaf","notRoot","ret","call","child","hasOwnProperty","isLast","isFirst","pop","src","dst","toS","Date","getTime","RegExp","isError","message","isBoolean","isNumber","isString","create","getPrototypeOf","proto","__proto__","T","ps","init","skip","arguments","paths","nodes","clone","res","toString","xs","fn","args"],"sourceRoot":""}