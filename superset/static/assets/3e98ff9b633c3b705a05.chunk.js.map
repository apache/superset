{"version":3,"file":"3e98ff9b633c3b705a05.chunk.js","mappings":"qQA+Bc,SAAUA,EAAoBC,GAA+B,MACzE,MAAM,KACJC,EADI,SAEJC,EAFI,OAGJC,EAHI,MAIJC,EAJI,YAKJC,EALI,iBAMJC,EANI,mBAOJC,EAPI,iBAQJC,EARI,mBASJC,EATI,gBAUJC,EAVI,YAWJC,EAXI,SAYJC,GACEZ,GACE,aAAEa,EAAF,YAAgBC,GAAgBZ,GAE/Ba,EAAOC,IAAYC,EAAAA,EAAAA,UAAQ,MAAWJ,EAAAA,EAAgB,IAEvDK,EAAgBH,IACpB,MAAMI,GAAwBC,EAAAA,EAAAA,GAAsBL,GACpDC,EAASG,GACT,MAAME,EAA+B,CAAC,EAClCF,EAAYG,SACdD,EAAcE,oBAAsBJ,GAGtCd,EAAY,CACVM,YAAa,CAAEI,MAAOI,EAAYG,OAASH,EAAc,MACzDE,iBAFF,GAMFG,EAAAA,EAAAA,YAAU,KACRN,EAAaP,EAAYI,MAAzB,GACC,CAACU,KAAKC,UAAUf,EAAYI,OAAQD,KAEvCU,EAAAA,EAAAA,YAAU,KACRN,EAAY,MAACL,EAAAA,EAAgB,KAA7B,GAGC,CAACY,KAAKC,UAAUb,GAAeC,IAElC,MAAMa,GAAWP,EAAAA,EAAAA,GAAclB,EAAS0B,SAASC,IAAIC,EAAAA,GAC/CF,EAAU,SAAAD,EAAS,KAAT,EAAaL,OAASK,EAAS,GAAK,KAE9CI,EAAWH,EACb3B,EAAK+B,QAAOC,GAAO,IAAAL,GAAO,KAAPA,EAAiBK,EAAIC,eACxCjC,EAEEkC,EAAUlC,EAAO8B,EAAW,GAE5BK,EACe,IAAnBD,EAAQb,QACJe,EAAAA,EAAAA,GAAE,eACFC,EAAAA,EAAAA,IAAG,YAAa,aAAcH,EAAQb,OAAQa,EAAQb,QAEtDiB,EAA8B,CAAC,EACjC5B,EAAY6B,kBACdD,EAAaE,OACX,QAAC,KAAD,CAAeC,OAAQ/B,EAAYgC,gBAChChC,EAAY6B,kBAInB,MAAMI,EAAUT,EAAQN,KACrBI,IACC,MAAQC,YAAaW,EAAYC,aAAcC,GAAgBd,EAC/D,MAAO,CACLe,MAAK,MAAED,EAAAA,EAAeF,EACtB9B,MAAO8B,EAFT,IAMJ,OACE,QAAC,KAAD,CAAmB1C,OAAQA,EAAQC,MAAOA,IACxC,QAAC,KAAD,KACEuC,eAAgBhC,EAAYgC,gBACxBJ,IAEJ,QAAC,KAAD,CACEU,YAAU,EACVlC,MAAOA,EACPmC,YAAad,EACbe,KAAMrC,EAAc,gBAAasC,EAEjCC,SAAUnC,EACVoC,OAAQ7C,EACR8C,QAAS/C,EACTgD,aAAclD,EACdmD,aAAclD,EACdmD,IAAK9C,EACLgC,QAASA,EACTe,wBAAyBjD,KAKlC,C,+EC3GM,MAAMkD,EAAoBC,EAAAA,GAAAA,GAAmC;gBACnD,IAAD,IAAC,OAAE1D,GAAH,SAAgBA,CAAhB;WACJ,IAAD,IAAC,MAAEC,GAAH,SAAeA,CAAf;EAGE0D,GAAiBD,EAAAA,EAAAA,IAAOE,EAAAA,EAAS;;;;EAMjCC,EAAgBH,EAAAA,GAAAA,GAE3B;WACU,IAAD,UAAC,MAAEI,EAAF,OAASvB,EAAS,SAAnB,kBAAiCuB,EAAMC,OAAOxB,SAA9C,EAAiC,EAAsByB,IAAvD","sources":["webpack://superset/./src/filters/components/GroupBy/GroupByFilterPlugin.tsx","webpack://superset/./src/filters/components/common.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ExtraFormData,\n  getColumnLabel,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { FormItemProps } from 'antd/lib/form';\nimport { Select } from 'src/components';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';\nimport { PluginFilterGroupByProps } from './types';\n\nexport default function PluginFilterGroupBy(props: PluginFilterGroupByProps) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    filterState,\n    inputRef,\n  } = props;\n  const { defaultValue, multiSelect } = formData;\n\n  const [value, setValue] = useState<string[]>(defaultValue ?? []);\n\n  const handleChange = (value?: string[] | string | null) => {\n    const resultValue: string[] = ensureIsArray<string>(value);\n    setValue(resultValue);\n    const extraFormData: ExtraFormData = {};\n    if (resultValue.length) {\n      extraFormData.interactive_groupby = resultValue;\n    }\n\n    setDataMask({\n      filterState: { value: resultValue.length ? resultValue : null },\n      extraFormData,\n    });\n  };\n\n  useEffect(() => {\n    handleChange(filterState.value);\n  }, [JSON.stringify(filterState.value), multiSelect]);\n\n  useEffect(() => {\n    handleChange(defaultValue ?? null);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue), multiSelect]);\n\n  const groupbys = ensureIsArray(formData.groupby).map(getColumnLabel);\n  const groupby = groupbys[0]?.length ? groupbys[0] : null;\n\n  const withData = groupby\n    ? data.filter(row => groupby.includes(row.column_name as string))\n    : data;\n\n  const columns = data ? withData : [];\n\n  const placeholderText =\n    columns.length === 0\n      ? t('No columns')\n      : tn('%s option', '%s options', columns.length, columns.length);\n\n  const formItemData: FormItemProps = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = (\n      <StatusMessage status={filterState.validateStatus}>\n        {filterState.validateMessage}\n      </StatusMessage>\n    );\n  }\n  const options = columns.map(\n    (row: { column_name: string; verbose_name: string | null }) => {\n      const { column_name: columnName, verbose_name: verboseName } = row;\n      return {\n        label: verboseName ?? columnName,\n        value: columnName,\n      };\n    },\n  );\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        {...formItemData}\n      >\n        <Select\n          allowClear\n          value={value}\n          placeholder={placeholderText}\n          mode={multiSelect ? 'multiple' : undefined}\n          // @ts-ignore\n          onChange={handleChange}\n          onBlur={unsetFocusedFilter}\n          onFocus={setFocusedFilter}\n          onMouseEnter={setHoveredFilter}\n          onMouseLeave={unsetHoveredFilter}\n          ref={inputRef}\n          options={options}\n          onDropdownVisibleChange={setFilterActive}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport { PluginFilterStylesProps } from './types';\nimport FormItem from '../../components/Form/FormItem';\n\nexport const FilterPluginStyle = styled.div<PluginFilterStylesProps>`\n  min-height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n`;\n\nexport const StyledFormItem = styled(FormItem)`\n  &.ant-row.ant-form-item {\n    margin: 0;\n  }\n`;\n\nexport const StatusMessage = styled.div<{\n  status?: 'error' | 'warning' | 'info';\n}>`\n  color: ${({ theme, status = 'error' }) => theme.colors[status]?.base};\n`;\n"],"names":["PluginFilterGroupBy","props","data","formData","height","width","setDataMask","setHoveredFilter","unsetHoveredFilter","setFocusedFilter","unsetFocusedFilter","setFilterActive","filterState","inputRef","defaultValue","multiSelect","value","setValue","useState","handleChange","resultValue","ensureIsArray","extraFormData","length","interactive_groupby","useEffect","JSON","stringify","groupbys","groupby","map","getColumnLabel","withData","filter","row","column_name","columns","placeholderText","t","tn","formItemData","validateMessage","extra","status","validateStatus","options","columnName","verbose_name","verboseName","label","allowClear","placeholder","mode","undefined","onChange","onBlur","onFocus","onMouseEnter","onMouseLeave","ref","onDropdownVisibleChange","FilterPluginStyle","styled","StyledFormItem","FormItem","StatusMessage","theme","colors","base"],"sourceRoot":""}