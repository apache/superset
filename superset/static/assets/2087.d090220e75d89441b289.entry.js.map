{"version":3,"file":"2087.d090220e75d89441b289.entry.js","mappings":"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","sources":["webpack://superset/./node_modules/math-expression-evaluator/src/formula_evaluator.js","webpack://superset/./node_modules/math-expression-evaluator/src/lexer.js","webpack://superset/./node_modules/math-expression-evaluator/src/math_function.js","webpack://superset/./node_modules/math-expression-evaluator/src/postfix.js","webpack://superset/./node_modules/math-expression-evaluator/src/postfix_evaluator.js"],"sourcesContent":["var Mexp=require('./postfix_evaluator.js');\r\nMexp.prototype.formulaEval = function () {\r\n\t\"use strict\";\r\n\tvar stack=[],pop1,pop2,pop3;\r\n\tvar disp=[];\r\n\tvar temp='';\r\n\tvar arr=this.value;\r\n\tfor(var i=0;i<arr.length;i++){\r\n\t\tif(arr[i].type===1||arr[i].type===3){\r\n\t\t\tdisp.push({value:arr[i].type===3?arr[i].show:arr[i].value,type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===13){\r\n\t\t\tdisp.push({value:arr[i].show,type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===0){\r\n\t\t\tdisp[disp.length-1]={value:arr[i].show+(arr[i].show!=\"-\"?\"(\":\"\")+disp[disp.length-1].value+(arr[i].show!=\"-\"?\")\":\"\"),type:0};\r\n\t\t}\r\n\t\telse if(arr[i].type===7){\r\n\t\t\tdisp[disp.length-1]={value:(disp[disp.length-1].type!=1?\"(\":\"\")+disp[disp.length-1].value+(disp[disp.length-1].type!=1?\")\":\"\")+arr[i].show,type:7};\r\n\t\t}\r\n\t\telse if(arr[i].type===10){\r\n\t\t\tpop1=disp.pop();\r\n\t\t\tpop2=disp.pop();\r\n\t\t\tif(arr[i].show==='P'||arr[i].show==='C')disp.push({value:\"<sup>\"+pop2.value+\"</sup>\"+arr[i].show+\"<sub>\"+pop1.value+\"</sub>\",type:10});\r\n\t\t\telse disp.push({value:(pop2.type!=1?\"(\":\"\")+pop2.value+(pop2.type!=1?\")\":\"\")+\"<sup>\"+pop1.value+\"</sup>\",type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===2||arr[i].type===9){\r\n\t\t\tpop1=disp.pop();\r\n\t\t\tpop2=disp.pop();\r\n\t\t\tdisp.push({value:(pop2.type!=1?\"(\":\"\")+pop2.value+(pop2.type!=1?\")\":\"\")+arr[i].show+(pop1.type!=1?\"(\":\"\")+pop1.value+(pop1.type!=1?\")\":\"\"),type:arr[i].type});\r\n\t\t}\r\n\t\telse if(arr[i].type===12){\r\n\t\t\tpop1=disp.pop();\r\n\t\t\tpop2=disp.pop();\r\n\t\t\tpop3=disp.pop();\r\n\t\t\tdisp.push({value:arr[i].show+\"(\"+pop3.value+\",\"+pop2.value+\",\"+pop1.value+\")\",type:12});\r\n\t\t}\r\n\t}\r\n\treturn disp[0].value;\r\n};\r\nmodule.exports=Mexp;","'use strict'\r\nvar Mexp = require('./math_function.js')\r\nfunction inc (arr, val) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    arr[i] += val\r\n  }\r\n  return arr\r\n}\r\nvar token = [\r\n  'sin',\r\n  'cos',\r\n  'tan',\r\n  'pi',\r\n  '(',\r\n  ')',\r\n  'P',\r\n  'C',\r\n  ' ',\r\n  'asin',\r\n  'acos',\r\n  'atan',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  'int',\r\n  'cosh',\r\n  'acosh',\r\n  'ln',\r\n  '^',\r\n  'root',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '/',\r\n  '!',\r\n  'tanh',\r\n  'atanh',\r\n  'Mod',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '*',\r\n  'sinh',\r\n  'asinh',\r\n  'e',\r\n  'log',\r\n  '0',\r\n  '.',\r\n  '+',\r\n  '-',\r\n  ',',\r\n  'Sigma',\r\n  'n',\r\n  'Pi',\r\n  'pow'\r\n]\r\nvar show = [\r\n  'sin',\r\n  'cos',\r\n  'tan',\r\n  '&pi;',\r\n  '(',\r\n  ')',\r\n  'P',\r\n  'C',\r\n  ' ',\r\n  'asin',\r\n  'acos',\r\n  'atan',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  'Int',\r\n  'cosh',\r\n  'acosh',\r\n  ' ln',\r\n  '^',\r\n  'root',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '&divide;',\r\n  '!',\r\n  'tanh',\r\n  'atanh',\r\n  ' Mod ',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '&times;',\r\n  'sinh',\r\n  'asinh',\r\n  'e',\r\n  ' log',\r\n  '0',\r\n  '.',\r\n  '+',\r\n  '-',\r\n  ',',\r\n  '&Sigma;',\r\n  'n',\r\n  '&Pi;',\r\n  'pow'\r\n]\r\nvar eva = [\r\n  Mexp.math.sin,\r\n  Mexp.math.cos,\r\n  Mexp.math.tan,\r\n  'PI',\r\n  '(',\r\n  ')',\r\n  Mexp.math.P,\r\n  Mexp.math.C,\r\n  ' '.anchor,\r\n  Mexp.math.asin,\r\n  Mexp.math.acos,\r\n  Mexp.math.atan,\r\n  '7',\r\n  '8',\r\n  '9',\r\n  Math.floor,\r\n  Mexp.math.cosh,\r\n  Mexp.math.acosh,\r\n  Math.log,\r\n  Math.pow,\r\n  Math.sqrt,\r\n  '4',\r\n  '5',\r\n  '6',\r\n  Mexp.math.div,\r\n  Mexp.math.fact,\r\n  Mexp.math.tanh,\r\n  Mexp.math.atanh,\r\n  Mexp.math.mod,\r\n  '1',\r\n  '2',\r\n  '3',\r\n  Mexp.math.mul,\r\n  Mexp.math.sinh,\r\n  Mexp.math.asinh,\r\n  'E',\r\n  Mexp.math.log,\r\n  '0',\r\n  '.',\r\n  Mexp.math.add,\r\n  Mexp.math.sub,\r\n  ',',\r\n  Mexp.math.sigma,\r\n  'n',\r\n  Mexp.math.Pi,\r\n  Math.pow\r\n]\r\nvar preced = {\r\n  0: 11,\r\n  1: 0,\r\n  2: 3,\r\n  3: 0,\r\n  4: 0,\r\n  5: 0,\r\n  6: 0,\r\n  7: 11,\r\n  8: 11,\r\n  9: 1,\r\n  10: 10,\r\n  11: 0,\r\n  12: 11,\r\n  13: 0,\r\n  14: -1 // will be filtered after lexer\r\n} // stores precedence by types\r\nvar type = [\r\n  0, 0, 0, 3, 4, 5, 10, 10, 14, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 10, 0, 1, 1, 1, 2, 7, 0, 0, 2, 1, 1,\r\n  1, 2, 0, 0, 3, 0, 1, 6, 9, 9, 11, 12, 13, 12, 8\r\n]\r\n/*\r\n0 : function with syntax function_name(Maths_exp)\r\n1 : numbers\r\n2 : binary operators like * / Mod left associate and same precedence\r\n3 : Math constant values like e,pi,Cruncher ans\r\n4 : opening bracket\r\n5 : closing bracket\r\n6 : decimal\r\n7 : function with syntax (Math_exp)function_name\r\n8: function with syntax function_name(Math_exp1,Math_exp2)\r\n9 : binary operator like +,-\r\n10: binary operator like P C or ^\r\n11: ,\r\n12: function with , seperated three parameters and third parameter is a string that will be mexp string\r\n13: variable of Sigma function\r\n*/\r\nvar type0 = {\r\n  0: true,\r\n  1: true,\r\n  3: true,\r\n  4: true,\r\n  6: true,\r\n  8: true,\r\n  9: true,\r\n  12: true,\r\n  13: true,\r\n  14: true\r\n} // type2:true,type4:true,type9:true,type11:true,type21:true,type22\r\nvar type1 = {\r\n  0: true,\r\n  1: true,\r\n  2: true,\r\n  3: true,\r\n  4: true,\r\n  5: true,\r\n  6: true,\r\n  7: true,\r\n  8: true,\r\n  9: true,\r\n  10: true,\r\n  11: true,\r\n  12: true,\r\n  13: true\r\n} // type3:true,type5:true,type7:true,type23\r\nvar type1Asterick = {\r\n  0: true,\r\n  3: true,\r\n  4: true,\r\n  8: true,\r\n  12: true,\r\n  13: true\r\n}\r\nvar empty = {}\r\nvar type3Asterick = {\r\n  0: true,\r\n  1: true,\r\n  3: true,\r\n  4: true,\r\n  6: true,\r\n  8: true,\r\n  12: true,\r\n  13: true\r\n} // type_5:true,type_7:true,type_23\r\nvar type6 = {\r\n  1: true\r\n}\r\nvar newAr = [\r\n  [],\r\n  [\r\n    '1',\r\n    '2',\r\n    '3',\r\n    '7',\r\n    '8',\r\n    '9',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '+',\r\n    '-',\r\n    '*',\r\n    '/',\r\n    '(',\r\n    ')',\r\n    '^',\r\n    '!',\r\n    'P',\r\n    'C',\r\n    'e',\r\n    '0',\r\n    '.',\r\n    ',',\r\n    'n',\r\n    ' '\r\n  ],\r\n  ['pi', 'ln', 'Pi'],\r\n  ['sin', 'cos', 'tan', 'Del', 'int', 'Mod', 'log', 'pow'],\r\n  ['asin', 'acos', 'atan', 'cosh', 'root', 'tanh', 'sinh'],\r\n  ['acosh', 'atanh', 'asinh', 'Sigma']\r\n]\r\n\r\nfunction match (str1, str2, i, x) {\r\n  for (var f = 0; f < x; f++) {\r\n    if (str1[i + f] !== str2[f]) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\nMexp.addToken = function (tokens) {\r\n  for (var i = 0; i < tokens.length; i++) {\r\n    var x = tokens[i].token.length\r\n    var temp = -1\r\n\r\n    // newAr is a specially designed data structure index of 1d array = length of tokens\r\n    newAr[x] = newAr[x] || []\r\n    for (var y = 0; y < newAr[x].length; y++) {\r\n      if (tokens[i].token === newAr[x][y]) {\r\n        temp = token.indexOf(newAr[x][y])\r\n        break\r\n      }\r\n    }\r\n    if (temp === -1) {\r\n      token.push(tokens[i].token)\r\n      type.push(tokens[i].type)\r\n      if (newAr.length <= tokens[i].token.length) {\r\n        newAr[tokens[i].token.length] = []\r\n      }\r\n      newAr[tokens[i].token.length].push(tokens[i].token)\r\n      eva.push(tokens[i].value)\r\n      show.push(tokens[i].show)\r\n    } else {\r\n      // overwrite\r\n      token[temp] = tokens[i].token\r\n      type[temp] = tokens[i].type\r\n      eva[temp] = tokens[i].value\r\n      show[temp] = tokens[i].show\r\n    }\r\n  }\r\n}\r\n\r\nfunction tokenize (string) {\r\n  var nodes = []\r\n  var length = string.length\r\n  var key, x, y\r\n  for (var i = 0; i < length; i++) {\r\n    if (i < length - 1 && string[i] === ' ' && string[i + 1] === ' ') {\r\n      continue\r\n    }\r\n    key = ''\r\n    for (\r\n      x = string.length - i > newAr.length - 2 ? newAr.length - 1 : string.length - i;\r\n      x > 0;\r\n      x--\r\n    ) {\r\n      if (newAr[x] === undefined) continue\r\n      for (y = 0; y < newAr[x].length; y++) {\r\n        if (match(string, newAr[x][y], i, x)) {\r\n          key = newAr[x][y]\r\n          y = newAr[x].length\r\n          x = 0\r\n        }\r\n      }\r\n    }\r\n    i += key.length - 1\r\n    if (key === '') {\r\n      throw new Mexp.Exception(\"Can't understand after \" + string.slice(i))\r\n    }\r\n    var index = token.indexOf(key)\r\n    nodes.push({\r\n      index: index,\r\n      token: key,\r\n      type: type[index],\r\n      eval: eva[index],\r\n      precedence: preced[type[index]],\r\n      show: show[index]\r\n    })\r\n  }\r\n  return nodes\r\n}\r\n\r\nMexp.lex = function (inp, tokens) {\r\n  'use strict'\r\n\r\n  var changeSignObj = {\r\n    value: Mexp.math.changeSign,\r\n    type: 0,\r\n    pre: 21,\r\n    show: '-'\r\n  }\r\n  var closingParObj = {\r\n    value: ')',\r\n    show: ')',\r\n    type: 5,\r\n    pre: 0\r\n  }\r\n  var openingParObj = {\r\n    value: '(',\r\n    type: 4,\r\n    pre: 0,\r\n    show: '('\r\n  }\r\n  var str = [openingParObj]\r\n\r\n  var ptc = [] // Parenthesis to close at the beginning is after one token\r\n  var inpStr = inp\r\n  var allowed = type0\r\n  var bracToClose = 0\r\n  var asterick = empty\r\n  var prevKey = ''\r\n  var i\r\n  if (typeof tokens !== 'undefined') {\r\n    Mexp.addToken(tokens)\r\n  }\r\n  var obj = {}\r\n  var nodes = tokenize(inpStr)\r\n  for (i = 0; i < nodes.length; i++) {\r\n    var node = nodes[i]\r\n    if (node.type === 14) {\r\n      if (\r\n        i > 0 &&\r\n        i < nodes.length - 1 &&\r\n        nodes[i + 1].type === 1 &&\r\n        (nodes[i - 1].type === 1 || nodes[i - 1].type === 6)\r\n      ) { throw new Mexp.Exception('Unexpected Space') }\r\n      continue\r\n    }\r\n    var cToken = node.token\r\n    var cType = node.type\r\n    var cEv = node.eval\r\n    var cPre = node.precedence\r\n    var cShow = node.show\r\n    var pre = str[str.length - 1]\r\n    var j\r\n    for (j = ptc.length; j--;) {\r\n      // loop over ptc\r\n      if (ptc[j] === 0) {\r\n        if ([0, 2, 3, 4, 5, 9, 11, 12, 13].indexOf(cType) !== -1) {\r\n          if (allowed[cType] !== true) {\r\n            throw new Mexp.Exception(cToken + ' is not allowed after ' + prevKey)\r\n          }\r\n          str.push(closingParObj)\r\n          allowed = type1\r\n          asterick = type3Asterick\r\n          inc(ptc, -1).pop()\r\n        }\r\n      } else break\r\n    }\r\n    if (allowed[cType] !== true) {\r\n      throw new Mexp.Exception(cToken + ' is not allowed after ' + prevKey)\r\n    }\r\n    if (asterick[cType] === true) {\r\n      cType = 2\r\n      cEv = Mexp.math.mul\r\n      cShow = '&times;'\r\n      cPre = 3\r\n      i = i - 1\r\n    }\r\n    obj = {\r\n      value: cEv,\r\n      type: cType,\r\n      pre: cPre,\r\n      show: cShow\r\n    }\r\n    if (cType === 0) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 2).push(2)\r\n      str.push(obj)\r\n      str.push(openingParObj)\r\n    } else if (cType === 1) {\r\n      if (pre.type === 1) {\r\n        pre.value += cEv\r\n        inc(ptc, 1)\r\n      } else {\r\n        str.push(obj)\r\n      }\r\n      allowed = type1\r\n      asterick = type1Asterick\r\n    } else if (cType === 2) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 2)\r\n      str.push(obj)\r\n    } else if (cType === 3) {\r\n      // constant\r\n      str.push(obj)\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n    } else if (cType === 4) {\r\n      inc(ptc, 1)\r\n      bracToClose++\r\n      allowed = type0\r\n      asterick = empty\r\n      str.push(obj)\r\n    } else if (cType === 5) {\r\n      if (!bracToClose) {\r\n        throw new Mexp.Exception('Closing parenthesis are more than opening one, wait What!!!')\r\n      }\r\n      bracToClose--\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n      str.push(obj)\r\n      inc(ptc, 1)\r\n    } else if (cType === 6) {\r\n      if (pre.hasDec) {\r\n        throw new Mexp.Exception('Two decimals are not allowed in one number')\r\n      }\r\n      if (pre.type !== 1) {\r\n        pre = {\r\n          value: 0,\r\n          type: 1,\r\n          pre: 0\r\n        } // pre needs to be changed as it will the last value now to be safe in later code\r\n        str.push(pre)\r\n        inc(ptc, -1)\r\n      }\r\n      allowed = type6\r\n      inc(ptc, 1)\r\n      asterick = empty\r\n      pre.value += cEv\r\n      pre.hasDec = true\r\n    } else if (cType === 7) {\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n      inc(ptc, 1)\r\n      str.push(obj)\r\n    }\r\n    if (cType === 8) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 4).push(4)\r\n      str.push(obj)\r\n      str.push(openingParObj)\r\n    } else if (cType === 9) {\r\n      if (pre.type === 9) {\r\n        if (pre.value === Mexp.math.add) {\r\n          pre.value = cEv\r\n          pre.show = cShow\r\n          inc(ptc, 1)\r\n        } else if (pre.value === Mexp.math.sub && cShow === '-') {\r\n          pre.value = Mexp.math.add\r\n          pre.show = '+'\r\n          inc(ptc, 1)\r\n        }\r\n      } else if (\r\n        pre.type !== 5 &&\r\n        pre.type !== 7 &&\r\n        pre.type !== 1 &&\r\n        pre.type !== 3 &&\r\n        pre.type !== 13\r\n      ) {\r\n        // changesign only when negative is found\r\n        if (cToken === '-') {\r\n          // do nothing for + token\r\n          // don't add with the above if statement as that will run the else statement of parent if on Ctoken +\r\n          allowed = type0\r\n          asterick = empty\r\n          inc(ptc, 2).push(2)\r\n          str.push(changeSignObj)\r\n          str.push(openingParObj)\r\n        }\r\n      } else {\r\n        str.push(obj)\r\n        inc(ptc, 2)\r\n      }\r\n      allowed = type0\r\n      asterick = empty\r\n    } else if (cType === 10) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 2)\r\n      str.push(obj)\r\n    } else if (cType === 11) {\r\n      allowed = type0\r\n      asterick = empty\r\n      str.push(obj)\r\n    } else if (cType === 12) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 6).push(6)\r\n      str.push(obj)\r\n      str.push(openingParObj)\r\n    } else if (cType === 13) {\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n      str.push(obj)\r\n    }\r\n    inc(ptc, -1)\r\n    prevKey = cToken\r\n  }\r\n  for (j = ptc.length; j--;) {\r\n    // loop over ptc\r\n    if (ptc[j] === 0) {\r\n      str.push(closingParObj)\r\n      inc(ptc, -1).pop()\r\n    } else break // if it is not zero so before ptc also cant be zero\r\n  }\r\n  if (allowed[5] !== true) {\r\n    throw new Mexp.Exception('complete the expression')\r\n  }\r\n  while (bracToClose--) {\r\n    str.push(closingParObj)\r\n  }\r\n\r\n  str.push(closingParObj)\r\n  //        console.log(str);\r\n  return new Mexp(str)\r\n}\r\nmodule.exports = Mexp\r\n","\"use strict\";\r\nvar Mexp = function (parsed) {\r\n  this.value = parsed\r\n}\r\n\r\nMexp.math = {\r\n  isDegree: true, // mode of calculator\r\n  acos: function (x) {\r\n    return (Mexp.math.isDegree ? 180 / Math.PI * Math.acos(x) : Math.acos(x))\r\n  },\r\n  add: function (a, b) {\r\n    return a + b\r\n  },\r\n  asin: function (x) {\r\n    return (Mexp.math.isDegree ? 180 / Math.PI * Math.asin(x) : Math.asin(x))\r\n  },\r\n  atan: function (x) {\r\n    return (Mexp.math.isDegree ? 180 / Math.PI * Math.atan(x) : Math.atan(x))\r\n  },\r\n  acosh: function (x) {\r\n    return Math.log(x + Math.sqrt(x * x - 1))\r\n  },\r\n  asinh: function (x) {\r\n    return Math.log(x + Math.sqrt(x * x + 1))\r\n  },\r\n  atanh: function (x) {\r\n    return Math.log((1 + x) / (1 - x))\r\n  },\r\n  C: function (n, r) {\r\n    var pro = 1\r\n    var other = n - r\r\n    var choice = r\r\n    if (choice < other) {\r\n      choice = other\r\n      other = r\r\n    }\r\n    for (var i = choice + 1; i <= n; i++) {\r\n      pro *= i\r\n    }\r\n    return pro / Mexp.math.fact(other)\r\n  },\r\n  changeSign: function (x) {\r\n    return -x\r\n  },\r\n  cos: function (x) {\r\n    if (Mexp.math.isDegree) x = Mexp.math.toRadian(x)\r\n    return Math.cos(x)\r\n  },\r\n  cosh: function (x) {\r\n    return (Math.pow(Math.E, x) + Math.pow(Math.E, -1 * x)) / 2\r\n  },\r\n  div: function (a, b) {\r\n    return a / b\r\n  },\r\n  fact: function (n) {\r\n    if (n % 1 !== 0) return 'NaN'\r\n    var pro = 1\r\n    for (var i = 2; i <= n; i++) {\r\n      pro *= i\r\n    }\r\n    return pro\r\n  },\r\n  inverse: function (x) {\r\n    return 1 / x\r\n  },\r\n  log: function (i) {\r\n    return Math.log(i) / Math.log(10)\r\n  },\r\n  mod: function (a, b) {\r\n    return a % b\r\n  },\r\n  mul: function (a, b) {\r\n    return a * b\r\n  },\r\n  P: function (n, r) {\r\n    var pro = 1\r\n    for (var i = Math.floor(n) - Math.floor(r) + 1; i <= Math.floor(n); i++) {\r\n      pro *= i\r\n    }\r\n    return pro\r\n  },\r\n  Pi: function (low, high, ex) {\r\n    var pro = 1\r\n    for (var i = low; i <= high; i++) {\r\n      pro *= Number(ex.postfixEval({\r\n        n: i\r\n      }))\r\n    }\r\n    return pro\r\n  },\r\n  pow10x: function (e) {\r\n    var x = 1\r\n    while (e--) {\r\n      x *= 10\r\n    }\r\n    return x\r\n  },\r\n  sigma: function (low, high, ex) {\r\n    var sum = 0\r\n    for (var i = low; i <= high; i++) {\r\n      sum += Number(ex.postfixEval({\r\n        n: i\r\n      }))\r\n    }\r\n    return sum\r\n  },\r\n  sin: function (x) {\r\n    if (Mexp.math.isDegree) x = Mexp.math.toRadian(x)\r\n    return Math.sin(x)\r\n  },\r\n  sinh: function (x) {\r\n    return (Math.pow(Math.E, x) - Math.pow(Math.E, -1 * x)) / 2\r\n  },\r\n  sub: function (a, b) {\r\n    return a - b\r\n  },\r\n  tan: function (x) {\r\n    if (Mexp.math.isDegree) x = Mexp.math.toRadian(x)\r\n    return Math.tan(x)\r\n  },\r\n  tanh: function (x) {\r\n    return Mexp.sinha(x) / Mexp.cosha(x)\r\n  },\r\n  toRadian: function (x) {\r\n    return x * Math.PI / 180\r\n  }\r\n}\r\nMexp.Exception = function (message) {\r\n  this.message = message\r\n}\r\nmodule.exports = Mexp\r\n","\r\nvar Mexp = require('./lexer.js');\r\n\r\nMexp.prototype.toPostfix = function () {\r\n\t'use strict';\r\n\tvar post = [], elem, popped, prep, pre, ele;\r\n\tvar stack = [{ value: \"(\", type: 4, pre: 0 }];\r\n\tvar arr = this.value;\r\n\tfor (var i = 1; i < arr.length; i++) {\r\n\t\tif (arr[i].type === 1 || arr[i].type === 3 || arr[i].type === 13) {\t//if token is number,constant,or n(which is also a special constant in our case)\r\n\t\t\tif (arr[i].type === 1)\r\n\t\t\t\tarr[i].value = Number(arr[i].value);\r\n\t\t\tpost.push(arr[i]);\r\n\t\t}\r\n\t\telse if (arr[i].type === 4) {\r\n\t\t\tstack.push(arr[i]);\r\n\t\t}\r\n\t\telse if (arr[i].type === 5) {\r\n\t\t\twhile ((popped = stack.pop()).type !== 4) {\r\n\t\t\t\tpost.push(popped);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (arr[i].type === 11) {\r\n\t\t\twhile ((popped = stack.pop()).type !== 4) {\r\n\t\t\t\tpost.push(popped);\r\n\t\t\t}\r\n\t\t\tstack.push(popped);\r\n\t\t}\r\n\t\telse {\r\n\t\t\telem = arr[i];\r\n\t\t\tpre = elem.pre;\r\n\t\t\tele = stack[stack.length - 1];\r\n\t\t\tprep = ele.pre;\r\n\t\t\tvar flag = ele.value == 'Math.pow' && elem.value == 'Math.pow';\r\n\t\t\tif (pre > prep) stack.push(elem);\r\n\t\t\telse {\r\n\t\t\t\twhile (prep >= pre && !flag || flag && pre < prep) {\r\n\t\t\t\t\tpopped = stack.pop();\r\n\t\t\t\t\tele = stack[stack.length - 1];\r\n\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t\tprep = ele.pre;\r\n\t\t\t\t\tflag = elem.value == 'Math.pow' && ele.value == 'Math.pow';\r\n\t\t\t\t}\r\n\t\t\t\tstack.push(elem);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn new Mexp(post);\r\n};\r\nmodule.exports = Mexp;","var Mexp=require('./postfix.js');\r\nMexp.prototype.postfixEval = function (UserDefined) {\r\n\t'use strict';\r\n\tUserDefined=UserDefined||{};\r\n\tUserDefined.PI=Math.PI;\r\n\tUserDefined.E=Math.E;\r\n\tvar stack=[],pop1,pop2,pop3;\r\n\tvar disp=[];\r\n\tvar temp='';\r\n\tvar arr=this.value;\r\n\tvar bool=(typeof UserDefined.n!==\"undefined\");\r\n\tfor(var i=0;i<arr.length;i++){\r\n\t\tif(arr[i].type===1){\r\n\t\t\tstack.push({value:arr[i].value,type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===3){\r\n\t\t\tstack.push({value:UserDefined[arr[i].value],type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===0){\r\n\t\t\tif(typeof stack[stack.length-1].type===\"undefined\"){\r\n\t\t\t\tstack[stack.length-1].value.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse stack[stack.length-1].value=arr[i].value(stack[stack.length-1].value);\r\n\t\t}\r\n\t\telse if(arr[i].type===7){\r\n\t\t\tif(typeof stack[stack.length-1].type===\"undefined\"){\r\n\t\t\t\tstack[stack.length-1].value.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse stack[stack.length-1].value=arr[i].value(stack[stack.length-1].value);\r\n\t\t}\r\n\t\telse if(arr[i].type===8){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tstack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});\r\n\t\t}\r\n\t\telse if(arr[i].type===10){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tif(typeof pop2.type===\"undefined\"){\r\n\t\t\t\tpop2.value=pop2.concat(pop1);\r\n\t\t\t\tpop2.value.push(arr[i]);\r\n\t\t\t\tstack.push(pop2);\r\n\t\t\t}\r\n\t\t\telse if (typeof pop1.type===\"undefined\") {\r\n\t\t\t\tpop1.unshift(pop2);\r\n\t\t\t\tpop1.push(arr[i]);\r\n\t\t\t\tstack.push(pop1);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tstack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});\r\n            }\r\n\t\t}\r\n\t\telse if(arr[i].type===2||arr[i].type===9){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tif(typeof pop2.type===\"undefined\"){\r\n\t\t\t\tpop2=pop2.concat(pop1);\r\n\t\t\t\tpop2.push(arr[i]);\r\n\t\t\t\tstack.push(pop2);\r\n\t\t\t}\r\n\t\t\telse if (typeof pop1.type===\"undefined\") {\r\n\t\t\t\tpop1.unshift(pop2);\r\n\t\t\t\tpop1.push(arr[i]);\r\n\t\t\t\tstack.push(pop1);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tstack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(arr[i].type===12){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tif (typeof pop1.type!==\"undefined\") {\r\n\t\t\t\tpop1=[pop1];\r\n\t\t\t}\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tpop3=stack.pop();\r\n\t\t\tstack.push({type:1,value:arr[i].value(pop3.value,pop2.value,new Mexp(pop1))});\r\n\t\t}\r\n\t\telse if(arr[i].type===13){\r\n\t\t\tif(bool){\r\n\t\t\t\tstack.push({value:UserDefined[arr[i].value],type:3});\r\n\t\t\t}\r\n\t\t\telse stack.push([arr[i]]);\r\n\t\t}\r\n\t}\r\n\tif (stack.length>1) {\r\n\t\tthrow(new Mexp.Exception(\"Uncaught Syntax error\"));\r\n\t}\r\n\treturn stack[0].value>1000000000000000?\"Infinity\":parseFloat(stack[0].value.toFixed(15));\r\n};\r\nMexp.eval=function(str,tokens,obj){\r\n\tif (typeof tokens===\"undefined\") {\r\n\t\treturn this.lex(str).toPostfix().postfixEval();\r\n\t}\r\n\telse if (typeof obj===\"undefined\") {\r\n\t\tif (typeof tokens.length!==\"undefined\") \r\n\t\t\treturn this.lex(str,tokens).toPostfix().postfixEval();\r\n\t\telse\r\n\t\t\treturn this.lex(str).toPostfix().postfixEval(tokens);\r\n\t}\r\n\telse\r\n\t\treturn this.lex(str,tokens).toPostfix().postfixEval(obj);\r\n};\r\nmodule.exports=Mexp;"],"names":["Mexp","prototype","formulaEval","pop1","pop2","pop3","disp","arr","this","value","i","length","type","push","show","pop","module","exports","inc","val","token","eva","math","sin","cos","tan","P","C","anchor","asin","acos","atan","Math","floor","cosh","acosh","log","pow","sqrt","div","fact","tanh","atanh","mod","mul","sinh","asinh","add","sub","sigma","Pi","preced","type0","type1","type1Asterick","empty","type3Asterick","type6","newAr","match","str1","str2","x","f","addToken","tokens","temp","y","indexOf","lex","inp","changeSignObj","changeSign","pre","closingParObj","openingParObj","str","ptc","inpStr","allowed","bracToClose","asterick","prevKey","obj","nodes","string","key","undefined","Exception","slice","index","eval","precedence","tokenize","node","j","cToken","cType","cEv","cPre","cShow","hasDec","parsed","isDegree","PI","a","b","n","r","pro","other","choice","toRadian","E","inverse","low","high","ex","Number","postfixEval","pow10x","e","sum","sinha","cosha","message","toPostfix","elem","popped","prep","ele","post","stack","flag","UserDefined","bool","concat","unshift","parseFloat","toFixed"],"sourceRoot":""}