{"version":3,"file":"8113b2d34e866bee4b7f.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/Treemap/EchartsTreemap.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DataRecordValue,\n  BinaryQueryObjectFilterClause,\n} from '@superset-ui/core';\nimport React, { useCallback } from 'react';\nimport Echart from '../components/Echart';\nimport { NULL_STRING } from '../constants';\nimport { EventHandlers } from '../types';\nimport { extractTreePathInfo } from './constants';\nimport { TreemapTransformedProps } from './types';\n\nexport default function EchartsTreemap({\n  echartOptions,\n  emitCrossFilters,\n  groupby,\n  height,\n  labelMap,\n  onContextMenu,\n  refs,\n  setDataMask,\n  selectedValues,\n  width,\n}: TreemapTransformedProps) {\n  const getCrossFilterDataMask = useCallback(\n    (data, treePathInfo) => {\n      if (data?.children) {\n        return undefined;\n      }\n      const { treePath } = extractTreePathInfo(treePathInfo);\n      const name = treePath.join(',');\n      const selected = Object.values(selectedValues);\n      let values: string[];\n      if (selected.includes(name)) {\n        values = selected.filter(v => v !== name);\n      } else {\n        values = [name];\n      }\n\n      const groupbyValues = values.map(value => labelMap[value]);\n\n      return {\n        dataMask: {\n          extraFormData: {\n            filters:\n              values.length === 0\n                ? []\n                : groupby.map((col, idx) => {\n                    const val: DataRecordValue[] = groupbyValues.map(\n                      v => v[idx],\n                    );\n                    if (val === null || val === undefined)\n                      return {\n                        col,\n                        op: 'IS NULL' as const,\n                      };\n                    return {\n                      col,\n                      op: 'IN' as const,\n                      val: val as (string | number | boolean)[],\n                    };\n                  }),\n          },\n          filterState: {\n            value: groupbyValues.length ? groupbyValues : null,\n            selectedValues: values.length ? values : null,\n          },\n        },\n        isCurrentValueSelected: selected.includes(name),\n      };\n    },\n    [groupby, labelMap, selectedValues],\n  );\n\n  const handleChange = useCallback(\n    (data, treePathInfo) => {\n      if (!emitCrossFilters) {\n        return;\n      }\n\n      const dataMask = getCrossFilterDataMask(data, treePathInfo)?.dataMask;\n      if (dataMask) {\n        setDataMask(dataMask);\n      }\n    },\n    [emitCrossFilters, getCrossFilterDataMask, setDataMask],\n  );\n\n  const eventHandlers: EventHandlers = {\n    click: props => {\n      const { data, treePathInfo } = props;\n      handleChange(data, treePathInfo);\n    },\n    contextmenu: eventParams => {\n      if (onContextMenu) {\n        eventParams.event.stop();\n        const { data, treePathInfo } = eventParams;\n        const { treePath } = extractTreePathInfo(treePathInfo);\n        if (treePath.length > 0) {\n          const pointerEvent = eventParams.event.event;\n          const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n          treePath.forEach((path, i) =>\n            drillToDetailFilters.push({\n              col: groupby[i],\n              op: '==',\n              val: path === 'null' ? NULL_STRING : path,\n              formattedVal: path,\n            }),\n          );\n          onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n            drillToDetail: drillToDetailFilters,\n            crossFilter: getCrossFilterDataMask(data, treePathInfo),\n          });\n        }\n      }\n    },\n  };\n\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n      eventHandlers={eventHandlers}\n      selectedValues={selectedValues}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n} from 'react';\nimport { styled } from '@superset-ui/core';\nimport { ECharts, init } from 'echarts';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: React.Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<ECharts>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["EchartsTreemap","echartOptions","emitCrossFilters","groupby","height","labelMap","onContextMenu","refs","setDataMask","selectedValues","width","getCrossFilterDataMask","useCallback","data","treePathInfo","children","treePath","extractTreePathInfo","name","join","selected","Object","values","filter","v","groupbyValues","map","value","dataMask","extraFormData","filters","length","col","idx","val","op","filterState","isCurrentValueSelected","handleChange","eventHandlers","click","props","contextmenu","eventParams","event","stop","pointerEvent","drillToDetailFilters","forEach","path","i","push","NULL_STRING","formattedVal","clientX","clientY","drillToDetail","crossFilter","Styles","styled","Echart","ref","zrEventHandlers","divRef","useRef","chartRef","currentSelection","useMemo","keys","previousSelection","useImperativeHandle","getEchartInstance","current","useEffect","init","entries","handler","off","on","getZr","setOption","dispatchAction","type","dataIndex","handleSizeChange","resize","dispose","useLayoutEffect","forwardRef"],"sourceRoot":""}