{"version":3,"file":"ed79042a6e27ee71d484.chunk.js","mappings":"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","sources":["webpack://superset/./src/views/CRUD/alert/ExecutionLog.tsx","webpack://superset/./src/views/CRUD/alert/components/AlertStatusIcon.tsx","webpack://superset/./src/views/CRUD/alert/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { css, styled, t } from '@superset-ui/core';\nimport moment from 'moment';\nimport React, { useEffect, useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport ListView from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SubMenu from 'src/views/components/SubMenu';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { fDuration } from 'src/utils/dates';\nimport AlertStatusIcon from 'src/views/CRUD/alert/components/AlertStatusIcon';\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { AlertObject, LogObject } from './types';\n\nconst PAGE_SIZE = 25;\n\nconst StyledHeader = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: ${theme.gridUnit * 4}px;\n      font-size: ${theme.typography.sizes.s};\n      font-weight: ${theme.typography.weights.normal};\n      text-decoration: underline;\n    }\n  `}\n`;\n\ninterface ExecutionLogProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n}\n\nfunction ExecutionLog({ addDangerToast, isReportEnabled }: ExecutionLogProps) {\n  const { alertId }: any = useParams();\n  const {\n    state: { loading, resourceCount: logCount, resourceCollection: logs },\n    fetchData,\n  } = useListViewResource<LogObject>(\n    `report/${alertId}/log`,\n    t('log'),\n    addDangerToast,\n    false,\n  );\n  const {\n    state: { loading: alertLoading, resource: alertResource },\n    fetchResource,\n  } = useSingleViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  useEffect(() => {\n    if (alertId !== null && !alertLoading) {\n      fetchResource(alertId);\n    }\n  }, [alertId]);\n\n  const initialSort = [{ id: 'start_dttm', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { state },\n          },\n        }: any) => (\n          <AlertStatusIcon state={state} isReportEnabled={isReportEnabled} />\n        ),\n        accessor: 'state',\n        Header: t('State'),\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { uuid: executionId },\n          },\n        }: any) => (executionId ? executionId.slice(0, 6) : 'none'),\n        accessor: 'uuid',\n        Header: t('Execution ID'),\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { scheduled_dttm: scheduledDttm },\n          },\n        }: any) =>\n          moment(new Date(scheduledDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n        accessor: 'scheduled_dttm',\n        Header: t('Scheduled at (UTC)'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm },\n          },\n        }: any) => moment(new Date(startDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n        Header: t('Start at (UTC)'),\n        accessor: 'start_dttm',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm, end_dttm: endDttm },\n          },\n        }: any) =>\n          fDuration(new Date(startDttm).getTime(), new Date(endDttm).getTime()),\n        Header: t('Duration'),\n        disableSortBy: true,\n      },\n      {\n        accessor: 'value',\n        Header: t('Value'),\n      },\n      {\n        accessor: 'error_message',\n        Header: t('Error message'),\n        Cell: ({\n          row: {\n            original: { error_message = '' },\n          },\n        }: any) => (\n          <Tooltip title={error_message} placement=\"topLeft\">\n            <span>{error_message}</span>\n          </Tooltip>\n        ),\n      },\n    ],\n    [isReportEnabled],\n  );\n  const path = `/${isReportEnabled ? 'report' : 'alert'}/list/`;\n  const ALERT_TEXT = t('Alert');\n  const REPORT_TEXT = t('Report');\n\n  return (\n    <>\n      <SubMenu\n        name={\n          <StyledHeader>\n            <span>\n              {alertResource\n                ? alertResource.type === 'Alert'\n                  ? `${ALERT_TEXT}:`\n                  : alertResource.type === 'Report'\n                  ? `${REPORT_TEXT}:`\n                  : null\n                : null}{' '}\n              {alertResource?.name}\n            </span>\n            <span>\n              <Link to={path}>{t('Back to all')}</Link>\n            </span>\n          </StyledHeader>\n        }\n      />\n      <ListView<LogObject>\n        className=\"execution-log-list-view\"\n        columns={columns}\n        count={logCount}\n        data={logs}\n        fetchData={fetchData}\n        initialSort={initialSort}\n        loading={loading}\n        pageSize={PAGE_SIZE}\n      />\n    </>\n  );\n}\n\nexport default withToasts(ExecutionLog);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, SupersetTheme, useTheme } from '@superset-ui/core';\nimport React from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { AlertState } from '../types';\n\nfunction getStatusColor(\n  status: string,\n  isReportEnabled: boolean,\n  theme: SupersetTheme,\n) {\n  switch (status) {\n    case AlertState.Working:\n      return theme.colors.primary.base;\n    case AlertState.Error:\n      return theme.colors.error.base;\n    case AlertState.Success:\n      return isReportEnabled\n        ? theme.colors.success.base\n        : theme.colors.alert.base;\n    case AlertState.Noop:\n      return theme.colors.success.base;\n    case AlertState.Grace:\n      return theme.colors.alert.base;\n    default:\n      return theme.colors.grayscale.base;\n  }\n}\n\nexport default function AlertStatusIcon({\n  state,\n  isReportEnabled = false,\n}: {\n  state: string;\n  isReportEnabled: boolean;\n}) {\n  const theme = useTheme();\n  const lastStateConfig = {\n    icon: Icons.Check,\n    label: '',\n    status: '',\n  };\n  switch (state) {\n    case AlertState.Success:\n      lastStateConfig.icon = isReportEnabled\n        ? Icons.Check\n        : Icons.AlertSolidSmall;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sent')\n        : t('Alert triggered, notification sent');\n      lastStateConfig.status = AlertState.Success;\n      break;\n    case AlertState.Working:\n      lastStateConfig.icon = Icons.Running;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sending')\n        : t('Alert running');\n      lastStateConfig.status = AlertState.Working;\n      break;\n    case AlertState.Error:\n      lastStateConfig.icon = Icons.XSmall;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report failed')\n        : t('Alert failed');\n      lastStateConfig.status = AlertState.Error;\n      break;\n    case AlertState.Noop:\n      lastStateConfig.icon = Icons.Check;\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.Noop;\n      break;\n    case AlertState.Grace:\n      lastStateConfig.icon = Icons.AlertSolidSmall;\n      lastStateConfig.label = t('Alert Triggered, In Grace Period');\n      lastStateConfig.status = AlertState.Grace;\n      break;\n    default:\n      lastStateConfig.icon = Icons.Check;\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.Noop;\n  }\n  const Icon = lastStateConfig.icon;\n  return (\n    <Tooltip title={lastStateConfig.label} placement=\"bottomLeft\">\n      <Icon\n        iconColor={getStatusColor(\n          lastStateConfig.status,\n          isReportEnabled,\n          theme,\n        )}\n      />\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Owner from 'src/types/Owner';\nimport { NOTIFICATION_FORMATS } from 'src/reports/types';\n\ntype user = {\n  id: number;\n  first_name: string;\n  last_name: string;\n};\nexport type ChartObject = {\n  id: number;\n  slice_name: string;\n  viz_type: string;\n};\n\nexport type DashboardObject = {\n  dashboard_title: string;\n  id: number;\n};\n\nexport type DatabaseObject = {\n  database_name: string;\n  id: number;\n};\n\nexport type NotificationMethodOption = 'Email' | 'Slack';\n\nexport type Recipient = {\n  recipient_config_json: {\n    target: string;\n  };\n  type: NotificationMethodOption;\n};\n\nexport type MetaObject = {\n  id?: number;\n  label?: string;\n  value?: number | string;\n};\n\nexport type Operator = '<' | '>' | '<=' | '>=' | '==' | '!=' | 'not null';\n\nexport type AlertObject = {\n  active?: boolean;\n  creation_method?: string;\n  chart?: MetaObject;\n  changed_by?: user;\n  changed_on_delta_humanized?: string;\n  chart_id: number;\n  created_by?: user;\n  created_on?: string;\n  crontab?: string;\n  dashboard?: MetaObject;\n  dashboard_id?: number;\n  database?: MetaObject;\n  description?: string;\n  force_screenshot: boolean;\n  grace_period?: number;\n  id: number;\n  last_eval_dttm?: number;\n  last_state?: 'Success' | 'Working' | 'Error' | 'Not triggered' | 'On Grace';\n  log_retention?: number;\n  name?: string;\n  owners?: Array<Owner | MetaObject>;\n  sql?: string;\n  timezone?: string;\n  recipients?: Array<Recipient>;\n  report_format?: NOTIFICATION_FORMATS;\n  type?: string;\n  validator_config_json?: {\n    op?: Operator;\n    threshold?: number;\n  };\n  validator_type?: string;\n  working_timeout?: number;\n  error?: string;\n};\n\nexport type LogObject = {\n  end_dttm: string;\n  error_message: string;\n  id: number;\n  scheduled_dttm: string;\n  start_dttm: string;\n  state: string;\n  value: string;\n  uuid: string;\n};\n\nexport enum AlertState {\n  Success = 'Success',\n  Working = 'Working',\n  Error = 'Error',\n  Noop = 'Not triggered',\n  Grace = 'On Grace',\n}\n\nexport enum RecipientIconName {\n  Email = 'Email',\n  Slack = 'Slack',\n}\n"],"names":["StyledHeader","styled","theme","css","gridUnit","typography","sizes","s","weights","normal","withToasts","addDangerToast","isReportEnabled","alertId","useParams","state","loading","resourceCount","logCount","resourceCollection","logs","fetchData","useListViewResource","t","alertLoading","resource","alertResource","fetchResource","useSingleViewResource","useEffect","columns","useMemo","Cell","row","original","accessor","Header","size","disableSortBy","uuid","executionId","slice","scheduled_dttm","scheduledDttm","moment","Date","format","start_dttm","startDttm","end_dttm","endDttm","fDuration","getTime","error_message","title","placement","path","ALERT_TEXT","REPORT_TEXT","name","type","to","className","count","data","initialSort","id","desc","pageSize","getStatusColor","status","AlertState","colors","primary","base","error","success","alert","grayscale","AlertStatusIcon","useTheme","lastStateConfig","icon","Icons","label","Icon","iconColor","RecipientIconName"],"sourceRoot":""}