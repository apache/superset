{"version":3,"file":"5c29d96181ac2a4000fb.chunk.js","mappings":"mNAwBA,MAAMA,GAAmBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAkB;;;;;;;;EAU5CC,EAAmBF,EAAAA,GAAAA,GAEvB;;;;;;;MAOK,IAAD,UAAC,eAAEG,EAAF,MAAkBC,GAAnB,SACAD,GAAkB,0BAAiBC,EAAMC,OAAOF,SAA9B,EAAiB,EAA8BG,MADjE;;EAKQ,SAAUC,EAAiBC,GAA4B,MACnE,MAAM,YACJC,EADI,iBAEJC,EAFI,mBAGJC,EAHI,iBAIJC,EAJI,mBAKJC,EALI,gBAMJC,EANI,MAOJC,EAPI,OAQJC,EARI,YASJC,EATI,SAUJC,EAVI,uBAWJC,GAAyB,GACvBX,EAEEY,GAAwBC,EAAAA,EAAAA,cAC3BC,IACC,MAAMC,EAAQD,GAAaA,IAAcE,EAAAA,GACzCf,EAAY,CACVgB,cAAeF,EACX,CACEG,WAAYJ,GAEd,CAAC,EACLL,YAAa,CACXU,MAAOJ,EAAQD,OAAYM,IAP/B,GAWF,CAACnB,IAOH,OAJAoB,EAAAA,EAAAA,YAAU,KACRT,EAAsBH,EAAYU,MAAlC,GACC,CAACV,EAAYU,QAET,SAAAnB,EAAMsB,WAAN,EAAgBC,QACrB,QAAChC,EAAD,CAAkBgB,MAAOA,EAAOC,OAAQA,IACtC,QAACd,EAAD,CACE8B,IAAKd,EACLf,eAAgBc,EAAYd,eAC5B8B,QAASrB,EACTsB,OAAQrB,EACRsB,aAAczB,EACd0B,aAAczB,IAEd,QAAC,KAAD,CACEgB,MAAOV,EAAYU,OAASH,EAAAA,GAC5Ba,KAAK,aACLC,SAAUlB,EACVmB,cAAe,IAAMzB,GAAgB,GACrC0B,eAAgB,KACd1B,GAAgB,GAChBH,IACAE,GAAoB,EAEtBM,uBAAwBA,MAI5B,IACL,C,+ECvFM,MAAMlB,EAAoBD,EAAAA,GAAAA,GAAmC;gBACnD,IAAD,IAAC,OAAEgB,GAAH,SAAgBA,CAAhB;WACJ,IAAD,IAAC,MAAED,GAAH,SAAeA,CAAf;EAGE0B,GAAiBzC,EAAAA,EAAAA,IAAO0C,EAAAA,EAAS;;;;EAMjCC,EAAgB3C,EAAAA,GAAAA,GAE3B;WACU,IAAD,UAAC,MAAEI,EAAF,OAASwC,EAAS,SAAnB,kBAAiCxC,EAAMC,OAAOuC,SAA9C,EAAiC,EAAsBtC,IAAvD","sources":["webpack://superset/./src/filters/components/Time/TimeFilterPlugin.tsx","webpack://superset/./src/filters/components/common.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, NO_TIME_RANGE } from '@superset-ui/core';\nimport React, { useCallback, useEffect } from 'react';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { PluginFilterTimeProps } from './types';\nimport { FilterPluginStyle } from '../common';\n\nconst TimeFilterStyles = styled(FilterPluginStyle)`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n\n  & .ant-tag {\n    margin-right: 0;\n  }\n`;\n\nconst ControlContainer = styled.div<{\n  validateStatus?: 'error' | 'warning' | 'info';\n}>`\n  display: flex;\n  height: 100%;\n  max-width: 100%;\n  width: 100%;\n  & > div,\n  & > div:hover {\n    ${({ validateStatus, theme }) =>\n      validateStatus && `border-color: ${theme.colors[validateStatus]?.base}`}\n  }\n`;\n\nexport default function TimeFilterPlugin(props: PluginFilterTimeProps) {\n  const {\n    setDataMask,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    width,\n    height,\n    filterState,\n    inputRef,\n    isOverflowingFilterBar = false,\n  } = props;\n\n  const handleTimeRangeChange = useCallback(\n    (timeRange?: string): void => {\n      const isSet = timeRange && timeRange !== NO_TIME_RANGE;\n      setDataMask({\n        extraFormData: isSet\n          ? {\n              time_range: timeRange,\n            }\n          : {},\n        filterState: {\n          value: isSet ? timeRange : undefined,\n        },\n      });\n    },\n    [setDataMask],\n  );\n\n  useEffect(() => {\n    handleTimeRangeChange(filterState.value);\n  }, [filterState.value]);\n\n  return props.formData?.inView ? (\n    <TimeFilterStyles width={width} height={height}>\n      <ControlContainer\n        ref={inputRef}\n        validateStatus={filterState.validateStatus}\n        onFocus={setFocusedFilter}\n        onBlur={unsetFocusedFilter}\n        onMouseEnter={setHoveredFilter}\n        onMouseLeave={unsetHoveredFilter}\n      >\n        <DateFilterControl\n          value={filterState.value || NO_TIME_RANGE}\n          name=\"time_range\"\n          onChange={handleTimeRangeChange}\n          onOpenPopover={() => setFilterActive(true)}\n          onClosePopover={() => {\n            setFilterActive(false);\n            unsetHoveredFilter();\n            unsetFocusedFilter();\n          }}\n          isOverflowingFilterBar={isOverflowingFilterBar}\n        />\n      </ControlContainer>\n    </TimeFilterStyles>\n  ) : null;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport { PluginFilterStylesProps } from './types';\nimport FormItem from '../../components/Form/FormItem';\n\nexport const FilterPluginStyle = styled.div<PluginFilterStylesProps>`\n  min-height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n`;\n\nexport const StyledFormItem = styled(FormItem)`\n  &.ant-row.ant-form-item {\n    margin: 0;\n  }\n`;\n\nexport const StatusMessage = styled.div<{\n  status?: 'error' | 'warning' | 'info';\n}>`\n  color: ${({ theme, status = 'error' }) => theme.colors[status]?.base};\n`;\n"],"names":["TimeFilterStyles","styled","FilterPluginStyle","ControlContainer","validateStatus","theme","colors","base","TimeFilterPlugin","props","setDataMask","setHoveredFilter","unsetHoveredFilter","setFocusedFilter","unsetFocusedFilter","setFilterActive","width","height","filterState","inputRef","isOverflowingFilterBar","handleTimeRangeChange","useCallback","timeRange","isSet","NO_TIME_RANGE","extraFormData","time_range","value","undefined","useEffect","formData","inView","ref","onFocus","onBlur","onMouseEnter","onMouseLeave","name","onChange","onOpenPopover","onClosePopover","StyledFormItem","FormItem","StatusMessage","status"],"sourceRoot":""}