{"version":3,"file":"42aeaf6d0c9152d0af24.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/legacy-preset-chart-deckgl/src/components/Legend.jsx","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/arc-layer/arc-layer-vertex.glsl.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/arc-layer/arc-layer.js","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/arc-layer/arc-layer-fragment.glsl.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Arc/Arc.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/factory.tsx"],"sourcesContent":["/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatNumber, styled } from '@superset-ui/core';\n\nconst StyledLegend = styled.div`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    position: absolute;\n    background: ${theme.colors.grayscale.light5};\n    box-shadow: 0 0 ${theme.gridUnit}px ${theme.colors.grayscale.light2};\n    margin: ${theme.gridUnit * 6}px;\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 5}px;\n    outline: none;\n    overflow-y: scroll;\n    max-height: 200px;\n\n    & ul {\n      list-style: none;\n      padding-left: 0;\n      margin: 0;\n\n      & li a {\n        color: ${theme.colors.grayscale.base};\n        text-decoration: none;\n\n        & span {\n          margin-right: ${theme.gridUnit * 3}px;\n        }\n      }\n    }\n  `}\n`;\n\nconst categoryDelimiter = ' - ';\n\nconst propTypes = {\n  categories: PropTypes.object,\n  forceCategorical: PropTypes.bool,\n  format: PropTypes.string,\n  position: PropTypes.oneOf([null, 'tl', 'tr', 'bl', 'br']),\n  showSingleCategory: PropTypes.func,\n  toggleCategory: PropTypes.func,\n};\n\nconst defaultProps = {\n  categories: {},\n  forceCategorical: false,\n  format: null,\n  position: 'tr',\n  showSingleCategory: () => {},\n  toggleCategory: () => {},\n};\n\nexport default class Legend extends React.PureComponent {\n  format(value) {\n    if (!this.props.format || this.props.forceCategorical) {\n      return value;\n    }\n\n    const numValue = parseFloat(value);\n\n    return formatNumber(this.props.format, numValue);\n  }\n\n  formatCategoryLabel(k) {\n    if (!this.props.format) {\n      return k;\n    }\n\n    if (k.includes(categoryDelimiter)) {\n      const values = k.split(categoryDelimiter);\n\n      return (\n        this.format(values[0]) + categoryDelimiter + this.format(values[1])\n      );\n    }\n\n    return this.format(k);\n  }\n\n  render() {\n    if (\n      Object.keys(this.props.categories).length === 0 ||\n      this.props.position === null\n    ) {\n      return null;\n    }\n\n    const categories = Object.entries(this.props.categories).map(([k, v]) => {\n      const style = { color: `rgba(${v.color.join(', ')})` };\n      const icon = v.enabled ? '\\u25FC' : '\\u25FB';\n\n      return (\n        <li key={k}>\n          <a\n            href=\"#\"\n            onClick={() => this.props.toggleCategory(k)}\n            onDoubleClick={() => this.props.showSingleCategory(k)}\n          >\n            <span style={style}>{icon}</span> {this.formatCategoryLabel(k)}\n          </a>\n        </li>\n      );\n    });\n\n    const vertical = this.props.position.charAt(0) === 't' ? 'top' : 'bottom';\n    const horizontal = this.props.position.charAt(1) === 'r' ? 'right' : 'left';\n    const style = {\n      position: 'absolute',\n      [vertical]: '0px',\n      [horizontal]: '10px',\n    };\n\n    return (\n      <StyledLegend style={style}>\n        <ul>{categories}</ul>\n      </StyledLegend>\n    );\n  }\n}\n\nLegend.propTypes = propTypes;\nLegend.defaultProps = defaultProps;\n","export default \"#define SHADER_NAME arc-layer-vertex-shader\\n\\nattribute vec3 positions;\\nattribute vec4 instanceSourceColors;\\nattribute vec4 instanceTargetColors;\\nattribute vec3 instanceSourcePositions;\\nattribute vec3 instanceSourcePositions64Low;\\nattribute vec3 instanceTargetPositions;\\nattribute vec3 instanceTargetPositions64Low;\\nattribute vec3 instancePickingColors;\\nattribute float instanceWidths;\\nattribute float instanceHeights;\\nattribute float instanceTilts;\\n\\nuniform bool greatCircle;\\nuniform bool useShortestPath;\\nuniform float numSegments;\\nuniform float opacity;\\nuniform float widthScale;\\nuniform float widthMinPixels;\\nuniform float widthMaxPixels;\\n\\nvarying vec4 vColor;\\nvarying vec2 uv;\\nvarying float isValid;\\n\\nfloat paraboloid(float distance, float sourceZ, float targetZ, float ratio) {\\n\\n  float deltaZ = targetZ - sourceZ;\\n  float dh = distance * instanceHeights;\\n  if (dh == 0.0) {\\n    return sourceZ + deltaZ * ratio;\\n  }\\n  float unitZ = deltaZ / dh;\\n  float p2 = unitZ * unitZ + 1.0;\\n  float dir = step(deltaZ, 0.0);\\n  float z0 = mix(sourceZ, targetZ, dir);\\n  float r = mix(ratio, 1.0 - ratio, dir);\\n  return sqrt(r * (p2 - r)) * dh + z0;\\n}\\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\\n\\n  return dir_screenspace * offset_direction * width / 2.0;\\n}\\n\\nfloat getSegmentRatio(float index) {\\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\\n}\\n\\nvec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {\\n  float distance = length(source.xy - target.xy);\\n  float z = paraboloid(distance, source.z, target.z, segmentRatio);\\n\\n  float tiltAngle = radians(instanceTilts);\\n  vec2 tiltDirection = normalize(target.xy - source.xy);\\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\\n\\n  return vec3(\\n    mix(source.xy, target.xy, segmentRatio) + tilt,\\n    z * cos(tiltAngle)\\n  );\\n}\\nfloat getAngularDist (vec2 source, vec2 target) {\\n  vec2 sourceRadians = radians(source);\\n  vec2 targetRadians = radians(target);\\n  vec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);\\n  vec2 shd_sq = sin_half_delta * sin_half_delta;\\n\\n  float a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;\\n  return 2.0 * asin(sqrt(a));\\n}\\n\\nvec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {\\n  vec2 lngLat;\\n  if(abs(angularDist - PI) < 0.001) {\\n    lngLat = (1.0 - t) * source.xy + t * target.xy;\\n  } else {\\n    float a = sin((1.0 - t) * angularDist);\\n    float b = sin(t * angularDist);\\n    vec3 p = source3D.yxz * a + target3D.yxz * b;\\n    lngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));\\n  }\\n\\n  float z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);\\n\\n  return vec3(lngLat, z);\\n}\\n\\nvoid main(void) {\\n  geometry.worldPosition = instanceSourcePositions;\\n  geometry.worldPositionAlt = instanceTargetPositions;\\n\\n  float segmentIndex = positions.x;\\n  float segmentRatio = getSegmentRatio(segmentIndex);\\n  float prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));\\n  float nextSegmentRatio = getSegmentRatio(min(numSegments - 1.0, segmentIndex + 1.0));\\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\\n  isValid = 1.0;\\n\\n  uv = vec2(segmentRatio, positions.y);\\n  geometry.uv = uv;\\n  geometry.pickingColor = instancePickingColors;\\n\\n  vec4 curr;\\n  vec4 next;\\n  vec3 source;\\n  vec3 target;\\n\\n  if ((greatCircle || project_uProjectionMode == PROJECTION_MODE_GLOBE) && project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\\n    source = project_globe_(vec3(instanceSourcePositions.xy, 0.0));\\n    target = project_globe_(vec3(instanceTargetPositions.xy, 0.0));\\n    float angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);\\n\\n    vec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);\\n    vec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);\\n    vec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);\\n\\n    if (abs(currPos.x - prevPos.x) > 180.0) {\\n      indexDir = -1.0;\\n      isValid = 0.0;\\n    } else if (abs(currPos.x - nextPos.x) > 180.0) {\\n      indexDir = 1.0;\\n      isValid = 0.0;\\n    }\\n    nextPos = indexDir < 0.0 ? prevPos : nextPos;\\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\\n\\n    if (isValid == 0.0) {\\n      nextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;\\n      float t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);\\n      currPos = mix(currPos, nextPos, t);\\n      segmentRatio = mix(segmentRatio, nextSegmentRatio, t);\\n    }\\n\\n    vec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);\\n    vec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);\\n  \\n    curr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);\\n    next = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));\\n  \\n  } else {\\n    vec3 source_world = instanceSourcePositions;\\n    vec3 target_world = instanceTargetPositions;\\n    if (useShortestPath) {\\n      source_world.x = mod(source_world.x + 180., 360.0) - 180.;\\n      target_world.x = mod(target_world.x + 180., 360.0) - 180.;\\n\\n      float deltaLng = target_world.x - source_world.x;\\n      if (deltaLng > 180.) target_world.x -= 360.;\\n      if (deltaLng < -180.) source_world.x -= 360.;\\n    }\\n    source = project_position(source_world, instanceSourcePositions64Low);\\n    target = project_position(target_world, instanceTargetPositions64Low);\\n    float antiMeridianX = 0.0;\\n\\n    if (useShortestPath) {\\n      if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\\n        antiMeridianX = -(project_uCoordinateOrigin.x + 180.) / 360. * TILE_SIZE;\\n      }\\n      float thresholdRatio = (antiMeridianX - source.x) / (target.x - source.x);\\n\\n      if (prevSegmentRatio <= thresholdRatio && nextSegmentRatio > thresholdRatio) {\\n        isValid = 0.0;\\n        indexDir = sign(segmentRatio - thresholdRatio);\\n        segmentRatio = thresholdRatio;\\n      }\\n    }\\n\\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\\n    vec3 currPos = interpolateFlat(source, target, segmentRatio);\\n    vec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);\\n\\n    if (useShortestPath) {\\n      if (nextPos.x < antiMeridianX) {\\n        currPos.x += TILE_SIZE;\\n        nextPos.x += TILE_SIZE;\\n      }\\n    }\\n\\n    curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\\n    next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\\n    geometry.position = vec4(currPos, 1.0);\\n  }\\n  float widthPixels = clamp(\\n    project_size_to_pixel(instanceWidths * widthScale),\\n    widthMinPixels, widthMaxPixels\\n  );\\n  vec3 offset = vec3(\\n    getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels),\\n    0.0);\\n  DECKGL_FILTER_SIZE(offset, geometry);\\n  gl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\\n  vColor = vec4(color.rgb, color.a * opacity);\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n}\\n\";\n//# sourceMappingURL=arc-layer-vertex.glsl.js.map","import { Layer, project32, picking } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './arc-layer-vertex.glsl';\nimport fs from './arc-layer-fragment.glsl';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  getSourcePosition: {\n    type: 'accessor',\n    value: x => x.sourcePosition\n  },\n  getTargetPosition: {\n    type: 'accessor',\n    value: x => x.targetPosition\n  },\n  getSourceColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getTargetColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  getHeight: {\n    type: 'accessor',\n    value: 1\n  },\n  getTilt: {\n    type: 'accessor',\n    value: 0\n  },\n  greatCircle: false,\n  widthUnits: 'pixels',\n  widthScale: {\n    type: 'number',\n    value: 1,\n    min: 0\n  },\n  widthMinPixels: {\n    type: 'number',\n    value: 0,\n    min: 0\n  },\n  widthMaxPixels: {\n    type: 'number',\n    value: Number.MAX_SAFE_INTEGER,\n    min: 0\n  }\n};\nexport default class ArcLayer extends Layer {\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  get wrapLongitude() {\n    return false;\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceSourceColors: {\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        transition: true,\n        accessor: 'getSourceColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceTargetColors: {\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        transition: true,\n        accessor: 'getTargetColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      },\n      instanceHeights: {\n        size: 1,\n        transition: true,\n        accessor: 'getHeight',\n        defaultValue: 1\n      },\n      instanceTilts: {\n        size: 1,\n        transition: true,\n        accessor: 'getTilt',\n        defaultValue: 0\n      }\n    });\n  }\n\n  updateState({\n    props,\n    oldProps,\n    changeFlags\n  }) {\n    super.updateState({\n      props,\n      oldProps,\n      changeFlags\n    });\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      viewport\n    } = this.context;\n    const {\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      greatCircle,\n      wrapLongitude\n    } = this.props;\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      greatCircle,\n      widthScale: widthScale * widthMultiplier,\n      widthMinPixels,\n      widthMaxPixels,\n      useShortestPath: wrapLongitude\n    }).draw();\n  }\n\n  _getModel(gl) {\n    let positions = [];\n    const NUM_SEGMENTS = 50;\n\n    for (let i = 0; i < NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, 1, 0, i, -1, 0]);\n    }\n\n    const model = new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 5,\n        attributes: {\n          positions: new Float32Array(positions)\n        }\n      }),\n      isInstanced: true\n    });\n    model.setUniforms({\n      numSegments: NUM_SEGMENTS\n    });\n    return model;\n  }\n\n}\nArcLayer.layerName = 'ArcLayer';\nArcLayer.defaultProps = defaultProps;\n//# sourceMappingURL=arc-layer.js.map","export default \"#define SHADER_NAME arc-layer-fragment-shader\\n\\nprecision highp float;\\n\\nvarying vec4 vColor;\\nvarying vec2 uv;\\nvarying float isValid;\\n\\nvoid main(void) {\\n  if (isValid == 0.0) {\\n    discard;\\n  }\\n\\n  gl_FragColor = vColor;\\n  geometry.uv = uv;\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=arc-layer-fragment.glsl.js.map","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ArcLayer } from 'deck.gl';\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { commonLayerProps } from '../common';\nimport { createCategoricalDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction getPoints(data) {\n  const points = [];\n  data.forEach(d => {\n    points.push(d.sourcePosition);\n    points.push(d.targetPosition);\n  });\n\n  return points;\n}\n\nfunction setTooltipContent(formData) {\n  return o => (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        label={t('Start (Longitude, Latitude): ')}\n        value={`${o.object.sourcePosition[0]}, ${o.object.sourcePosition[1]}`}\n      />\n      <TooltipRow\n        label={t('End (Longitude, Latitude): ')}\n        value={`${o.object.targetPosition[0]}, ${o.object.targetPosition[1]}`}\n      />\n      {formData.dimension && (\n        <TooltipRow\n          label={`${formData.dimension}: `}\n          value={`${o.object.cat_color}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport function getLayer(fd, payload, onAddFilter, setTooltip) {\n  const data = payload.data.features;\n  const sc = fd.color_picker;\n  const tc = fd.target_color_picker;\n\n  return new ArcLayer({\n    data,\n    getSourceColor: d =>\n      d.sourceColor || d.color || [sc.r, sc.g, sc.b, 255 * sc.a],\n    getTargetColor: d =>\n      d.targetColor || d.color || [tc.r, tc.g, tc.b, 255 * tc.a],\n    id: `path-layer-${fd.slice_id}`,\n    strokeWidth: fd.stroke_width ? fd.stroke_width : 3,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent(fd)),\n  });\n}\n\nexport default createCategoricalDeckGLComponent(getLayer, getPoints);\n","/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/* eslint-disable no-prototype-builtins */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CategoricalColorNamespace } from '@superset-ui/core';\nimport AnimatableDeckGLContainer from './AnimatableDeckGLContainer';\nimport Legend from './components/Legend';\nimport { hexToRGB } from './utils/colors';\nimport { getPlaySliderParams } from './utils/time';\nimport sandboxedEval from './utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport fitViewport from './utils/fitViewport';\n\nconst { getScale } = CategoricalColorNamespace;\n\nfunction getCategories(fd, data) {\n  const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  const colorFn = getScale(fd.color_scheme);\n  const categories = {};\n  data.forEach(d => {\n    if (d.cat_color != null && !categories.hasOwnProperty(d.cat_color)) {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n      } else {\n        color = fixedColor;\n      }\n      categories[d.cat_color] = { color, enabled: true };\n    }\n  });\n\n  return categories;\n}\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  getLayer: PropTypes.func.isRequired,\n  getPoints: PropTypes.func.isRequired,\n  height: PropTypes.number.isRequired,\n  mapboxApiKey: PropTypes.string.isRequired,\n  onAddFilter: PropTypes.func,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n};\n\nexport default class CategoricalDeckGLContainer extends React.PureComponent {\n  containerRef = React.createRef();\n\n  /*\n   * A Deck.gl container that handles categories.\n   *\n   * The container will have an interactive legend, populated from the\n   * categories present in the data.\n   */\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n    this.toggleCategory = this.toggleCategory.bind(this);\n    this.showSingleCategory = this.showSingleCategory.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.payload.form_data !== this.state.formData) {\n      this.setState({ ...this.getStateFromProps(nextProps) });\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : [values, values + this.state.getStep(values)],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getStateFromProps(props, state) {\n    const features = props.payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n    const categories = getCategories(props.formData, features);\n\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && props.payload.form_data === state.formData) {\n      return { ...state, categories };\n    }\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      props.payload.form_data.time_grain_sqla ||\n      props.payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n\n    const { width, height, formData } = props;\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: props.getPoints(features),\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: props.payload.form_data,\n      categories,\n    };\n  }\n\n  getLayers(values) {\n    const { getLayer, payload, formData: fd, onAddFilter } = this.props;\n    let features = payload.data.features ? [...payload.data.features] : [];\n\n    // Add colors from categories or fixed color\n    features = this.addColor(features, fd);\n\n    // Apply user defined data mutator if defined\n    if (fd.js_data_mutator) {\n      const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n      features = jsFnMutator(features);\n    }\n\n    // Filter by time\n    if (values[0] === values[1] || values[1] === this.end) {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    // Show only categories selected in the legend\n    const cats = this.state.categories;\n    if (fd.dimension) {\n      features = features.filter(\n        d => cats[d.cat_color] && cats[d.cat_color].enabled,\n      );\n    }\n\n    const filteredPayload = {\n      ...payload,\n      data: { ...payload.data, features },\n    };\n\n    return [\n      getLayer(\n        fd,\n        filteredPayload,\n        onAddFilter,\n        this.setTooltip,\n        this.props.datasource,\n      ),\n    ];\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addColor(data, fd) {\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const colorFn = getScale(fd.color_scheme);\n\n    return data.map(d => {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n\n        return { ...d, color };\n      }\n\n      return d;\n    });\n  }\n\n  toggleCategory(category) {\n    const categoryState = this.state.categories[category];\n    const categories = {\n      ...this.state.categories,\n      [category]: {\n        ...categoryState,\n        enabled: !categoryState.enabled,\n      },\n    };\n\n    // if all categories are disabled, enable all -- similar to nvd3\n    if (Object.values(categories).every(v => !v.enabled)) {\n      /* eslint-disable no-param-reassign */\n      Object.values(categories).forEach(v => {\n        v.enabled = true;\n      });\n    }\n    this.setState({ categories });\n  }\n\n  showSingleCategory(category) {\n    const categories = { ...this.state.categories };\n    /* eslint-disable no-param-reassign */\n    Object.values(categories).forEach(v => {\n      v.enabled = false;\n    });\n    categories[category].enabled = true;\n    this.setState({ categories });\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ position: 'relative' }}>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          getLayers={this.getLayers}\n          start={this.state.start}\n          end={this.state.end}\n          getStep={this.state.getStep}\n          values={this.state.values}\n          disabled={this.state.disabled}\n          viewport={this.state.viewport}\n          mapboxApiAccessToken={this.props.mapboxApiKey}\n          mapStyle={this.props.formData.mapbox_style}\n          setControlValue={this.props.setControlValue}\n          width={this.props.width}\n          height={this.props.height}\n        >\n          <Legend\n            forceCategorical\n            categories={this.state.categories}\n            format={this.props.formData.legend_format}\n            position={this.props.formData.legend_position}\n            showSingleCategory={this.showSingleCategory}\n            toggleCategory={this.toggleCategory}\n          />\n        </AnimatableDeckGLContainer>\n      </div>\n    );\n  }\n}\n\nCategoricalDeckGLContainer.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { isEqual } from 'lodash';\nimport { Datasource, QueryFormData, JsonObject } from '@superset-ui/core';\n\nimport {\n  DeckGLContainerStyledWrapper,\n  DeckGLContainer,\n} from './DeckGLContainer';\nimport CategoricalDeckGLContainer from './CategoricalDeckGLContainer';\nimport fitViewport, { Viewport } from './utils/fitViewport';\nimport { Point } from './types';\n\ntype deckGLComponentProps = {\n  datasource: Datasource;\n  formData: QueryFormData;\n  height: number;\n  onAddFilter: () => void;\n  payload: JsonObject;\n  setControlValue: () => void;\n  viewport: Viewport;\n  width: number;\n};\ninterface getLayerType<T> {\n  (\n    formData: QueryFormData,\n    payload: JsonObject,\n    onAddFilter: () => void,\n    setTooltip: (tooltip: string) => void,\n  ): T;\n}\ninterface getPointsType<T> {\n  (point: number[]): T;\n}\ntype deckGLComponentState = {\n  viewport: Viewport;\n  layer: unknown;\n};\n\nexport function createDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType<Point[]>,\n): React.ComponentClass<deckGLComponentProps> {\n  // Higher order component\n  class Component extends React.PureComponent<\n    deckGLComponentProps,\n    deckGLComponentState\n  > {\n    containerRef: React.RefObject<DeckGLContainer> = React.createRef();\n\n    constructor(props: deckGLComponentProps) {\n      super(props);\n\n      const { width, height, formData } = props;\n      let { viewport } = props;\n      if (formData.autozoom) {\n        viewport = fitViewport(viewport, {\n          width,\n          height,\n          points: getPoints(props.payload.data.features),\n        }) as Viewport;\n      }\n\n      this.state = {\n        viewport,\n        layer: this.computeLayer(props),\n      };\n      this.onViewportChange = this.onViewportChange.bind(this);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: deckGLComponentProps) {\n      // Only recompute the layer if anything BUT the viewport has changed\n      const nextFdNoVP = { ...nextProps.formData, viewport: null };\n      const currFdNoVP = { ...this.props.formData, viewport: null };\n      if (\n        !isEqual(nextFdNoVP, currFdNoVP) ||\n        nextProps.payload !== this.props.payload\n      ) {\n        this.setState({ layer: this.computeLayer(nextProps) });\n      }\n    }\n\n    onViewportChange(viewport: Viewport) {\n      this.setState({ viewport });\n    }\n\n    computeLayer(props: deckGLComponentProps) {\n      const { formData, payload, onAddFilter } = props;\n\n      return getLayer(formData, payload, onAddFilter, this.setTooltip);\n    }\n\n    setTooltip = (tooltip: string) => {\n      const { current } = this.containerRef;\n      if (current) {\n        current?.setTooltip(tooltip);\n      }\n    };\n\n    render() {\n      const { formData, payload, setControlValue, height, width } = this.props;\n      const { layer, viewport } = this.state;\n\n      return (\n        <DeckGLContainerStyledWrapper\n          ref={this.containerRef}\n          mapboxApiAccessToken={payload.data.mapboxApiKey}\n          viewport={viewport}\n          layers={[layer]}\n          mapStyle={formData.mapbox_style}\n          setControlValue={setControlValue}\n          width={width}\n          height={height}\n          onViewportChange={this.onViewportChange}\n        />\n      );\n    }\n  }\n  return Component;\n}\n\nexport function createCategoricalDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType<Point[]>,\n) {\n  return function Component(props: deckGLComponentProps) {\n    const {\n      datasource,\n      formData,\n      height,\n      payload,\n      setControlValue,\n      viewport,\n      width,\n    } = props;\n\n    return (\n      <CategoricalDeckGLContainer\n        datasource={datasource}\n        formData={formData}\n        mapboxApiKey={payload.data.mapboxApiKey}\n        setControlValue={setControlValue}\n        viewport={viewport}\n        getLayer={getLayer}\n        payload={payload}\n        getPoints={getPoints}\n        width={width}\n        height={height}\n      />\n    );\n  };\n}\n"],"names":["StyledLegend","styled","theme","typography","sizes","s","colors","grayscale","light5","gridUnit","light2","base","categoryDelimiter","propTypes","categories","PropTypes","forceCategorical","format","position","showSingleCategory","toggleCategory","Legend","React","value","this","props","numValue","parseFloat","formatNumber","formatCategoryLabel","k","values","split","render","Object","keys","length","entries","map","v","style","color","join","icon","enabled","key","href","onClick","onDoubleClick","charAt","defaultProps","DEFAULT_COLOR","getSourcePosition","type","x","sourcePosition","getTargetPosition","targetPosition","getSourceColor","getTargetColor","getWidth","getHeight","getTilt","greatCircle","widthUnits","widthScale","min","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","ArcLayer","getShaders","super","vs","fs","modules","project32","picking","wrapLongitude","initializeState","getAttributeManager","addInstanced","instanceSourcePositions","size","fp64","use64bitPositions","transition","accessor","instanceTargetPositions","instanceSourceColors","colorFormat","normalized","defaultValue","instanceTargetColors","instanceWidths","instanceHeights","instanceTilts","updateState","oldProps","changeFlags","extensionsChanged","_this$state$model","gl","context","state","model","delete","_getModel","invalidateAll","draw","uniforms","viewport","widthMultiplier","metersPerPixel","setUniforms","useShortestPath","positions","i","concat","id","geometry","drawMode","attributes","Float32Array","isInstanced","numSegments","layerName","getLayer","fd","payload","onAddFilter","setTooltip","data","features","sc","color_picker","tc","target_color_picker","d","sourceColor","r","g","b","a","targetColor","slice_id","strokeWidth","stroke_width","commonLayerProps","formData","o","className","TooltipRow","label","t","object","dimension","cat_color","createCategoricalDeckGLComponent","points","forEach","push","getScale","CategoricalColorNamespace","datasource","getPoints","height","mapboxApiKey","setControlValue","width","CategoricalDeckGLContainer","constructor","containerRef","tooltip","current","getStateFromProps","getLayers","bind","onValuesChange","UNSAFE_componentWillReceiveProps","nextProps","form_data","setState","Array","isArray","getStep","timestamps","f","__timestamp","c","fixedColor","colorFn","color_scheme","hasOwnProperty","hexToRGB","sliceId","getCategories","granularity","time_grain_sqla","start","end","disabled","getPlaySliderParams","autozoom","fitViewport","zoom","selected","lastClick","addColor","js_data_mutator","sandboxedEval","jsFnMutator","filter","cats","category","categoryState","every","AnimatableDeckGLContainer","ref","mapboxApiAccessToken","mapStyle","mapbox_style","legend_format","legend_position","createDeckGLComponent","Component","layer","computeLayer","onViewportChange","nextFdNoVP","currFdNoVP","DeckGLContainer","layers"],"sourceRoot":""}