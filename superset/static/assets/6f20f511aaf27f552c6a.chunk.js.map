{"version":3,"file":"6f20f511aaf27f552c6a.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/CronPicker/CronPicker.tsx","webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/components/Switch/index.tsx","webpack://superset/./src/components/TimezoneSelector/index.tsx","webpack://superset/./src/views/CRUD/alert/components/RecipientIcon.tsx","webpack://superset/./src/components/LastUpdated/index.tsx","webpack://superset/./src/views/CRUD/alert/components/AlertReportCronScheduler.tsx","webpack://superset/./src/views/CRUD/alert/components/NotificationMethod.tsx","webpack://superset/./src/views/CRUD/alert/AlertReportModal.tsx","webpack://superset/./src/views/CRUD/alert/AlertList.tsx","webpack://superset/./src/views/CRUD/alert/components/AlertStatusIcon.tsx","webpack://superset/./src/views/CRUD/alert/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { ConfigProvider } from 'antd';\nimport { styled, t } from '@superset-ui/core';\nimport ReactCronPicker, { Locale, CronProps } from 'react-js-cron';\n\nexport * from 'react-js-cron';\n\nexport const LOCALE: Locale = {\n  everyText: t('every'),\n  emptyMonths: t('every month'),\n  emptyMonthDays: t('every day of the month'),\n  emptyMonthDaysShort: t('day of the month'),\n  emptyWeekDays: t('every day of the week'),\n  emptyWeekDaysShort: t('day of the week'),\n  emptyHours: t('every hour'),\n  emptyMinutes: t('every minute'),\n  emptyMinutesForHourPeriod: t('every'),\n  yearOption: t('year'),\n  monthOption: t('month'),\n  weekOption: t('week'),\n  dayOption: t('day'),\n  hourOption: t('hour'),\n  minuteOption: t('minute'),\n  rebootOption: t('reboot'),\n  prefixPeriod: t('Every'),\n  prefixMonths: t('in'),\n  prefixMonthDays: t('on'),\n  prefixWeekDays: t('on'),\n  prefixWeekDaysForMonthAndYearPeriod: t('and'),\n  prefixHours: t('at'),\n  prefixMinutes: t(':'),\n  prefixMinutesForHourPeriod: t('at'),\n  suffixMinutesForHourPeriod: t('minute(s)'),\n  errorInvalidCron: t('Invalid cron expression'),\n  clearButtonText: t('Clear'),\n  weekDays: [\n    // Order is important, the index will be used as value\n    t('Sunday'), // Sunday must always be first, it's \"0\"\n    t('Monday'),\n    t('Tuesday'),\n    t('Wednesday'),\n    t('Thursday'),\n    t('Friday'),\n    t('Saturday'),\n  ],\n  months: [\n    // Order is important, the index will be used as value\n    t('January'),\n    t('February'),\n    t('March'),\n    t('April'),\n    t('May'),\n    t('June'),\n    t('July'),\n    t('August'),\n    t('September'),\n    t('October'),\n    t('November'),\n    t('December'),\n  ],\n  // Order is important, the index will be used as value\n  altWeekDays: [\n    t('SUN'), // Sunday must always be first, it's \"0\"\n    t('MON'),\n    t('TUE'),\n    t('WED'),\n    t('THU'),\n    t('FRI'),\n    t('SAT'),\n  ],\n  // Order is important, the index will be used as value\n  altMonths: [\n    t('JAN'),\n    t('FEB'),\n    t('MAR'),\n    t('APR'),\n    t('MAY'),\n    t('JUN'),\n    t('JUL'),\n    t('AUG'),\n    t('SEP'),\n    t('OCT'),\n    t('NOV'),\n    t('DEC'),\n  ],\n};\n\nexport const CronPicker = styled((props: CronProps) => (\n  <ConfigProvider\n    getPopupContainer={trigger => trigger.parentElement as HTMLElement}\n  >\n    <ReactCronPicker locale={LOCALE} {...props} />\n  </ConfigProvider>\n))`\n  .react-js-cron-field {\n    margin-bottom: 0px;\n  }\n  .react-js-cron-select:not(.react-js-cron-custom-select) > div:first-of-type,\n  .react-js-cron-custom-select {\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    background-color: ${({ theme }) =>\n      theme.colors.grayscale.light4} !important;\n  }\n  .react-js-cron-custom-select > div:first-of-type {\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n  }\n  .react-js-cron-custom-select .ant-select-selection-placeholder {\n    flex: auto;\n  }\n  .react-js-cron-custom-select .ant-select-selection-overflow-item {\n    align-self: center;\n  }\n`;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport BaseSwitch, { SwitchProps } from 'antd/lib/switch';\n\nconst StyledSwitch = styled(BaseSwitch)`\n  .ant-switch-checked {\n    background-color: ${({ theme }) => theme.colors.primary.base};\n  }\n`;\n\nexport const Switch = (props: SwitchProps) => <StyledSwitch {...props} />;\nexport type { SwitchProps };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useMemo } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\n\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan', // timezones are deduped by the first alphabetical value\n};\n\nconst MIN_SELECT_WIDTH = '400px';\n\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n    'Mountain Standard Time - Phoenix',\n    'Mountain Standard Time - Phoenix',\n  ],\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time'],\n};\n\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\n\nconst getOffsetKey = (name: string) =>\n  JANUARY.tz(name).utcOffset().toString() +\n  JULY.tz(name).utcOffset().toString();\n\nconst getTimezoneName = (name: string) => {\n  const offsets = getOffsetKey(name);\n  return (\n    (currentDate.tz(name).isDST()\n      ? offsetsToName[offsets]?.[1]\n      : offsetsToName[offsets]?.[0]) || name\n  );\n};\n\nconst ALL_ZONES = moment.tz\n  .countries()\n  .map(country => moment.tz.zonesForCountry(country, true))\n  .flat();\n\nconst TIMEZONES: moment.MomentZoneOffset[] = [];\nALL_ZONES.forEach(zone => {\n  if (\n    !TIMEZONES.find(\n      option => getOffsetKey(option.name) === getOffsetKey(zone.name),\n    )\n  ) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\n\nconst TIMEZONE_OPTIONS = TIMEZONES.map(zone => ({\n  label: `GMT ${moment\n    .tz(currentDate, zone.name)\n    .format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name),\n  timezoneName: zone.name,\n}));\n\nconst TIMEZONE_OPTIONS_SORT_COMPARATOR = (\n  a: typeof TIMEZONE_OPTIONS[number],\n  b: typeof TIMEZONE_OPTIONS[number],\n) =>\n  moment.tz(currentDate, a.timezoneName).utcOffset() -\n  moment.tz(currentDate, b.timezoneName).utcOffset();\n\n// pre-sort timezone options by time offset\nTIMEZONE_OPTIONS.sort(TIMEZONE_OPTIONS_SORT_COMPARATOR);\n\nconst matchTimezoneToOptions = (timezone: string) =>\n  TIMEZONE_OPTIONS.find(option => option.offsets === getOffsetKey(timezone))\n    ?.value || DEFAULT_TIMEZONE.value;\n\nexport type TimezoneSelectorProps = {\n  onTimezoneChange: (value: string) => void;\n  timezone?: string | null;\n  minWidth?: string;\n};\n\nexport default function TimezoneSelector({\n  onTimezoneChange,\n  timezone,\n  minWidth = MIN_SELECT_WIDTH, // smallest size for current values\n}: TimezoneSelectorProps) {\n  const validTimezone = useMemo(\n    () => matchTimezoneToOptions(timezone || moment.tz.guess()),\n    [timezone],\n  );\n\n  // force trigger a timezone update if provided `timezone` is not invalid\n  useEffect(() => {\n    if (timezone !== validTimezone) {\n      onTimezoneChange(validTimezone);\n    }\n  }, [validTimezone, onTimezoneChange, timezone]);\n\n  return (\n    <Select\n      ariaLabel={t('Timezone selector')}\n      css={{ minWidth }}\n      onChange={tz => onTimezoneChange(tz as string)}\n      value={validTimezone}\n      options={TIMEZONE_OPTIONS}\n      sortComparator={TIMEZONE_OPTIONS_SORT_COMPARATOR}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetTheme, css } from '@superset-ui/core';\nimport React, { ReactElement } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { RecipientIconName } from '../types';\n\nconst StyledIcon = (theme: SupersetTheme) => css`\n  color: ${theme.colors.grayscale.light1};\n  margin-right: ${theme.gridUnit * 2}px;\n`;\n\nexport default function RecipientIcon({ type }: { type: string }) {\n  const recipientIconConfig: { icon: null | ReactElement; label: string } = {\n    icon: null,\n    label: '',\n  };\n  switch (type) {\n    case RecipientIconName.Email:\n      recipientIconConfig.icon = <Icons.Email css={StyledIcon} />;\n      recipientIconConfig.label = RecipientIconName.Email;\n      break;\n    case RecipientIconName.Slack:\n      recipientIconConfig.icon = <Icons.Slack css={StyledIcon} />;\n      recipientIconConfig.label = RecipientIconName.Slack;\n      break;\n    default:\n      recipientIconConfig.icon = null;\n      recipientIconConfig.label = '';\n  }\n  return recipientIconConfig.icon ? (\n    <Tooltip title={recipientIconConfig.label} placement=\"bottom\">\n      {recipientIconConfig.icon}\n    </Tooltip>\n  ) : null;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, FunctionComponent } from 'react';\nimport moment, { Moment, MomentInput } from 'moment';\nimport { t, styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n\nconst REFRESH_INTERVAL = 60000; // every minute\n\ninterface LastUpdatedProps {\n  updatedAt: MomentInput;\n  update?: React.MouseEventHandler<HTMLSpanElement>;\n}\nmoment.updateLocale('en', {\n  calendar: {\n    lastDay: '[Yesterday at] LTS',\n    sameDay: '[Today at] LTS',\n    nextDay: '[Tomorrow at] LTS',\n    lastWeek: '[last] dddd [at] LTS',\n    nextWeek: 'dddd [at] LTS',\n    sameElse: 'L',\n  },\n});\n\nconst TextStyles = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nconst Refresh = styled(Icons.Refresh)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  width: auto;\n  height: ${({ theme }) => theme.gridUnit * 5}px;\n  position: relative;\n  top: ${({ theme }) => theme.gridUnit}px;\n  left: ${({ theme }) => theme.gridUnit}px;\n  cursor: pointer;\n`;\n\nexport const LastUpdated: FunctionComponent<LastUpdatedProps> = ({\n  updatedAt,\n  update,\n}) => {\n  const [timeSince, setTimeSince] = useState<Moment>(moment(updatedAt));\n\n  useEffect(() => {\n    setTimeSince(() => moment(updatedAt));\n\n    // update UI every minute in case day changes\n    const interval = setInterval(() => {\n      setTimeSince(() => moment(updatedAt));\n    }, REFRESH_INTERVAL);\n\n    return () => clearInterval(interval);\n  }, [updatedAt]);\n\n  return (\n    <TextStyles>\n      {t('Last Updated %s', timeSince.isValid() ? timeSince.calendar() : '--')}\n      {update && <Refresh onClick={update} />}\n    </TextStyles>\n  );\n};\n\nexport default LastUpdated;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useCallback, useRef, FocusEvent } from 'react';\nimport { t, useTheme } from '@superset-ui/core';\n\nimport { AntdInput, RadioChangeEvent } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker, CronError } from 'src/components/CronPicker';\nimport { StyledInputContainer } from 'src/views/CRUD/alert/AlertReportModal';\n\nexport interface AlertReportCronSchedulerProps {\n  value: string;\n  onChange: (change: string) => any;\n}\n\nexport const AlertReportCronScheduler: React.FC<AlertReportCronSchedulerProps> =\n  ({ value, onChange }) => {\n    const theme = useTheme();\n    const inputRef = useRef<AntdInput>(null);\n    const [scheduleFormat, setScheduleFormat] = useState<'picker' | 'input'>(\n      'picker',\n    );\n\n    const handleRadioButtonChange = useCallback(\n      (e: RadioChangeEvent) => setScheduleFormat(e.target.value),\n      [],\n    );\n\n    const customSetValue = useCallback(\n      (newValue: string) => {\n        onChange(newValue);\n        inputRef.current?.setValue(newValue);\n      },\n      [inputRef, onChange],\n    );\n\n    const handleBlur = useCallback(\n      (event: FocusEvent<HTMLInputElement>) => {\n        onChange(event.target.value);\n      },\n      [onChange],\n    );\n\n    const handlePressEnter = useCallback(() => {\n      onChange(inputRef.current?.input.value || '');\n    }, [onChange]);\n\n    const [error, onError] = useState<CronError>();\n\n    return (\n      <>\n        <Radio.Group onChange={handleRadioButtonChange} value={scheduleFormat}>\n          <div className=\"inline-container add-margin\">\n            <Radio data-test=\"picker\" value=\"picker\" />\n            <CronPicker\n              clearButton={false}\n              value={value}\n              setValue={customSetValue}\n              disabled={scheduleFormat !== 'picker'}\n              displayError={scheduleFormat === 'picker'}\n              onError={onError}\n            />\n          </div>\n          <div className=\"inline-container add-margin\">\n            <Radio data-test=\"input\" value=\"input\" />\n            <span className=\"input-label\">{t('CRON Schedule')}</span>\n            <StyledInputContainer\n              data-test=\"input-content\"\n              className=\"styled-input\"\n            >\n              <div className=\"input-container\">\n                <Input\n                  type=\"text\"\n                  name=\"crontab\"\n                  ref={inputRef}\n                  style={error ? { borderColor: theme.colors.error.base } : {}}\n                  placeholder={t('CRON expression')}\n                  disabled={scheduleFormat !== 'input'}\n                  onBlur={handleBlur}\n                  onPressEnter={handlePressEnter}\n                />\n              </div>\n            </StyledInputContainer>\n          </div>\n        </Radio.Group>\n      </>\n    );\n  };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState } from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport { NotificationMethodOption } from 'src/views/CRUD/alert/types';\nimport { StyledInputContainer } from '../AlertReportModal';\n\nconst StyledNotificationMethod = styled.div`\n  margin-bottom: 10px;\n\n  .input-container {\n    textarea {\n      height: auto;\n    }\n  }\n\n  .inline-container {\n    margin-bottom: 10px;\n\n    .input-container {\n      margin-left: 10px;\n    }\n\n    > div {\n      margin: 0;\n    }\n\n    .delete-button {\n      margin-left: 10px;\n      padding-top: 3px;\n    }\n  }\n`;\n\ntype NotificationSetting = {\n  method?: NotificationMethodOption;\n  recipients: string;\n  options: NotificationMethodOption[];\n};\n\ninterface NotificationMethodProps {\n  setting?: NotificationSetting | null;\n  index: number;\n  onUpdate?: (index: number, updatedSetting: NotificationSetting) => void;\n  onRemove?: (index: number) => void;\n}\n\nexport const NotificationMethod: FunctionComponent<NotificationMethodProps> = ({\n  setting = null,\n  index,\n  onUpdate,\n  onRemove,\n}) => {\n  const { method, recipients, options } = setting || {};\n  const [recipientValue, setRecipientValue] = useState<string>(\n    recipients || '',\n  );\n  const theme = useTheme();\n\n  if (!setting) {\n    return null;\n  }\n\n  const onMethodChange = (method: NotificationMethodOption) => {\n    // Since we're swapping the method, reset the recipients\n    setRecipientValue('');\n    if (onUpdate) {\n      const updatedSetting = {\n        ...setting,\n        method,\n        recipients: '',\n      };\n\n      onUpdate(index, updatedSetting);\n    }\n  };\n\n  const onRecipientsChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { target } = event;\n\n    setRecipientValue(target.value);\n\n    if (onUpdate) {\n      const updatedSetting = {\n        ...setting,\n        recipients: target.value,\n      };\n\n      onUpdate(index, updatedSetting);\n    }\n  };\n\n  // Set recipients\n  if (!!recipients && recipientValue !== recipients) {\n    setRecipientValue(recipients);\n  }\n\n  return (\n    <StyledNotificationMethod>\n      <div className=\"inline-container\">\n        <StyledInputContainer>\n          <div className=\"input-container\">\n            <Select\n              ariaLabel={t('Delivery method')}\n              data-test=\"select-delivery-method\"\n              onChange={onMethodChange}\n              placeholder={t('Select Delivery Method')}\n              options={(options || []).map(\n                (method: NotificationMethodOption) => ({\n                  label: method,\n                  value: method,\n                }),\n              )}\n              value={method}\n            />\n          </div>\n        </StyledInputContainer>\n        {method !== undefined && !!onRemove ? (\n          <span\n            role=\"button\"\n            tabIndex={0}\n            className=\"delete-button\"\n            onClick={() => onRemove(index)}\n          >\n            <Icons.Trash iconColor={theme.colors.grayscale.base} />\n          </span>\n        ) : null}\n      </div>\n      {method !== undefined ? (\n        <StyledInputContainer>\n          <div className=\"control-label\">{t(method)}</div>\n          <div className=\"input-container\">\n            <textarea\n              name=\"recipients\"\n              value={recipientValue}\n              onChange={onRecipientsChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t('Recipients are separated by \",\" or \";\"')}\n          </div>\n        </StyledInputContainer>\n      ) : null}\n    </StyledNotificationMethod>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  FunctionComponent,\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport {\n  styled,\n  t,\n  SupersetClient,\n  css,\n  SupersetTheme,\n} from '@superset-ui/core';\nimport rison from 'rison';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { Switch } from 'src/components/Switch';\nimport Modal from 'src/components/Modal';\nimport TimezoneSelector from 'src/components/TimezoneSelector';\nimport { Radio } from 'src/components/Radio';\nimport { propertyComparator } from 'src/components/Select/utils';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport Owner from 'src/types/Owner';\nimport { AntdCheckbox, AsyncSelect, Select } from 'src/components';\nimport TextAreaControl from 'src/explore/components/controls/TextAreaControl';\nimport { useCommonConf } from 'src/views/CRUD/data/database/state';\nimport {\n  NotificationMethodOption,\n  AlertObject,\n  ChartObject,\n  DashboardObject,\n  DatabaseObject,\n  MetaObject,\n  Operator,\n  Recipient,\n} from 'src/views/CRUD/alert/types';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { AlertReportCronScheduler } from './components/AlertReportCronScheduler';\nimport { NotificationMethod } from './components/NotificationMethod';\n\nconst TIMEOUT_MIN = 1;\nconst TEXT_BASED_VISUALIZATION_TYPES = [\n  'pivot_table',\n  'pivot_table_v2',\n  'table',\n  'paired_ttest',\n];\n\ntype SelectValue = {\n  value: string;\n  label: string;\n};\n\ninterface AlertReportModalProps {\n  addSuccessToast: (msg: string) => void;\n  addDangerToast: (msg: string) => void;\n  alert?: AlertObject | null;\n  isReport?: boolean;\n  onAdd?: (alert?: AlertObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst DEFAULT_NOTIFICATION_METHODS: NotificationMethodOption[] = ['Email'];\nconst DEFAULT_NOTIFICATION_FORMAT = 'PNG';\nconst CONDITIONS = [\n  {\n    label: t('< (Smaller than)'),\n    value: '<',\n  },\n  {\n    label: t('> (Larger than)'),\n    value: '>',\n  },\n  {\n    label: t('<= (Smaller or equal)'),\n    value: '<=',\n  },\n  {\n    label: t('>= (Larger or equal)'),\n    value: '>=',\n  },\n  {\n    label: t('== (Is equal)'),\n    value: '==',\n  },\n  {\n    label: t('!= (Is not equal)'),\n    value: '!=',\n  },\n  {\n    label: t('Not null'),\n    value: 'not null',\n  },\n];\n\nconst RETENTION_OPTIONS = [\n  {\n    label: t('None'),\n    value: 0,\n  },\n  {\n    label: t('30 days'),\n    value: 30,\n  },\n  {\n    label: t('60 days'),\n    value: 60,\n  },\n  {\n    label: t('90 days'),\n    value: 90,\n  },\n];\n\nconst DEFAULT_RETENTION = 90;\nconst DEFAULT_WORKING_TIMEOUT = 3600;\nconst DEFAULT_CRON_VALUE = '0 * * * *'; // every hour\nconst DEFAULT_ALERT = {\n  active: true,\n  creation_method: 'alerts_reports',\n  crontab: DEFAULT_CRON_VALUE,\n  log_retention: DEFAULT_RETENTION,\n  working_timeout: DEFAULT_WORKING_TIMEOUT,\n  name: '',\n  owners: [],\n  recipients: [],\n  sql: '',\n  validator_config_json: {},\n  validator_type: '',\n  force_screenshot: false,\n  grace_period: undefined,\n};\n\nconst StyledModal = styled(Modal)`\n  max-width: 1200px;\n  width: 100%;\n\n  .ant-modal-body {\n    overflow: initial;\n  }\n`;\n\nconst StyledIcon = (theme: SupersetTheme) => css`\n  margin: auto ${theme.gridUnit * 2}px auto 0;\n  color: ${theme.colors.grayscale.base};\n`;\n\nconst StyledSectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .control-label {\n    margin-top: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  .header-section {\n    display: flex;\n    flex: 0 0 auto;\n    align-items: center;\n    width: 100%;\n    padding: ${({ theme }) => theme.gridUnit * 4}px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  }\n\n  .column-section {\n    display: flex;\n    flex: 1 1 auto;\n\n    .column {\n      flex: 1 1 auto;\n      min-width: calc(33.33% - ${({ theme }) => theme.gridUnit * 8}px);\n      padding: ${({ theme }) => theme.gridUnit * 4}px;\n\n      .async-select {\n        margin: 10px 0 20px;\n      }\n\n      &.condition {\n        border-right: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n      }\n\n      &.message {\n        border-left: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n      }\n    }\n  }\n\n  .inline-container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    &.wrap {\n      flex-wrap: wrap;\n    }\n\n    > div {\n      flex: 1 1 auto;\n    }\n\n    &.add-margin {\n      margin-bottom: 5px;\n    }\n\n    .styled-input {\n      margin: 0 0 0 10px;\n\n      input {\n        flex: 0 0 auto;\n      }\n    }\n  }\n`;\n\nconst StyledSectionTitle = styled.div`\n  display: flex;\n  align-items: center;\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n\n  h4 {\n    margin: 0;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n`;\n\nconst StyledSwitchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n\n  .switch-label {\n    margin-left: 10px;\n  }\n`;\n\nexport const StyledInputContainer = styled.div`\n  flex: 1;\n  margin-top: 0;\n\n  .helper {\n    display: block;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    padding: ${({ theme }) => theme.gridUnit}px 0;\n    text-align: left;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    > div {\n      width: 100%;\n    }\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  input[disabled] {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n\n  textarea {\n    height: 300px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='description'] {\n      flex: 1 1 auto;\n    }\n  }\n\n  .input-label {\n    margin-left: 10px;\n  }\n`;\n\nconst StyledRadio = styled(Radio)`\n  display: block;\n  line-height: ${({ theme }) => theme.gridUnit * 7}px;\n`;\n\nconst StyledRadioGroup = styled(Radio.Group)`\n  margin-left: ${({ theme }) => theme.gridUnit * 5.5}px;\n`;\n\nconst StyledCheckbox = styled(AntdCheckbox)`\n  margin-left: ${({ theme }) => theme.gridUnit * 5.5}px;\n  margin-top: ${({ theme }) => theme.gridUnit}px;\n`;\n\n// Notification Method components\nconst StyledNotificationAddButton = styled.div`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  cursor: pointer;\n\n  i {\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.disabled {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    cursor: default;\n  }\n`;\n\nconst StyledNotificationMethodWrapper = styled.div`\n  .inline-container .input-container {\n    margin-left: 0;\n  }\n`;\n\nconst timezoneHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0;\n`;\n\nconst inputSpacer = (theme: SupersetTheme) =>\n  css`\n    margin-right: ${theme.gridUnit * 3}px;\n  `;\n\ntype NotificationAddStatus = 'active' | 'disabled' | 'hidden';\n\ninterface NotificationMethodAddProps {\n  status: NotificationAddStatus;\n  onClick: () => void;\n}\n\nconst TRANSLATIONS = {\n  ADD_NOTIFICATION_METHOD_TEXT: t('Add notification method'),\n  ADD_DELIVERY_METHOD_TEXT: t('Add delivery method'),\n  SAVE_TEXT: t('Save'),\n  ADD_TEXT: t('Add'),\n  EDIT_REPORT_TEXT: t('Edit Report'),\n  EDIT_ALERT_TEXT: t('Edit Alert'),\n  ADD_REPORT_TEXT: t('Add Report'),\n  ADD_ALERT_TEXT: t('Add Alert'),\n  REPORT_NAME_TEXT: t('Report name'),\n  ALERT_NAME_TEXT: t('Alert name'),\n  OWNERS_TEXT: t('Owners'),\n  DESCRIPTION_TEXT: t('Description'),\n  ACTIVE_TEXT: t('Active'),\n  ALERT_CONDITION_TEXT: t('Alert condition'),\n  DATABASE_TEXT: t('Database'),\n  SQL_QUERY_TEXT: t('SQL Query'),\n  TRIGGER_ALERT_IF_TEXT: t('Trigger Alert If...'),\n  CONDITION_TEXT: t('Condition'),\n  VALUE_TEXT: t('Value'),\n  VALUE_TOOLTIP: t('Threshold value should be double precision number'),\n  REPORT_SCHEDULE_TEXT: t('Report schedule'),\n  ALERT_CONDITION_SCHEDULE_TEXT: t('Alert condition schedule'),\n  TIMEZONE_TEXT: t('Timezone'),\n  SCHEDULE_SETTINGS_TEXT: t('Schedule settings'),\n  LOG_RETENTION_TEXT: t('Log retention'),\n  WORKING_TIMEOUT_TEXT: t('Working timeout'),\n  TIME_IN_SECONDS_TEXT: t('Time in seconds'),\n  SECONDS_TEXT: t('seconds'),\n  GRACE_PERIOD_TEXT: t('Grace period'),\n  MESSAGE_CONTENT_TEXT: t('Message content'),\n  DASHBOARD_TEXT: t('Dashboard'),\n  CHART_TEXT: t('Chart'),\n  SEND_AS_PNG_TEXT: t('Send as PNG'),\n  SEND_AS_CSV_TEXT: t('Send as CSV'),\n  SEND_AS_TEXT: t('Send as text'),\n  IGNORE_CACHE_TEXT: t('Ignore cache when generating screenshot'),\n  NOTIFICATION_METHOD_TEXT: t('Notification method'),\n};\n\nconst NotificationMethodAdd: FunctionComponent<NotificationMethodAddProps> = ({\n  status = 'active',\n  onClick,\n}) => {\n  if (status === 'hidden') {\n    return null;\n  }\n\n  const checkStatus = () => {\n    if (status !== 'disabled') {\n      onClick();\n    }\n  };\n\n  return (\n    <StyledNotificationAddButton className={status} onClick={checkStatus}>\n      <i className=\"fa fa-plus\" />{' '}\n      {status === 'active'\n        ? TRANSLATIONS.ADD_NOTIFICATION_METHOD_TEXT\n        : TRANSLATIONS.ADD_DELIVERY_METHOD_TEXT}\n    </StyledNotificationAddButton>\n  );\n};\n\ntype NotificationSetting = {\n  method?: NotificationMethodOption;\n  recipients: string;\n  options: NotificationMethodOption[];\n};\n\nconst AlertReportModal: FunctionComponent<AlertReportModalProps> = ({\n  addDangerToast,\n  onAdd,\n  onHide,\n  show,\n  alert = null,\n  isReport = false,\n  addSuccessToast,\n}) => {\n  const conf = useCommonConf();\n  const allowedNotificationMethods: NotificationMethodOption[] =\n    conf?.ALERT_REPORTS_NOTIFICATION_METHODS || DEFAULT_NOTIFICATION_METHODS;\n\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentAlert, setCurrentAlert] =\n    useState<Partial<AlertObject> | null>();\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [contentType, setContentType] = useState<string>('dashboard');\n  const [reportFormat, setReportFormat] = useState<string>(\n    DEFAULT_NOTIFICATION_FORMAT,\n  );\n  const [forceScreenshot, setForceScreenshot] = useState<boolean>(false);\n\n  // Dropdown options\n  const [conditionNotNull, setConditionNotNull] = useState<boolean>(false);\n  const [sourceOptions, setSourceOptions] = useState<MetaObject[]>([]);\n  const [dashboardOptions, setDashboardOptions] = useState<MetaObject[]>([]);\n  const [chartOptions, setChartOptions] = useState<MetaObject[]>([]);\n\n  // Chart metadata\n  const [chartVizType, setChartVizType] = useState<string>('');\n\n  const isEditMode = alert !== null;\n  const formatOptionEnabled =\n    contentType === 'chart' &&\n    (isFeatureEnabled(FeatureFlag.ALERTS_ATTACH_REPORTS) || isReport);\n\n  const [notificationAddState, setNotificationAddState] =\n    useState<NotificationAddStatus>('active');\n  const [notificationSettings, setNotificationSettings] = useState<\n    NotificationSetting[]\n  >([]);\n\n  const onNotificationAdd = () => {\n    const settings: NotificationSetting[] = notificationSettings.slice();\n\n    settings.push({\n      recipients: '',\n      options: allowedNotificationMethods,\n    });\n\n    setNotificationSettings(settings);\n    setNotificationAddState(\n      settings.length === allowedNotificationMethods.length\n        ? 'hidden'\n        : 'disabled',\n    );\n  };\n\n  const updateNotificationSetting = (\n    index: number,\n    setting: NotificationSetting,\n  ) => {\n    const settings = notificationSettings.slice();\n\n    settings[index] = setting;\n    setNotificationSettings(settings);\n\n    if (setting.method !== undefined && notificationAddState !== 'hidden') {\n      setNotificationAddState('active');\n    }\n  };\n\n  const removeNotificationSetting = (index: number) => {\n    const settings = notificationSettings.slice();\n\n    settings.splice(index, 1);\n    setNotificationSettings(settings);\n    setNotificationAddState('active');\n  };\n\n  // Alert fetch logic\n  const {\n    state: { loading, resource, error: fetchError },\n    fetchResource,\n    createResource,\n    updateResource,\n    clearError,\n  } = useSingleViewResource<AlertObject>('report', t('report'), addDangerToast);\n\n  // Functions\n  const hide = () => {\n    clearError();\n    setIsHidden(true);\n    onHide();\n    setNotificationSettings([]);\n    setCurrentAlert({ ...DEFAULT_ALERT });\n    setNotificationAddState('active');\n  };\n\n  const onSave = () => {\n    // Notification Settings\n    const recipients: Recipient[] = [];\n\n    notificationSettings.forEach(setting => {\n      if (setting.method && setting.recipients.length) {\n        recipients.push({\n          recipient_config_json: {\n            target: setting.recipients,\n          },\n          type: setting.method,\n        });\n      }\n    });\n\n    const shouldEnableForceScreenshot = contentType === 'chart' && !isReport;\n    const data: any = {\n      ...currentAlert,\n      type: isReport ? t('Report') : t('Alert'),\n      force_screenshot: shouldEnableForceScreenshot || forceScreenshot,\n      validator_type: conditionNotNull ? 'not null' : 'operator',\n      validator_config_json: conditionNotNull\n        ? {}\n        : currentAlert?.validator_config_json,\n      chart: contentType === 'chart' ? currentAlert?.chart?.value : null,\n      dashboard:\n        contentType === 'dashboard' ? currentAlert?.dashboard?.value : null,\n      database: currentAlert?.database?.value,\n      owners: (currentAlert?.owners || []).map(\n        owner => (owner as MetaObject).value || owner.id,\n      ),\n      recipients,\n      report_format:\n        contentType === 'dashboard'\n          ? DEFAULT_NOTIFICATION_FORMAT\n          : reportFormat || DEFAULT_NOTIFICATION_FORMAT,\n    };\n\n    if (data.recipients && !data.recipients.length) {\n      delete data.recipients;\n    }\n\n    data.context_markdown = 'string';\n\n    if (isEditMode) {\n      // Edit\n      if (currentAlert?.id) {\n        const update_id = currentAlert.id;\n\n        delete data.id;\n        delete data.created_by;\n        delete data.last_eval_dttm;\n        delete data.last_state;\n        delete data.last_value;\n        delete data.last_value_row_json;\n\n        updateResource(update_id, data).then(response => {\n          if (!response) {\n            return;\n          }\n\n          addSuccessToast(t('%s updated', data.type));\n\n          if (onAdd) {\n            onAdd();\n          }\n\n          hide();\n        });\n      }\n    } else if (currentAlert) {\n      // Create\n      createResource(data).then(response => {\n        if (!response) {\n          return;\n        }\n\n        addSuccessToast(t('%s updated', data.type));\n\n        if (onAdd) {\n          onAdd(response);\n        }\n\n        hide();\n      });\n    }\n  };\n\n  // Fetch data to populate form dropdowns\n  const loadOwnerOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/created_by?q=${query}`,\n        }).then(response => ({\n          data: response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          ),\n          totalCount: response.json.count,\n        }));\n      },\n    [],\n  );\n\n  const getSourceData = useCallback(\n    (db?: MetaObject) => {\n      const database = db || currentAlert?.database;\n\n      if (!database || database.label) {\n        return null;\n      }\n\n      let result;\n\n      // Cycle through source options to find the selected option\n      sourceOptions.forEach(source => {\n        if (source.value === database.value || source.value === database.id) {\n          result = source;\n        }\n      });\n\n      return result;\n    },\n    [currentAlert?.database, sourceOptions],\n  );\n\n  // Updating alert/report state\n  const updateAlertState = (name: string, value: any) => {\n    setCurrentAlert(currentAlertData => ({\n      ...currentAlertData,\n      [name]: value,\n    }));\n  };\n\n  const loadSourceOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/database?q=${query}`,\n        }).then(response => {\n          const list = response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          );\n          setSourceOptions(list);\n          return { data: list, totalCount: response.json.count };\n        });\n      },\n    [],\n  );\n\n  const databaseLabel = currentAlert?.database && !currentAlert.database.label;\n  useEffect(() => {\n    // Find source if current alert has one set\n    if (databaseLabel) {\n      updateAlertState('database', getSourceData());\n    }\n  }, [databaseLabel, getSourceData]);\n\n  const loadDashboardOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode_uri({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/dashboard?q=${query}`,\n        }).then(response => {\n          const list = response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          );\n          setDashboardOptions(list);\n          return { data: list, totalCount: response.json.count };\n        });\n      },\n    [],\n  );\n\n  const getDashboardData = (db?: MetaObject) => {\n    const dashboard = db || currentAlert?.dashboard;\n\n    if (!dashboard || dashboard.label) {\n      return null;\n    }\n\n    let result;\n\n    // Cycle through dashboard options to find the selected option\n    dashboardOptions.forEach(dash => {\n      if (dash.value === dashboard.value || dash.value === dashboard.id) {\n        result = dash;\n      }\n    });\n\n    return result;\n  };\n\n  const getChartData = useCallback(\n    (chartData?: MetaObject) => {\n      const chart = chartData || currentAlert?.chart;\n\n      if (!chart || chart.label) {\n        return null;\n      }\n\n      let result;\n\n      // Cycle through chart options to find the selected option\n      chartOptions.forEach(slice => {\n        if (slice.value === chart.value || slice.value === chart.id) {\n          result = slice;\n        }\n      });\n\n      return result;\n    },\n    [chartOptions, currentAlert?.chart],\n  );\n\n  const noChartLabel = currentAlert?.chart && !currentAlert?.chart.label;\n  useEffect(() => {\n    // Find source if current alert has one set\n    if (noChartLabel) {\n      updateAlertState('chart', getChartData());\n    }\n  }, [getChartData, noChartLabel]);\n\n  const loadChartOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode_uri({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/chart?q=${query}`,\n        }).then(response => {\n          const list = response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          );\n\n          setChartOptions(list);\n          return { data: list, totalCount: response.json.count };\n        });\n      },\n    [],\n  );\n\n  const getChartVisualizationType = (chart: SelectValue) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/chart/${chart.value}`,\n    }).then(response => setChartVizType(response.json.result.viz_type));\n\n  // Handle input/textarea updates\n  const onTextChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    const { target } = event;\n\n    updateAlertState(target.name, target.value);\n  };\n\n  const onTimeoutVerifyChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    const { target } = event;\n    const value = +target.value;\n\n    // Need to make sure grace period is not lower than TIMEOUT_MIN\n    if (value === 0) {\n      updateAlertState(target.name, null);\n    } else {\n      updateAlertState(\n        target.name,\n        value ? Math.max(value, TIMEOUT_MIN) : value,\n      );\n    }\n  };\n\n  const onSQLChange = (value: string) => {\n    updateAlertState('sql', value || '');\n  };\n\n  const onOwnersChange = (value: Array<SelectValue>) => {\n    updateAlertState('owners', value || []);\n  };\n\n  const onSourceChange = (value: Array<SelectValue>) => {\n    updateAlertState('database', value || []);\n  };\n\n  const onDashboardChange = (dashboard: SelectValue) => {\n    updateAlertState('dashboard', dashboard || undefined);\n    updateAlertState('chart', null);\n  };\n\n  const onChartChange = (chart: SelectValue) => {\n    getChartVisualizationType(chart);\n    updateAlertState('chart', chart || undefined);\n    updateAlertState('dashboard', null);\n  };\n\n  const onActiveSwitch = (checked: boolean) => {\n    updateAlertState('active', checked);\n  };\n\n  const onConditionChange = (op: Operator) => {\n    setConditionNotNull(op === 'not null');\n\n    const config = {\n      op,\n      threshold: currentAlert\n        ? currentAlert.validator_config_json?.threshold\n        : undefined,\n    };\n\n    updateAlertState('validator_config_json', config);\n  };\n\n  const onThresholdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    const config = {\n      op: currentAlert ? currentAlert.validator_config_json?.op : undefined,\n      threshold: target.value,\n    };\n\n    updateAlertState('validator_config_json', config);\n  };\n\n  const onLogRetentionChange = (retention: number) => {\n    updateAlertState('log_retention', retention);\n  };\n\n  const onTimezoneChange = (timezone: string) => {\n    updateAlertState('timezone', timezone);\n  };\n\n  const onContentTypeChange = (event: any) => {\n    const { target } = event;\n    // When switch content type, reset force_screenshot to false\n    setForceScreenshot(false);\n    // Gives time to close the select before changing the type\n    setTimeout(() => setContentType(target.value), 200);\n  };\n\n  const onFormatChange = (event: any) => {\n    const { target } = event;\n\n    setReportFormat(target.value);\n  };\n\n  const onForceScreenshotChange = (event: any) => {\n    setForceScreenshot(event.target.checked);\n  };\n\n  // Make sure notification settings has the required info\n  const checkNotificationSettings = () => {\n    if (!notificationSettings.length) {\n      return false;\n    }\n\n    let hasInfo = false;\n\n    notificationSettings.forEach(setting => {\n      if (!!setting.method && setting.recipients?.length) {\n        hasInfo = true;\n      }\n    });\n\n    return hasInfo;\n  };\n\n  const validate = () => {\n    if (\n      currentAlert?.name?.length &&\n      currentAlert?.owners?.length &&\n      currentAlert?.crontab?.length &&\n      currentAlert?.working_timeout !== undefined &&\n      ((contentType === 'dashboard' && !!currentAlert?.dashboard) ||\n        (contentType === 'chart' && !!currentAlert?.chart)) &&\n      checkNotificationSettings()\n    ) {\n      if (isReport) {\n        setDisableSave(false);\n      } else if (\n        !!currentAlert.database &&\n        currentAlert.sql?.length &&\n        (conditionNotNull || !!currentAlert.validator_config_json?.op) &&\n        (conditionNotNull ||\n          currentAlert.validator_config_json?.threshold !== undefined)\n      ) {\n        setDisableSave(false);\n      } else {\n        setDisableSave(true);\n      }\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentAlert?.id || alert?.id !== currentAlert.id || (isHidden && show))\n    ) {\n      if (alert?.id !== null && !loading && !fetchError) {\n        const id = alert.id || 0;\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentAlert || currentAlert.id || (isHidden && show))\n    ) {\n      setCurrentAlert({ ...DEFAULT_ALERT });\n      setNotificationSettings([]);\n      setNotificationAddState('active');\n    }\n  }, [alert]);\n\n  useEffect(() => {\n    if (resource) {\n      // Add notification settings\n      const settings = (resource.recipients || []).map(setting => {\n        const config =\n          typeof setting.recipient_config_json === 'string'\n            ? JSON.parse(setting.recipient_config_json)\n            : {};\n        return {\n          method: setting.type,\n          // @ts-ignore: Type not assignable\n          recipients: config.target || setting.recipient_config_json,\n          options: allowedNotificationMethods,\n        };\n      });\n\n      setNotificationSettings(settings);\n      setNotificationAddState(\n        settings.length === allowedNotificationMethods.length\n          ? 'hidden'\n          : 'active',\n      );\n      setContentType(resource.chart ? 'chart' : 'dashboard');\n      setReportFormat(\n        resource.chart\n          ? resource.report_format || DEFAULT_NOTIFICATION_FORMAT\n          : DEFAULT_NOTIFICATION_FORMAT,\n      );\n      const validatorConfig =\n        typeof resource.validator_config_json === 'string'\n          ? JSON.parse(resource.validator_config_json)\n          : resource.validator_config_json;\n\n      setConditionNotNull(resource.validator_type === 'not null');\n\n      if (resource.chart) {\n        setChartVizType((resource.chart as ChartObject).viz_type);\n      }\n      setForceScreenshot(resource.force_screenshot);\n\n      setCurrentAlert({\n        ...resource,\n        chart: resource.chart\n          ? getChartData(resource.chart) || {\n              value: (resource.chart as ChartObject).id,\n              label: (resource.chart as ChartObject).slice_name,\n            }\n          : undefined,\n        dashboard: resource.dashboard\n          ? getDashboardData(resource.dashboard) || {\n              value: (resource.dashboard as DashboardObject).id,\n              label: (resource.dashboard as DashboardObject).dashboard_title,\n            }\n          : undefined,\n        database: resource.database\n          ? getSourceData(resource.database) || {\n              value: (resource.database as DatabaseObject).id,\n              label: (resource.database as DatabaseObject).database_name,\n            }\n          : undefined,\n        owners: (alert?.owners || []).map(owner => ({\n          value: (owner as MetaObject).value || owner.id,\n          label:\n            (owner as MetaObject).label ||\n            `${(owner as Owner).first_name} ${(owner as Owner).last_name}`,\n        })),\n        // @ts-ignore: Type not assignable\n        validator_config_json:\n          resource.validator_type === 'not null'\n            ? {\n                op: 'not null',\n              }\n            : validatorConfig,\n      });\n    }\n  }, [resource]);\n\n  // Validation\n  const currentAlertSafe = currentAlert || {};\n  useEffect(() => {\n    validate();\n  }, [\n    currentAlertSafe.name,\n    currentAlertSafe.owners,\n    currentAlertSafe.database,\n    currentAlertSafe.sql,\n    currentAlertSafe.validator_config_json,\n    currentAlertSafe.crontab,\n    currentAlertSafe.working_timeout,\n    currentAlertSafe.dashboard,\n    currentAlertSafe.chart,\n    contentType,\n    notificationSettings,\n    conditionNotNull,\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <StyledModal\n      className=\"no-content-padding\"\n      responsive\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={\n        isEditMode ? TRANSLATIONS.SAVE_TEXT : TRANSLATIONS.ADD_TEXT\n      }\n      show={show}\n      width=\"100%\"\n      maxWidth=\"1450px\"\n      title={\n        <h4 data-test=\"alert-report-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode && isReport\n            ? TRANSLATIONS.EDIT_REPORT_TEXT\n            : isEditMode\n            ? TRANSLATIONS.EDIT_ALERT_TEXT\n            : isReport\n            ? TRANSLATIONS.ADD_REPORT_TEXT\n            : TRANSLATIONS.ADD_ALERT_TEXT}\n        </h4>\n      }\n    >\n      <StyledSectionContainer>\n        <div className=\"header-section\">\n          <StyledInputContainer>\n            <div className=\"control-label\">\n              {isReport\n                ? TRANSLATIONS.REPORT_NAME_TEXT\n                : TRANSLATIONS.ALERT_NAME_TEXT}\n              <span className=\"required\">*</span>\n            </div>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={currentAlert ? currentAlert.name : ''}\n                placeholder={\n                  isReport\n                    ? TRANSLATIONS.REPORT_NAME_TEXT\n                    : TRANSLATIONS.ALERT_NAME_TEXT\n                }\n                onChange={onTextChange}\n                css={inputSpacer}\n              />\n            </div>\n          </StyledInputContainer>\n          <StyledInputContainer>\n            <div className=\"control-label\">\n              {TRANSLATIONS.OWNERS_TEXT}\n              <span className=\"required\">*</span>\n            </div>\n            <div data-test=\"owners-select\" className=\"input-container\">\n              <AsyncSelect\n                ariaLabel={TRANSLATIONS.OWNERS_TEXT}\n                allowClear\n                name=\"owners\"\n                mode=\"multiple\"\n                value={\n                  (currentAlert?.owners as {\n                    label: string;\n                    value: number;\n                  }[]) || []\n                }\n                options={loadOwnerOptions}\n                onChange={onOwnersChange}\n                css={inputSpacer}\n              />\n            </div>\n          </StyledInputContainer>\n          <StyledInputContainer>\n            <div className=\"control-label\">{TRANSLATIONS.DESCRIPTION_TEXT}</div>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                name=\"description\"\n                value={currentAlert ? currentAlert.description || '' : ''}\n                placeholder={TRANSLATIONS.DESCRIPTION_TEXT}\n                onChange={onTextChange}\n                css={inputSpacer}\n              />\n            </div>\n          </StyledInputContainer>\n          <StyledSwitchContainer>\n            <Switch\n              onChange={onActiveSwitch}\n              checked={currentAlert ? currentAlert.active : true}\n            />\n            <div className=\"switch-label\">{TRANSLATIONS.ACTIVE_TEXT}</div>\n          </StyledSwitchContainer>\n        </div>\n        <div className=\"column-section\">\n          {!isReport && (\n            <div className=\"column condition\">\n              <StyledSectionTitle>\n                <h4>{TRANSLATIONS.ALERT_CONDITION_TEXT}</h4>\n              </StyledSectionTitle>\n              <StyledInputContainer>\n                <div className=\"control-label\">\n                  {TRANSLATIONS.DATABASE_TEXT}\n                  <span className=\"required\">*</span>\n                </div>\n                <div className=\"input-container\">\n                  <AsyncSelect\n                    ariaLabel={TRANSLATIONS.DATABASE_TEXT}\n                    name=\"source\"\n                    value={\n                      currentAlert?.database?.label &&\n                      currentAlert?.database?.value\n                        ? {\n                            value: currentAlert.database.value,\n                            label: currentAlert.database.label,\n                          }\n                        : undefined\n                    }\n                    options={loadSourceOptions}\n                    onChange={onSourceChange}\n                  />\n                </div>\n              </StyledInputContainer>\n              <StyledInputContainer>\n                <div className=\"control-label\">\n                  {TRANSLATIONS.SQL_QUERY_TEXT}\n                  <span className=\"required\">*</span>\n                </div>\n                <TextAreaControl\n                  name=\"sql\"\n                  language=\"sql\"\n                  offerEditInModal={false}\n                  minLines={15}\n                  maxLines={15}\n                  onChange={onSQLChange}\n                  readOnly={false}\n                  initialValue={resource?.sql}\n                  key={currentAlert?.id}\n                />\n              </StyledInputContainer>\n              <div className=\"inline-container wrap\">\n                <StyledInputContainer>\n                  <div className=\"control-label\" css={inputSpacer}>\n                    {TRANSLATIONS.TRIGGER_ALERT_IF_TEXT}\n                    <span className=\"required\">*</span>\n                  </div>\n                  <div className=\"input-container\">\n                    <Select\n                      ariaLabel={TRANSLATIONS.CONDITION_TEXT}\n                      onChange={onConditionChange}\n                      placeholder=\"Condition\"\n                      value={\n                        currentAlert?.validator_config_json?.op || undefined\n                      }\n                      options={CONDITIONS}\n                      css={inputSpacer}\n                    />\n                  </div>\n                </StyledInputContainer>\n                <StyledInputContainer>\n                  <div className=\"control-label\">\n                    {TRANSLATIONS.VALUE_TEXT}{' '}\n                    <InfoTooltipWithTrigger\n                      tooltip={TRANSLATIONS.VALUE_TOOLTIP}\n                    />\n                    <span className=\"required\">*</span>\n                  </div>\n                  <div className=\"input-container\">\n                    <input\n                      type=\"number\"\n                      name=\"threshold\"\n                      disabled={conditionNotNull}\n                      value={\n                        currentAlert?.validator_config_json?.threshold !==\n                        undefined\n                          ? currentAlert.validator_config_json.threshold\n                          : ''\n                      }\n                      placeholder={TRANSLATIONS.VALUE_TEXT}\n                      onChange={onThresholdChange}\n                    />\n                  </div>\n                </StyledInputContainer>\n              </div>\n            </div>\n          )}\n          <div className=\"column schedule\">\n            <StyledSectionTitle>\n              <h4>\n                {isReport\n                  ? TRANSLATIONS.REPORT_SCHEDULE_TEXT\n                  : TRANSLATIONS.ALERT_CONDITION_SCHEDULE_TEXT}\n              </h4>\n              <span className=\"required\">*</span>\n            </StyledSectionTitle>\n            <AlertReportCronScheduler\n              value={currentAlert?.crontab || DEFAULT_CRON_VALUE}\n              onChange={newVal => updateAlertState('crontab', newVal)}\n            />\n            <div className=\"control-label\">{TRANSLATIONS.TIMEZONE_TEXT}</div>\n            <div\n              className=\"input-container\"\n              css={(theme: SupersetTheme) => timezoneHeaderStyle(theme)}\n            >\n              <TimezoneSelector\n                onTimezoneChange={onTimezoneChange}\n                timezone={currentAlert?.timezone}\n                minWidth=\"100%\"\n              />\n            </div>\n            <StyledSectionTitle>\n              <h4>{TRANSLATIONS.SCHEDULE_SETTINGS_TEXT}</h4>\n            </StyledSectionTitle>\n            <StyledInputContainer>\n              <div className=\"control-label\">\n                {TRANSLATIONS.LOG_RETENTION_TEXT}\n                <span className=\"required\">*</span>\n              </div>\n              <div className=\"input-container\">\n                <Select\n                  ariaLabel={TRANSLATIONS.LOG_RETENTION_TEXT}\n                  placeholder={TRANSLATIONS.LOG_RETENTION_TEXT}\n                  onChange={onLogRetentionChange}\n                  value={\n                    typeof currentAlert?.log_retention === 'number'\n                      ? currentAlert?.log_retention\n                      : DEFAULT_RETENTION\n                  }\n                  options={RETENTION_OPTIONS}\n                  sortComparator={propertyComparator('value')}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer>\n              <div className=\"control-label\">\n                {TRANSLATIONS.WORKING_TIMEOUT_TEXT}\n                <span className=\"required\">*</span>\n              </div>\n              <div className=\"input-container\">\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  name=\"working_timeout\"\n                  value={currentAlert?.working_timeout || ''}\n                  placeholder={TRANSLATIONS.TIME_IN_SECONDS_TEXT}\n                  onChange={onTimeoutVerifyChange}\n                />\n                <span className=\"input-label\">{TRANSLATIONS.SECONDS_TEXT}</span>\n              </div>\n            </StyledInputContainer>\n            {!isReport && (\n              <StyledInputContainer>\n                <div className=\"control-label\">\n                  {TRANSLATIONS.GRACE_PERIOD_TEXT}\n                </div>\n                <div className=\"input-container\">\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    name=\"grace_period\"\n                    value={currentAlert?.grace_period || ''}\n                    placeholder={TRANSLATIONS.TIME_IN_SECONDS_TEXT}\n                    onChange={onTimeoutVerifyChange}\n                  />\n                  <span className=\"input-label\">\n                    {TRANSLATIONS.SECONDS_TEXT}\n                  </span>\n                </div>\n              </StyledInputContainer>\n            )}\n          </div>\n          <div className=\"column message\">\n            <StyledSectionTitle>\n              <h4>{TRANSLATIONS.MESSAGE_CONTENT_TEXT}</h4>\n              <span className=\"required\">*</span>\n            </StyledSectionTitle>\n            <Radio.Group onChange={onContentTypeChange} value={contentType}>\n              <StyledRadio value=\"dashboard\">\n                {TRANSLATIONS.DASHBOARD_TEXT}\n              </StyledRadio>\n              <StyledRadio value=\"chart\">{TRANSLATIONS.CHART_TEXT}</StyledRadio>\n            </Radio.Group>\n            {contentType === 'chart' ? (\n              <AsyncSelect\n                ariaLabel={TRANSLATIONS.CHART_TEXT}\n                name=\"chart\"\n                value={\n                  currentAlert?.chart?.label && currentAlert?.chart?.value\n                    ? {\n                        value: currentAlert.chart.value,\n                        label: currentAlert.chart.label,\n                      }\n                    : undefined\n                }\n                options={loadChartOptions}\n                onChange={onChartChange}\n              />\n            ) : (\n              <AsyncSelect\n                ariaLabel={TRANSLATIONS.DASHBOARD_TEXT}\n                name=\"dashboard\"\n                value={\n                  currentAlert?.dashboard?.label &&\n                  currentAlert?.dashboard?.value\n                    ? {\n                        value: currentAlert.dashboard.value,\n                        label: currentAlert.dashboard.label,\n                      }\n                    : undefined\n                }\n                options={loadDashboardOptions}\n                onChange={onDashboardChange}\n              />\n            )}\n            {formatOptionEnabled && (\n              <>\n                <div className=\"inline-container\">\n                  <StyledRadioGroup\n                    onChange={onFormatChange}\n                    value={reportFormat}\n                  >\n                    <StyledRadio value=\"PNG\">\n                      {TRANSLATIONS.SEND_AS_PNG_TEXT}\n                    </StyledRadio>\n                    <StyledRadio value=\"CSV\">\n                      {TRANSLATIONS.SEND_AS_CSV_TEXT}\n                    </StyledRadio>\n                    {TEXT_BASED_VISUALIZATION_TYPES.includes(chartVizType) && (\n                      <StyledRadio value=\"TEXT\">\n                        {TRANSLATIONS.SEND_AS_TEXT}\n                      </StyledRadio>\n                    )}\n                  </StyledRadioGroup>\n                </div>\n              </>\n            )}\n            {(isReport || contentType === 'dashboard') && (\n              <div className=\"inline-container\">\n                <StyledCheckbox\n                  data-test=\"bypass-cache\"\n                  className=\"checkbox\"\n                  checked={forceScreenshot}\n                  onChange={onForceScreenshotChange}\n                >\n                  {TRANSLATIONS.IGNORE_CACHE_TEXT}\n                </StyledCheckbox>\n              </div>\n            )}\n            <StyledSectionTitle>\n              <h4>{TRANSLATIONS.NOTIFICATION_METHOD_TEXT}</h4>\n              <span className=\"required\">*</span>\n            </StyledSectionTitle>\n            {notificationSettings.map((notificationSetting, i) => (\n              <StyledNotificationMethodWrapper>\n                <NotificationMethod\n                  setting={notificationSetting}\n                  index={i}\n                  key={`NotificationMethod-${i}`}\n                  onUpdate={updateNotificationSetting}\n                  onRemove={removeNotificationSetting}\n                />\n              </StyledNotificationMethodWrapper>\n            ))}\n            <NotificationMethodAdd\n              data-test=\"notification-add\"\n              status={notificationAddState}\n              onClick={onNotificationAdd}\n            />\n          </div>\n        </div>\n      </StyledSectionContainer>\n    </StyledModal>\n  );\n};\n\nexport default withToasts(AlertReportModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  t,\n  SupersetClient,\n  makeApi,\n  styled,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport moment from 'moment';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport FacePile from 'src/components/FacePile';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ListView, {\n  FilterOperator,\n  Filters,\n  ListViewProps,\n} from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/views/components/SubMenu';\nimport { Switch } from 'src/components/Switch';\nimport { DATETIME_WITH_TIME_ZONE } from 'src/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AlertStatusIcon from 'src/views/CRUD/alert/components/AlertStatusIcon';\nimport RecipientIcon from 'src/views/CRUD/alert/components/RecipientIcon';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport LastUpdated from 'src/components/LastUpdated';\n\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated } from 'src/views/CRUD/utils';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport Owner from 'src/types/Owner';\nimport AlertReportModal from './AlertReportModal';\nimport { AlertObject, AlertState } from './types';\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst PAGE_SIZE = 25;\n\nconst AlertStateLabel: Record<AlertState, string> = {\n  [AlertState.Success]: t('Success'),\n  [AlertState.Working]: t('Working'),\n  [AlertState.Error]: t('Error'),\n  [AlertState.Noop]: t('Not triggered'),\n  [AlertState.Grace]: t('On Grace'),\n};\n\ninterface AlertListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\nconst deleteAlerts = makeApi<number[], { message: string }>({\n  requestType: 'rison',\n  method: 'DELETE',\n  endpoint: '/api/v1/report/',\n});\n\nconst RefreshContainer = styled.div`\n  width: 100%;\n  padding: 0 ${({ theme }) => theme.gridUnit * 4}px\n    ${({ theme }) => theme.gridUnit * 3}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n`;\n\nconst StyledHeaderWithIcon = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  > *:first-child {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst HeaderExtension = extensionsRegistry.get('alertsreports.header.icon');\n\nfunction AlertList({\n  addDangerToast,\n  isReportEnabled = false,\n  user,\n  addSuccessToast,\n}: AlertListProps) {\n  const title = isReportEnabled ? t('report') : t('alert');\n  const titlePlural = isReportEnabled ? t('reports') : t('alerts');\n  const pathName = isReportEnabled ? 'Reports' : 'Alerts';\n  const initialFilters = useMemo(\n    () => [\n      {\n        id: 'type',\n        operator: FilterOperator.equals,\n        value: isReportEnabled ? 'Report' : 'Alert',\n      },\n    ],\n    [isReportEnabled],\n  );\n  const {\n    state: {\n      loading,\n      resourceCount: alertsCount,\n      resourceCollection: alerts,\n      bulkSelectEnabled,\n      lastFetched,\n    },\n    hasPerm,\n    fetchData,\n    setResourceCollection,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n    true,\n    undefined,\n    initialFilters,\n  );\n\n  const { updateResource } = useSingleViewResource<Partial<AlertObject>>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  const [alertModalOpen, setAlertModalOpen] = useState<boolean>(false);\n  const [currentAlert, setCurrentAlert] = useState<Partial<AlertObject> | null>(\n    null,\n  );\n  const [currentAlertDeleting, setCurrentAlertDeleting] =\n    useState<AlertObject | null>(null);\n\n  // Actions\n  function handleAlertEdit(alert: AlertObject | null) {\n    setCurrentAlert(alert);\n    setAlertModalOpen(true);\n  }\n\n  const generateKey = () => `${new Date().getTime()}`;\n\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n\n  useEffect(() => {\n    if (bulkSelectEnabled && canDelete) {\n      toggleBulkSelect();\n    }\n  }, [isReportEnabled]);\n\n  const handleAlertDelete = ({ id, name }: AlertObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/report/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setCurrentAlertDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkAlertDelete = async (alertsToDelete: AlertObject[]) => {\n    try {\n      const { message } = await deleteAlerts(\n        alertsToDelete.map(({ id }) => id),\n      );\n      refreshData();\n      addSuccessToast(message);\n    } catch (e) {\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t(\n            'There was an issue deleting the selected %s: %s',\n            titlePlural,\n            errMsg,\n          ),\n        ),\n      )(e);\n    }\n  };\n\n  const initialSort = [{ id: 'name', desc: true }];\n\n  const toggleActive = useCallback(\n    (data: AlertObject, checked: boolean) => {\n      if (data?.id) {\n        const update_id = data.id;\n        const original = [...alerts];\n\n        setResourceCollection(\n          original.map(alert => {\n            if (alert?.id === data.id) {\n              return {\n                ...alert,\n                active: checked,\n              };\n            }\n\n            return alert;\n          }),\n        );\n\n        updateResource(update_id, { active: checked }, false, false)\n          .then()\n          .catch(() => setResourceCollection(original));\n      }\n    },\n    [alerts, setResourceCollection, updateResource],\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { last_state: lastState },\n          },\n        }: any) => (\n          <AlertStatusIcon\n            state={lastState}\n            isReportEnabled={isReportEnabled}\n          />\n        ),\n        accessor: 'last_state',\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_eval_dttm: lastEvalDttm },\n          },\n        }: any) =>\n          lastEvalDttm\n            ? moment.utc(lastEvalDttm).local().format(DATETIME_WITH_TIME_ZONE)\n            : '',\n        accessor: 'last_eval_dttm',\n        Header: t('Last run'),\n        size: 'lg',\n      },\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        size: 'xl',\n      },\n      {\n        Header: t('Schedule'),\n        accessor: 'crontab_humanized',\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { crontab_humanized = '', timezone },\n          },\n        }: any) => (\n          <Tooltip\n            title={`${crontab_humanized} (${timezone})`}\n            placement=\"topLeft\"\n          >\n            <span>{`${crontab_humanized} (${timezone})`}</span>\n          </Tooltip>\n        ),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { recipients },\n          },\n        }: any) =>\n          recipients.map((r: any) => (\n            <RecipientIcon key={r.id} type={r.type} />\n          )),\n        accessor: 'recipients',\n        Header: t('Notification method'),\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_by },\n          },\n        }: any) =>\n          created_by ? `${created_by.first_name} ${created_by.last_name}` : '',\n        Header: t('Created by'),\n        id: 'created_by',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        id: 'owners',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => <span className=\"no-wrap\">{changedOn}</span>,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          return (\n            <Switch\n              disabled={!allowEdit}\n              data-test=\"toggle-active\"\n              checked={original.active}\n              onClick={(checked: boolean) => toggleActive(original, checked)}\n              size=\"small\"\n            />\n          );\n        },\n        Header: t('Active'),\n        accessor: 'active',\n        id: 'active',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const history = useHistory();\n          const handleEdit = () => handleAlertEdit(original);\n          const handleDelete = () => setCurrentAlertDeleting(original);\n          const handleGotoExecutionLog = () =>\n            history.push(`/${original.type.toLowerCase()}/${original.id}/log`);\n\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'execution-log-action',\n                  tooltip: t('Execution log'),\n                  placement: 'bottom',\n                  icon: 'Note',\n                  onClick: handleGotoExecutionLog,\n                }\n              : null,\n            canEdit\n              ? {\n                  label: allowEdit ? 'edit-action' : 'preview-action',\n                  tooltip: allowEdit ? t('Edit') : t('View'),\n                  placement: 'bottom',\n                  icon: allowEdit ? 'Edit' : 'Binoculars',\n                  onClick: handleEdit,\n                }\n              : null,\n            allowEdit && canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => item !== null);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canEdit, isReportEnabled, toggleActive],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {title}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAlertEdit(null);\n      },\n    });\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select-toggle',\n    });\n  }\n\n  const emptyState = {\n    title: t('No %s yet', titlePlural),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAlertEdit(null),\n    buttonText: canCreate ? (\n      <>\n        <i className=\"fa fa-plus\" /> {title}{' '}\n      </>\n    ) : null,\n  };\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.relationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'report',\n          'owners',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching owners values: %s', errMsg),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'report',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching created by values: %s', errMsg),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Status'),\n        key: 'status',\n        id: 'last_state',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'Any',\n        selects: [\n          {\n            label: AlertStateLabel[AlertState.Success],\n            value: AlertState.Success,\n          },\n          {\n            label: AlertStateLabel[AlertState.Working],\n            value: AlertState.Working,\n          },\n          { label: AlertStateLabel[AlertState.Error], value: AlertState.Error },\n          { label: AlertStateLabel[AlertState.Noop], value: AlertState.Noop },\n          { label: AlertStateLabel[AlertState.Grace], value: AlertState.Grace },\n        ],\n      },\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  const header = HeaderExtension ? (\n    <StyledHeaderWithIcon>\n      <div>{t('Alerts & reports')}</div>\n      <HeaderExtension />\n    </StyledHeaderWithIcon>\n  ) : (\n    t('Alerts & reports')\n  );\n\n  return (\n    <>\n      <SubMenu\n        activeChild={pathName}\n        name={header}\n        tabs={[\n          {\n            name: 'Alerts',\n            label: t('Alerts'),\n            url: '/alert/list/',\n            usesRouter: true,\n            'data-test': 'alert-list',\n          },\n          {\n            name: 'Reports',\n            label: t('Reports'),\n            url: '/report/list/',\n            usesRouter: true,\n            'data-test': 'report-list',\n          },\n        ]}\n        buttons={subMenuButtons}\n      >\n        <RefreshContainer>\n          <LastUpdated updatedAt={lastFetched} update={() => refreshData()} />\n        </RefreshContainer>\n      </SubMenu>\n      <AlertReportModal\n        alert={currentAlert}\n        addDangerToast={addDangerToast}\n        layer={currentAlert}\n        onHide={() => {\n          setAlertModalOpen(false);\n          setCurrentAlert(null);\n          refreshData();\n        }}\n        show={alertModalOpen}\n        isReport={isReportEnabled}\n        key={currentAlert?.id || generateKey()}\n      />\n      {currentAlertDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete %s.',\n            currentAlertDeleting.name,\n          )}\n          onConfirm={() => {\n            if (currentAlertDeleting) {\n              handleAlertDelete(currentAlertDeleting);\n            }\n          }}\n          onHide={() => setCurrentAlertDeleting(null)}\n          open\n          title={t('Delete %s?', title)}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected %s?',\n          titlePlural,\n        )}\n        onConfirm={handleBulkAlertDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n          return (\n            <ListView<AlertObject>\n              className=\"alerts-list-view\"\n              columns={columns}\n              count={alertsCount}\n              data={alerts}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AlertList);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, SupersetTheme, useTheme } from '@superset-ui/core';\nimport React from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { AlertState } from '../types';\n\nfunction getStatusColor(\n  status: string,\n  isReportEnabled: boolean,\n  theme: SupersetTheme,\n) {\n  switch (status) {\n    case AlertState.Working:\n      return theme.colors.primary.base;\n    case AlertState.Error:\n      return theme.colors.error.base;\n    case AlertState.Success:\n      return isReportEnabled\n        ? theme.colors.success.base\n        : theme.colors.alert.base;\n    case AlertState.Noop:\n      return theme.colors.success.base;\n    case AlertState.Grace:\n      return theme.colors.alert.base;\n    default:\n      return theme.colors.grayscale.base;\n  }\n}\n\nexport default function AlertStatusIcon({\n  state,\n  isReportEnabled = false,\n}: {\n  state: string;\n  isReportEnabled: boolean;\n}) {\n  const theme = useTheme();\n  const lastStateConfig = {\n    icon: Icons.Check,\n    label: '',\n    status: '',\n  };\n  switch (state) {\n    case AlertState.Success:\n      lastStateConfig.icon = isReportEnabled\n        ? Icons.Check\n        : Icons.AlertSolidSmall;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sent')\n        : t('Alert triggered, notification sent');\n      lastStateConfig.status = AlertState.Success;\n      break;\n    case AlertState.Working:\n      lastStateConfig.icon = Icons.Running;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sending')\n        : t('Alert running');\n      lastStateConfig.status = AlertState.Working;\n      break;\n    case AlertState.Error:\n      lastStateConfig.icon = Icons.XSmall;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report failed')\n        : t('Alert failed');\n      lastStateConfig.status = AlertState.Error;\n      break;\n    case AlertState.Noop:\n      lastStateConfig.icon = Icons.Check;\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.Noop;\n      break;\n    case AlertState.Grace:\n      lastStateConfig.icon = Icons.AlertSolidSmall;\n      lastStateConfig.label = t('Alert Triggered, In Grace Period');\n      lastStateConfig.status = AlertState.Grace;\n      break;\n    default:\n      lastStateConfig.icon = Icons.Check;\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.Noop;\n  }\n  const Icon = lastStateConfig.icon;\n  return (\n    <Tooltip title={lastStateConfig.label} placement=\"bottomLeft\">\n      <Icon\n        iconColor={getStatusColor(\n          lastStateConfig.status,\n          isReportEnabled,\n          theme,\n        )}\n      />\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Owner from 'src/types/Owner';\nimport { NOTIFICATION_FORMATS } from 'src/reports/types';\n\ntype user = {\n  id: number;\n  first_name: string;\n  last_name: string;\n};\nexport type ChartObject = {\n  id: number;\n  slice_name: string;\n  viz_type: string;\n};\n\nexport type DashboardObject = {\n  dashboard_title: string;\n  id: number;\n};\n\nexport type DatabaseObject = {\n  database_name: string;\n  id: number;\n};\n\nexport type NotificationMethodOption = 'Email' | 'Slack';\n\nexport type Recipient = {\n  recipient_config_json: {\n    target: string;\n  };\n  type: NotificationMethodOption;\n};\n\nexport type MetaObject = {\n  id?: number;\n  label?: string;\n  value?: number | string;\n};\n\nexport type Operator = '<' | '>' | '<=' | '>=' | '==' | '!=' | 'not null';\n\nexport type AlertObject = {\n  active?: boolean;\n  creation_method?: string;\n  chart?: MetaObject;\n  changed_by?: user;\n  changed_on_delta_humanized?: string;\n  chart_id: number;\n  created_by?: user;\n  created_on?: string;\n  crontab?: string;\n  dashboard?: MetaObject;\n  dashboard_id?: number;\n  database?: MetaObject;\n  description?: string;\n  force_screenshot: boolean;\n  grace_period?: number;\n  id: number;\n  last_eval_dttm?: number;\n  last_state?: 'Success' | 'Working' | 'Error' | 'Not triggered' | 'On Grace';\n  log_retention?: number;\n  name?: string;\n  owners?: Array<Owner | MetaObject>;\n  sql?: string;\n  timezone?: string;\n  recipients?: Array<Recipient>;\n  report_format?: NOTIFICATION_FORMATS;\n  type?: string;\n  validator_config_json?: {\n    op?: Operator;\n    threshold?: number;\n  };\n  validator_type?: string;\n  working_timeout?: number;\n  error?: string;\n};\n\nexport type LogObject = {\n  end_dttm: string;\n  error_message: string;\n  id: number;\n  scheduled_dttm: string;\n  start_dttm: string;\n  state: string;\n  value: string;\n  uuid: string;\n};\n\nexport enum AlertState {\n  Success = 'Success',\n  Working = 'Working',\n  Error = 'Error',\n  Noop = 'Not triggered',\n  Grace = 'On Grace',\n}\n\nexport enum RecipientIconName {\n  Email = 'Email',\n  Slack = 'Slack',\n}\n"],"names":["LOCALE","everyText","t","emptyMonths","emptyMonthDays","emptyMonthDaysShort","emptyWeekDays","emptyWeekDaysShort","emptyHours","emptyMinutes","emptyMinutesForHourPeriod","yearOption","monthOption","weekOption","dayOption","hourOption","minuteOption","rebootOption","prefixPeriod","prefixMonths","prefixMonthDays","prefixWeekDays","prefixWeekDaysForMonthAndYearPeriod","prefixHours","prefixMinutes","prefixMinutesForHourPeriod","suffixMinutesForHourPeriod","errorInvalidCron","clearButtonText","weekDays","months","altWeekDays","altMonths","CronPicker","styled","props","getPopupContainer","trigger","parentElement","locale","theme","gridUnit","colors","grayscale","light4","StyledActions","primary","base","ActionWrapper","ActionsBar","actions","className","map","action","index","ActionIcon","Icons","icon","tooltip","id","label","title","placement","key","role","tabIndex","onClick","StyledSwitch","BaseSwitch","Switch","DEFAULT_TIMEZONE","MIN_SELECT_WIDTH","offsetsToName","currentDate","moment","JANUARY","JULY","getOffsetKey","name","tz","utcOffset","toString","getTimezoneName","offsets","isDST","ALL_ZONES","country","flat","TIMEZONES","forEach","zone","find","option","push","TIMEZONE_OPTIONS","format","value","timezoneName","TIMEZONE_OPTIONS_SORT_COMPARATOR","a","b","TimezoneSelector","onTimezoneChange","timezone","minWidth","validTimezone","useMemo","matchTimezoneToOptions","useEffect","ariaLabel","css","onChange","options","sortComparator","sort","StyledIcon","light1","RecipientIcon","type","recipientIconConfig","RecipientIconName","Tooltip","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","TextStyles","Refresh","updatedAt","update","timeSince","setTimeSince","useState","interval","setInterval","clearInterval","isValid","AlertReportCronScheduler","useTheme","inputRef","useRef","scheduleFormat","setScheduleFormat","handleRadioButtonChange","useCallback","e","target","customSetValue","newValue","current","setValue","handleBlur","event","handlePressEnter","input","error","onError","Radio","clearButton","disabled","displayError","StyledInputContainer","Input","ref","style","borderColor","placeholder","onBlur","onPressEnter","StyledNotificationMethod","NotificationMethod","setting","onUpdate","onRemove","method","recipients","recipientValue","setRecipientValue","updatedSetting","undefined","iconColor","TEXT_BASED_VISUALIZATION_TYPES","DEFAULT_NOTIFICATION_METHODS","DEFAULT_NOTIFICATION_FORMAT","CONDITIONS","RETENTION_OPTIONS","DEFAULT_CRON_VALUE","DEFAULT_ALERT","active","creation_method","crontab","log_retention","working_timeout","owners","sql","validator_config_json","validator_type","force_screenshot","grace_period","StyledModal","Modal","StyledSectionContainer","light2","StyledSectionTitle","StyledSwitchContainer","typography","sizes","s","StyledRadio","StyledRadioGroup","StyledCheckbox","AntdCheckbox","StyledNotificationAddButton","dark1","StyledNotificationMethodWrapper","inputSpacer","TRANSLATIONS","ADD_NOTIFICATION_METHOD_TEXT","ADD_DELIVERY_METHOD_TEXT","SAVE_TEXT","ADD_TEXT","EDIT_REPORT_TEXT","EDIT_ALERT_TEXT","ADD_REPORT_TEXT","ADD_ALERT_TEXT","REPORT_NAME_TEXT","ALERT_NAME_TEXT","OWNERS_TEXT","DESCRIPTION_TEXT","ACTIVE_TEXT","ALERT_CONDITION_TEXT","DATABASE_TEXT","SQL_QUERY_TEXT","TRIGGER_ALERT_IF_TEXT","CONDITION_TEXT","VALUE_TEXT","VALUE_TOOLTIP","REPORT_SCHEDULE_TEXT","ALERT_CONDITION_SCHEDULE_TEXT","TIMEZONE_TEXT","SCHEDULE_SETTINGS_TEXT","LOG_RETENTION_TEXT","WORKING_TIMEOUT_TEXT","TIME_IN_SECONDS_TEXT","SECONDS_TEXT","GRACE_PERIOD_TEXT","MESSAGE_CONTENT_TEXT","DASHBOARD_TEXT","CHART_TEXT","SEND_AS_PNG_TEXT","SEND_AS_CSV_TEXT","SEND_AS_TEXT","IGNORE_CACHE_TEXT","NOTIFICATION_METHOD_TEXT","NotificationMethodAdd","status","withToasts","addDangerToast","onAdd","onHide","show","alert","isReport","addSuccessToast","conf","useCommonConf","allowedNotificationMethods","ALERT_REPORTS_NOTIFICATION_METHODS","disableSave","setDisableSave","currentAlert","setCurrentAlert","isHidden","setIsHidden","contentType","setContentType","reportFormat","setReportFormat","forceScreenshot","setForceScreenshot","conditionNotNull","setConditionNotNull","sourceOptions","setSourceOptions","dashboardOptions","setDashboardOptions","chartOptions","setChartOptions","chartVizType","setChartVizType","isEditMode","formatOptionEnabled","isFeatureEnabled","FeatureFlag","notificationAddState","setNotificationAddState","notificationSettings","setNotificationSettings","updateNotificationSetting","settings","slice","removeNotificationSetting","splice","state","loading","resource","fetchError","fetchResource","createResource","updateResource","clearError","useSingleViewResource","hide","loadOwnerOptions","page","pageSize","query","rison","filter","page_size","SupersetClient","endpoint","then","response","data","json","result","item","text","totalCount","count","getSourceData","db","database","source","updateAlertState","currentAlertData","loadSourceOptions","list","databaseLabel","loadDashboardOptions","getDashboardData","dashboard","dash","getChartData","chartData","chart","noChartLabel","loadChartOptions","onTextChange","onTimeoutVerifyChange","Math","max","config","recipient_config_json","JSON","parse","length","report_format","validatorConfig","viz_type","slice_name","dashboard_title","database_name","owner","first_name","last_name","op","currentAlertSafe","hasInfo","checkNotificationSettings","threshold","responsive","disablePrimaryButton","onHandledPrimaryAction","shouldEnableForceScreenshot","context_markdown","update_id","created_by","last_eval_dttm","last_state","last_value","last_value_row_json","primaryButtonName","width","maxWidth","allowClear","mode","description","checked","TextAreaControl","language","offerEditInModal","minLines","maxLines","readOnly","initialValue","InfoTooltipWithTrigger","newVal","timezoneHeaderStyle","retention","propertyComparator","min","setTimeout","getChartVisualizationType","notificationSetting","i","extensionsRegistry","getExtensionsRegistry","AlertStateLabel","AlertState","deleteAlerts","makeApi","requestType","RefreshContainer","light5","StyledHeaderWithIcon","HeaderExtension","get","isReportEnabled","user","titlePlural","pathName","initialFilters","operator","FilterOperator","resourceCount","alertsCount","resourceCollection","alerts","bulkSelectEnabled","lastFetched","hasPerm","fetchData","setResourceCollection","refreshData","toggleBulkSelect","useListViewResource","alertModalOpen","setAlertModalOpen","currentAlertDeleting","setCurrentAlertDeleting","handleAlertEdit","canEdit","canDelete","canCreate","initialSort","desc","toggleActive","original","catch","columns","Cell","row","lastState","AlertStatusIcon","accessor","size","disableSortBy","lastEvalDttm","local","DATETIME_WITH_TIME_ZONE","Header","crontab_humanized","r","FacePile","users","changed_on_delta_humanized","changedOn","allowEdit","o","userId","isUserAdmin","history","useHistory","toLowerCase","hidden","subMenuButtons","buttonStyle","emptyState","image","buttonAction","buttonText","filters","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","selects","header","SubMenu","activeChild","tabs","url","usesRouter","buttons","layer","Date","getTime","DeleteModal","onConfirm","handleAlertDelete","open","ConfirmStatusChange","async","alertsToDelete","message","confirmDelete","bulkActions","onSelect","ListView","disableBulkSelect","getStatusColor","success","lastStateConfig","Icon"],"sourceRoot":""}