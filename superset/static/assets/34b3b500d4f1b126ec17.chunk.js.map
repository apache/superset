{"version":3,"file":"34b3b500d4f1b126ec17.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/views/CRUD/csstemplates/CssTemplateModal.tsx","webpack://superset/./src/views/CRUD/csstemplates/CssTemplatesList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { CssEditor } from 'src/components/AsyncAceEditor';\n\nimport { TemplateObject } from './types';\n\ninterface CssTemplateModalProps {\n  addDangerToast: (msg: string) => void;\n  cssTemplate?: TemplateObject | null;\n  onCssTemplateAdd?: (cssTemplate?: TemplateObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledCssTemplateTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst StyledCssEditor = styled(CssEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\nconst TemplateContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n`;\n\nconst CssTemplateModal: FunctionComponent<CssTemplateModalProps> = ({\n  addDangerToast,\n  onCssTemplateAdd,\n  onHide,\n  show,\n  cssTemplate = null,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentCssTemplate, setCurrentCssTemplate] =\n    useState<TemplateObject | null>(null);\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const isEditMode = cssTemplate !== null;\n\n  // cssTemplate fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<TemplateObject>(\n    'css_template',\n    t('css_template'),\n    addDangerToast,\n  );\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentCssTemplate?.id) {\n        const update_id = currentCssTemplate.id;\n        delete currentCssTemplate.id;\n        delete currentCssTemplate.created_by;\n        updateResource(update_id, currentCssTemplate).then(response => {\n          if (!response) {\n            return;\n          }\n\n          if (onCssTemplateAdd) {\n            onCssTemplateAdd();\n          }\n\n          hide();\n        });\n      }\n    } else if (currentCssTemplate) {\n      // Create\n      createResource(currentCssTemplate).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onCssTemplateAdd) {\n          onCssTemplateAdd();\n        }\n\n        hide();\n      });\n    }\n  };\n\n  const onTemplateNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css: currentCssTemplate ? currentCssTemplate.css : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentCssTemplate(data);\n  };\n\n  const onCssChange = (css: string) => {\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css,\n    };\n    setCurrentCssTemplate(data);\n  };\n\n  const validate = () => {\n    if (\n      currentCssTemplate?.template_name.length &&\n      currentCssTemplate?.css?.length\n    ) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentCssTemplate ||\n        !currentCssTemplate.id ||\n        (cssTemplate && cssTemplate?.id !== currentCssTemplate.id) ||\n        (isHidden && show))\n    ) {\n      if (cssTemplate?.id !== null && !loading) {\n        const id = cssTemplate.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentCssTemplate || currentCssTemplate.id || (isHidden && show))\n    ) {\n      setCurrentCssTemplate({\n        template_name: '',\n        css: '',\n      });\n    }\n  }, [cssTemplate]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentCssTemplate(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentCssTemplate ? currentCssTemplate.template_name : '',\n    currentCssTemplate ? currentCssTemplate.css : '',\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"css-template-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode\n            ? t('Edit CSS template properties')\n            : t('Add CSS template')}\n        </h4>\n      }\n    >\n      <StyledCssTemplateTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledCssTemplateTitle>\n      <TemplateContainer>\n        <div className=\"control-label\">\n          {t('CSS template name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"template_name\"\n          onChange={onTemplateNameChange}\n          type=\"text\"\n          value={currentCssTemplate?.template_name}\n        />\n      </TemplateContainer>\n      <TemplateContainer>\n        <div className=\"control-label\">\n          {t('css')}\n          <span className=\"required\">*</span>\n        </div>\n        <StyledCssEditor\n          onChange={onCssChange}\n          value={currentCssTemplate?.css}\n          width=\"100%\"\n        />\n      </TemplateContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(CssTemplateModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { t, SupersetClient } from '@superset-ui/core';\n\nimport rison from 'rison';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/views/components/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport CssTemplateModal from './CssTemplateModal';\nimport { TemplateObject } from './types';\n\nconst PAGE_SIZE = 25;\n\ninterface CssTemplatesListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction CssTemplatesList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: CssTemplatesListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: templatesCount,\n      resourceCollection: templates,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<TemplateObject>(\n    'css_template',\n    t('CSS templates'),\n    addDangerToast,\n  );\n  const [cssTemplateModalOpen, setCssTemplateModalOpen] =\n    useState<boolean>(false);\n  const [currentCssTemplate, setCurrentCssTemplate] =\n    useState<TemplateObject | null>(null);\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  const [templateCurrentlyDeleting, setTemplateCurrentlyDeleting] =\n    useState<TemplateObject | null>(null);\n\n  const handleTemplateDelete = ({ id, template_name }: TemplateObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setTemplateCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', template_name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', template_name, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkTemplateDelete = (templatesToDelete: TemplateObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/?q=${rison.encode(\n        templatesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected templates: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  function handleCssTemplateEdit(cssTemplate: TemplateObject) {\n    setCurrentCssTemplate(cssTemplate);\n    setCssTemplateModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'template_name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'template_name',\n        Header: t('Name'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => {\n          let name = 'null';\n\n          if (changedBy) {\n            name = `${changedBy.first_name} ${changedBy.last_name}`;\n          }\n\n          return (\n            <Tooltip\n              id=\"allow-run-async-header-tooltip\"\n              title={t('Last modified by %s', name)}\n              placement=\"right\"\n            >\n              <span>{changedOn}</span>\n            </Tooltip>\n          );\n        },\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).fromNow();\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleCssTemplateEdit(original);\n          const handleDelete = () => setTemplateCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const menuData: SubMenuProps = {\n    name: t('CSS templates'),\n  };\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('CSS template')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        setCurrentCssTemplate(null);\n        setCssTemplateModalOpen(true);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'css_template',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'template_name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      <CssTemplateModal\n        addDangerToast={addDangerToast}\n        cssTemplate={currentCssTemplate}\n        onCssTemplateAdd={() => refreshData()}\n        onHide={() => setCssTemplateModalOpen(false)}\n        show={cssTemplateModalOpen}\n      />\n      {templateCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the template.')}\n          onConfirm={() => {\n            if (templateCurrentlyDeleting) {\n              handleTemplateDelete(templateCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setTemplateCurrentlyDeleting(null)}\n          open\n          title={t('Delete Template?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected templates?',\n        )}\n        onConfirm={handleBulkTemplateDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<TemplateObject>\n              className=\"css-templates-list-view\"\n              columns={columns}\n              count={templatesCount}\n              data={templates}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(CssTemplatesList);\n"],"names":["StyledActions","styled","theme","colors","primary","base","ActionWrapper","grayscale","ActionsBar","actions","className","map","action","index","ActionIcon","Icons","icon","tooltip","id","label","title","placement","key","role","tabIndex","onClick","StyledCssTemplateTitle","gridUnit","StyledCssEditor","CssEditor","borderRadius","secondary","light2","TemplateContainer","error","withToasts","addDangerToast","onCssTemplateAdd","onHide","show","cssTemplate","disableSave","setDisableSave","useState","currentCssTemplate","setCurrentCssTemplate","isHidden","setIsHidden","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","useSingleViewResource","t","hide","useEffect","template_name","css","length","Modal","disablePrimaryButton","onHandledPrimaryAction","update_id","created_by","then","response","primaryButtonName","width","StyledIcon","name","onChange","event","target","data","value","type","addSuccessToast","user","resourceCount","templatesCount","resourceCollection","templates","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","useListViewResource","cssTemplateModalOpen","setCssTemplateModalOpen","canCreate","canEdit","canDelete","templateCurrentlyDeleting","setTemplateCurrentlyDeleting","initialSort","desc","columns","useMemo","accessor","Header","Cell","row","original","changed_on_delta_humanized","changedOn","changed_by","changedBy","first_name","last_name","Tooltip","size","disableSortBy","created_on","createdOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","moment","fromNow","createdBy","filter","item","hidden","menuData","subMenuButtons","push","buttonStyle","buttons","filters","input","operator","FilterOperator","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","SubMenu","DeleteModal","description","onConfirm","SupersetClient","endpoint","handleTemplateDelete","open","ConfirmStatusChange","templatesToDelete","rison","json","message","confirmDelete","bulkActions","onSelect","ListView","count","pageSize","disableBulkSelect"],"sourceRoot":""}