{"version":3,"file":"ddbeb4e9369b016e3138.chunk.js","mappings":"4JAkCc,SAAUA,EAAeC,GACrC,MAAM,SAAEC,EAAF,YAAYC,EAAZ,MAAyBC,EAAzB,OAAgCC,GACpCJ,GACI,YAAEK,EAAF,OAAeC,EAAf,sBAAuBC,GAA0BN,GACjD,KAAEO,GAASN,EAAY,GAG7B,GADgBM,GAAQA,EAAKC,OAAS,EACzB,CACX,MAAMC,EAAUJ,EACVK,EAAeN,EAGfO,EAAoB,CACxB,CAACC,EAAAA,WAAaC,GAAgCC,OAAOD,EAAMJ,IAC3D,CAACM,EAAAA,YAAcF,GACbA,EAAMH,GACR,CAACM,EAAAA,IAAMH,GAELA,EAAMI,aAAqC,IAAtBJ,EAAMI,YAEvB,IAAIC,KAAKL,EAAMI,aACf,MAKR,MAAO,CACLV,MAHgBY,EAAAA,EAAAA,aAAYZ,EAAMI,GAIlCR,SACAiB,qBAAsBd,EACtBJ,QAEH,CAED,MAAO,CAAEK,KAAM,KAAMJ,SAAQD,QAC9B,C","sources":["webpack://superset/./plugins/legacy-plugin-chart-event-flow/src/transformProps.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ChartProps, TimeseriesDataRecord } from '@superset-ui/core';\nimport { cleanEvents, TS, EVENT_NAME, ENTITY_ID } from '@data-ui/event-flow';\n\nexport interface EventFlowFormData {\n  allColumnsX: string;\n  entity: string;\n  minLeafNodeEventCount: number;\n}\n\nexport interface EventFlowChartProps extends ChartProps {\n  formData: EventFlowFormData;\n  queriesData: {\n    data: TimeseriesDataRecord[];\n  }[];\n}\n\nexport default function transformProps(chartProps: ChartProps) {\n  const { formData, queriesData, width, height } =\n    chartProps as EventFlowChartProps;\n  const { allColumnsX, entity, minLeafNodeEventCount } = formData;\n  const { data } = queriesData[0];\n\n  const hasData = data && data.length > 0;\n  if (hasData) {\n    const userKey = entity;\n    const eventNameKey = allColumnsX;\n\n    // map from the Superset form fields to <EventFlow />'s expected data keys\n    const accessorFunctions = {\n      [ENTITY_ID]: (datum: TimeseriesDataRecord) => String(datum[userKey]),\n      [EVENT_NAME]: (datum: TimeseriesDataRecord) =>\n        datum[eventNameKey] as string,\n      [TS]: (datum: TimeseriesDataRecord): Date | null =>\n        // eslint-disable-next-line no-underscore-dangle\n        datum.__timestamp || datum.__timestamp === 0\n          ? // eslint-disable-next-line no-underscore-dangle\n            new Date(datum.__timestamp)\n          : null,\n    };\n\n    const cleanData = cleanEvents(data, accessorFunctions);\n\n    return {\n      data: cleanData,\n      height,\n      initialMinEventCount: minLeafNodeEventCount,\n      width,\n    };\n  }\n\n  return { data: null, height, width };\n}\n"],"names":["transformProps","chartProps","formData","queriesData","width","height","allColumnsX","entity","minLeafNodeEventCount","data","length","userKey","eventNameKey","accessorFunctions","ENTITY_ID","datum","String","EVENT_NAME","TS","__timestamp","Date","cleanEvents","initialMinEventCount"],"sourceRoot":""}