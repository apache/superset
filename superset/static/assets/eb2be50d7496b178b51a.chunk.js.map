{"version":3,"file":"eb2be50d7496b178b51a.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/views/CRUD/annotation/AnnotationModal.tsx","webpack://superset/./src/views/CRUD/annotation/AnnotationList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { RangePicker } from 'src/components/DatePicker';\nimport moment from 'moment';\nimport Icons from 'src/components/Icons';\nimport Modal from 'src/components/Modal';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { JsonEditor } from 'src/components/AsyncAceEditor';\n\nimport { AnnotationObject } from './types';\n\ninterface AnnotationModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  annotationLayerId: number;\n  annotation?: AnnotationObject | null;\n  onAnnotationAdd?: (annotation?: AnnotationObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledAnnotationTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst StyledJsonEditor = styled(JsonEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\nconst AnnotationContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 5}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  textarea {\n    flex: 1 1 auto;\n    height: ${({ theme }) => theme.gridUnit * 17}px;\n    resize: none;\n    width: 100%;\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  input[type='text'] {\n    width: 65%;\n  }\n`;\n\nconst AnnotationModal: FunctionComponent<AnnotationModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  annotationLayerId,\n  annotation = null,\n  onAnnotationAdd,\n  onHide,\n  show,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentAnnotation, setCurrentAnnotation] =\n    useState<AnnotationObject | null>(null);\n  const isEditMode = annotation !== null;\n\n  // annotation fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<AnnotationObject>(\n    `annotation_layer/${annotationLayerId}/annotation`,\n    t('annotation'),\n    addDangerToast,\n  );\n\n  const resetAnnotation = () => {\n    // Reset annotation\n    setCurrentAnnotation({\n      short_descr: '',\n      start_dttm: '',\n      end_dttm: '',\n      json_metadata: '',\n      long_descr: '',\n    });\n  };\n\n  const hide = () => {\n    if (isEditMode) {\n      setCurrentAnnotation(resource);\n    } else {\n      resetAnnotation();\n    }\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentAnnotation?.id) {\n        const update_id = currentAnnotation.id;\n        delete currentAnnotation.id;\n        delete currentAnnotation.created_by;\n        delete currentAnnotation.changed_by;\n        delete currentAnnotation.changed_on_delta_humanized;\n        delete currentAnnotation.layer;\n        updateResource(update_id, currentAnnotation).then(response => {\n          // No response on error\n          if (!response) {\n            return;\n          }\n\n          if (onAnnotationAdd) {\n            onAnnotationAdd();\n          }\n\n          hide();\n\n          addSuccessToast(t('The annotation has been updated'));\n        });\n      }\n    } else if (currentAnnotation) {\n      // Create\n      createResource(currentAnnotation).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onAnnotationAdd) {\n          onAnnotationAdd();\n        }\n\n        hide();\n\n        addSuccessToast(t('The annotation has been saved'));\n      });\n    }\n  };\n\n  const onAnnotationTextChange = (\n    event:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { target } = event;\n\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation ? currentAnnotation.end_dttm : '',\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation ? currentAnnotation.start_dttm : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentAnnotation(data);\n  };\n\n  const onJsonChange = (json: string) => {\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation ? currentAnnotation.end_dttm : '',\n      json_metadata: json,\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation ? currentAnnotation.start_dttm : '',\n    };\n    setCurrentAnnotation(data);\n  };\n\n  const onDateChange = (value: any, dateString: Array<string>) => {\n    const data = {\n      ...currentAnnotation,\n      end_dttm:\n        currentAnnotation && dateString[1].length\n          ? moment(dateString[1]).format('YYYY-MM-DD HH:mm')\n          : '',\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm:\n        currentAnnotation && dateString[0].length\n          ? moment(dateString[0]).format('YYYY-MM-DD HH:mm')\n          : '',\n    };\n    setCurrentAnnotation(data);\n  };\n\n  const validate = () => {\n    if (\n      currentAnnotation?.short_descr?.length &&\n      currentAnnotation?.start_dttm?.length &&\n      currentAnnotation?.end_dttm?.length\n    ) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentAnnotation ||\n        !currentAnnotation.id ||\n        (annotation && annotation.id !== currentAnnotation.id) ||\n        show)\n    ) {\n      if (annotation?.id !== null && !loading) {\n        const id = annotation.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentAnnotation || currentAnnotation.id || show)\n    ) {\n      resetAnnotation();\n    }\n  }, [annotation]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentAnnotation(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentAnnotation ? currentAnnotation.short_descr : '',\n    currentAnnotation ? currentAnnotation.start_dttm : '',\n    currentAnnotation ? currentAnnotation.end_dttm : '',\n  ]);\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"annotation-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode ? t('Edit annotation') : t('Add annotation')}\n        </h4>\n      }\n    >\n      <StyledAnnotationTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledAnnotationTitle>\n      <AnnotationContainer>\n        <div className=\"control-label\">\n          {t('Annotation name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"short_descr\"\n          onChange={onAnnotationTextChange}\n          type=\"text\"\n          value={currentAnnotation?.short_descr}\n        />\n      </AnnotationContainer>\n      <AnnotationContainer>\n        <div className=\"control-label\">\n          {t('date')}\n          <span className=\"required\">*</span>\n        </div>\n        <RangePicker\n          placeholder={[t('Start date'), t('End date')]}\n          format=\"YYYY-MM-DD HH:mm\"\n          onChange={onDateChange}\n          showTime={{ format: 'hh:mm a' }}\n          use12Hours\n          value={\n            currentAnnotation?.start_dttm?.length ||\n            currentAnnotation?.end_dttm?.length\n              ? [\n                  moment(currentAnnotation.start_dttm),\n                  moment(currentAnnotation.end_dttm),\n                ]\n              : null\n          }\n        />\n      </AnnotationContainer>\n      <StyledAnnotationTitle>\n        <h4>{t('Additional information')}</h4>\n      </StyledAnnotationTitle>\n      <AnnotationContainer>\n        <div className=\"control-label\">{t('description')}</div>\n        <textarea\n          name=\"long_descr\"\n          value={currentAnnotation ? currentAnnotation.long_descr : ''}\n          placeholder={t('Description (this can be seen in the list)')}\n          onChange={onAnnotationTextChange}\n        />\n      </AnnotationContainer>\n      <AnnotationContainer>\n        <div className=\"control-label\">{t('JSON metadata')}</div>\n        <StyledJsonEditor\n          onChange={onJsonChange}\n          value={\n            currentAnnotation?.json_metadata\n              ? currentAnnotation.json_metadata\n              : ''\n          }\n          width=\"100%\"\n          height=\"120px\"\n        />\n      </AnnotationContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(AnnotationModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { css, t, styled, SupersetClient } from '@superset-ui/core';\nimport moment from 'moment';\nimport rison from 'rison';\n\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ListView, { ListViewProps } from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/views/components/SubMenu';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler } from 'src/views/CRUD/utils';\n\nimport { AnnotationObject } from './types';\nimport AnnotationModal from './AnnotationModal';\n\nconst PAGE_SIZE = 25;\n\ninterface AnnotationListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n}\n\nconst StyledHeader = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: ${theme.gridUnit * 4}px;\n      font-size: ${theme.typography.sizes.s}px;\n      font-weight: ${theme.typography.weights.normal};\n      text-decoration: underline;\n    }\n  `}\n`;\n\nfunction AnnotationList({\n  addDangerToast,\n  addSuccessToast,\n}: AnnotationListProps) {\n  const { annotationLayerId }: any = useParams();\n  const {\n    state: {\n      loading,\n      resourceCount: annotationsCount,\n      resourceCollection: annotations,\n      bulkSelectEnabled,\n    },\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationObject>(\n    `annotation_layer/${annotationLayerId}/annotation`,\n    t('annotation'),\n    addDangerToast,\n    false,\n  );\n  const [annotationModalOpen, setAnnotationModalOpen] =\n    useState<boolean>(false);\n  const [annotationLayerName, setAnnotationLayerName] = useState<string>('');\n  const [currentAnnotation, setCurrentAnnotation] =\n    useState<AnnotationObject | null>(null);\n  const [annotationCurrentlyDeleting, setAnnotationCurrentlyDeleting] =\n    useState<AnnotationObject | null>(null);\n  const handleAnnotationEdit = (annotation: AnnotationObject | null) => {\n    setCurrentAnnotation(annotation);\n    setAnnotationModalOpen(true);\n  };\n\n  const fetchAnnotationLayer = useCallback(\n    async function fetchAnnotationLayer() {\n      try {\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/annotation_layer/${annotationLayerId}`,\n        });\n        setAnnotationLayerName(response.json.result.name);\n      } catch (response) {\n        await getClientErrorObject(response).then(({ error }: any) => {\n          addDangerToast(error.error || error.statusText || error);\n        });\n      }\n    },\n    [annotationLayerId],\n  );\n\n  const handleAnnotationDelete = ({ id, short_descr }: AnnotationObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setAnnotationCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', short_descr));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', short_descr, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkAnnotationsDelete = (\n    annotationsToDelete: AnnotationObject[],\n  ) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/?q=${rison.encode(\n        annotationsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected annotations: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  // get the Annotation Layer\n  useEffect(() => {\n    fetchAnnotationLayer();\n  }, [fetchAnnotationLayer]);\n\n  const initialSort = [{ id: 'short_descr', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'short_descr',\n        Header: t('Label'),\n      },\n      {\n        accessor: 'long_descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm },\n          },\n        }: any) => moment(new Date(startDttm)).format('ll'),\n        Header: t('Start'),\n        accessor: 'start_dttm',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { end_dttm: endDttm },\n          },\n        }: any) => moment(new Date(endDttm)).format('ll'),\n        Header: t('End'),\n        accessor: 'end_dttm',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationEdit(original);\n          const handleDelete = () => setAnnotationCurrentlyDeleting(original);\n          const actions = [\n            {\n              label: 'edit-action',\n              tooltip: t('Edit annotation'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'delete-action',\n              tooltip: t('Delete annotation'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ];\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n    ],\n    [true, true],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  subMenuButtons.push({\n    name: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation')}\n      </>\n    ),\n    buttonStyle: 'primary',\n    onClick: () => {\n      handleAnnotationEdit(null);\n    },\n  });\n\n  subMenuButtons.push({\n    name: t('Bulk select'),\n    onClick: toggleBulkSelect,\n    buttonStyle: 'secondary',\n    'data-test': 'annotation-bulk-select',\n  });\n\n  let hasHistory = true;\n\n  try {\n    useHistory();\n  } catch (err) {\n    // If error is thrown, we know not to use <Link> in render\n    hasHistory = false;\n  }\n\n  const emptyState = {\n    title: t('No annotation yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => {\n      handleAnnotationEdit(null);\n    },\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation')}\n      </>\n    ),\n  };\n\n  return (\n    <>\n      <SubMenu\n        name={\n          <StyledHeader>\n            <span>{t('Annotation Layer %s', annotationLayerName)}</span>\n            <span>\n              {hasHistory ? (\n                <Link to=\"/annotationlayer/list/\">{t('Back to all')}</Link>\n              ) : (\n                <a href=\"/annotationlayer/list/\">{t('Back to all')}</a>\n              )}\n            </span>\n          </StyledHeader>\n        }\n        buttons={subMenuButtons}\n      />\n      <AnnotationModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        annotation={currentAnnotation}\n        show={annotationModalOpen}\n        onAnnotationAdd={() => refreshData()}\n        annotationLayerId={annotationLayerId}\n        onHide={() => setAnnotationModalOpen(false)}\n      />\n      {annotationCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            'Are you sure you want to delete %s?',\n            annotationCurrentlyDeleting?.short_descr,\n          )}\n          onConfirm={() => {\n            if (annotationCurrentlyDeleting) {\n              handleAnnotationDelete(annotationCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setAnnotationCurrentlyDeleting(null)}\n          open\n          title={t('Delete Annotation?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected annotations?',\n        )}\n        onConfirm={handleBulkAnnotationsDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [\n            {\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            },\n          ];\n\n          return (\n            <ListView<AnnotationObject>\n              className=\"annotations-list-view\"\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              columns={columns}\n              count={annotationsCount}\n              data={annotations}\n              disableBulkSelect={toggleBulkSelect}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationList);\n"],"names":["StyledActions","styled","theme","colors","primary","base","ActionWrapper","grayscale","ActionsBar","actions","className","map","action","index","ActionIcon","Icons","icon","tooltip","id","label","title","placement","key","role","tabIndex","onClick","StyledAnnotationTitle","gridUnit","StyledJsonEditor","JsonEditor","borderRadius","secondary","light2","AnnotationContainer","error","withToasts","addDangerToast","addSuccessToast","annotationLayerId","annotation","onAnnotationAdd","onHide","show","disableSave","setDisableSave","useState","currentAnnotation","setCurrentAnnotation","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","useSingleViewResource","t","resetAnnotation","short_descr","start_dttm","end_dttm","json_metadata","long_descr","hide","onAnnotationTextChange","event","target","data","name","value","useEffect","length","Modal","disablePrimaryButton","onHandledPrimaryAction","update_id","created_by","changed_by","changed_on_delta_humanized","layer","then","response","primaryButtonName","width","css","StyledIcon","onChange","type","placeholder","format","dateString","moment","showTime","use12Hours","json","height","StyledHeader","typography","sizes","s","weights","normal","useParams","resourceCount","annotationsCount","resourceCollection","annotations","bulkSelectEnabled","fetchData","refreshData","toggleBulkSelect","useListViewResource","annotationModalOpen","setAnnotationModalOpen","annotationLayerName","setAnnotationLayerName","annotationCurrentlyDeleting","setAnnotationCurrentlyDeleting","handleAnnotationEdit","fetchAnnotationLayer","useCallback","async","SupersetClient","endpoint","result","getClientErrorObject","statusText","initialSort","desc","columns","useMemo","accessor","Header","Cell","row","original","startDttm","Date","endDttm","disableSortBy","subMenuButtons","push","buttonStyle","hasHistory","useHistory","err","emptyState","image","buttonAction","buttonText","SubMenu","to","href","buttons","DeleteModal","description","onConfirm","createErrorHandler","errMsg","handleAnnotationDelete","open","ConfirmStatusChange","annotationsToDelete","rison","message","confirmDelete","bulkActions","onSelect","ListView","count","disableBulkSelect","pageSize"],"sourceRoot":""}