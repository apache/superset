{"version":3,"file":"4f833db30c0b2d91910e.chunk.js","mappings":"8QAiCO,SAASA,EACdC,EACAC,EACAC,EACAC,GAEA,QADA,IAFAD,IAAAA,GAAgB,QAEhB,IADAC,IAAAA,EAAc,CAAC,IAEVH,EAASI,WACZ,OAAO,KAGT,MAAMC,EAAM,IAAIC,IAAJ,CAAQ,KACdC,EArBD,SAAyBP,EAAUC,GAAwB,IAAD,WAAvBA,IAAAA,EAAe,QAEvD,IAAIM,EAAY,YAKhB,OAJI,OAAC,OAAQ,MAAO,QAAS,UAAW,YAApC,OAAwDN,KAC1DM,EAAY,2BAGPA,CACR,CAamBC,CAAgBR,EAAUC,GACtCQ,EAASJ,EAAII,QAAO,GAC1BC,OAAOC,KAAKR,GAAaS,SAAQC,IAC/BJ,EAAOI,GAAOV,EAAYU,EAA1B,IAEFJ,EAAOK,UCrBF,SAAuBC,GAC5B,MAAMC,EAAQ,IAAIC,IAElB,OAAOC,KAAKC,UAAUJ,GAAQ,CAACF,EAAKO,KAClC,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,CAC/C,GAAIJ,EAAMK,IAAID,GAEZ,IAEE,OAAOF,KAAKI,MAAMJ,KAAKC,UAAUC,GAIlC,CAHC,MAAOG,GAEP,MACD,CAGHP,EAAMQ,IAAIJ,EACX,CAED,OAAOA,CAAP,GAEH,CDAoBK,CAAczB,GACZ,eAAjBC,IACFQ,EAAOiB,WAAa,QAEtB,MAAMC,EAAMtB,EAAIE,UAAUA,GAAWE,OAAOA,GAAQmB,WACpD,OAAK1B,GAAiByB,EAAIE,OAjCL,IAuCZ9B,EALiB,CACtBK,WAAYJ,EAASI,WACrB0B,SAAU9B,EAAS8B,UAGqB7B,GAAc,EAAO,CAC7D8B,yBAA0B,OAIvBJ,CACR,C,2FEtCD,MAWA,EAXwB,CACtBK,UADsB,WAEtBC,gBAFsB,WAGtBC,UAHsB,WAItBC,SAJsB,WAKtBC,aALsB,WAMtBC,aANsB,WAOtBC,SAPsB,WAQtBC,aARsB,Y,eCExB,MAAMC,EAAY,CAChBxC,SAAUyC,IAAAA,OAAAA,WACVC,QAASD,IAAAA,OAAAA,WACTE,gBAAiBF,IAAAA,KAAAA,WACjBG,SAAUH,IAAAA,OAAAA,WACVI,YAAaJ,IAAAA,KACbK,SAAUL,IAAAA,MAENM,EAAe,CACnBF,cAAgB,EAChBC,WAAa,GAGf,MAAME,UAAkBC,EAAAA,cAGtBC,YAAYC,GACVC,MAAMD,GADW,KAFnBE,aAAeJ,EAAAA,YAEI,KAoEnBK,WAAaC,IACX,MAAM,QAAEC,GAAYC,KAAKJ,aACrBG,GACFA,EAAQF,WAAWC,EACpB,EAtEDE,KAAKC,MAAQ,CAAEC,gBAAiB,CAAC,GACjCF,KAAKG,iBAAmBH,KAAKG,iBAAiBC,KAAKJ,KACpD,CAEDK,oBACE,MAAM,SAAE9D,EAAF,QAAY0C,GAAYe,KAAKN,MACnCM,KAAKM,WAAW/D,EAAU0C,EAC3B,CAEDsB,iCAAiCC,GAC/B,MAAM,SAAEjE,EAAF,QAAY0C,GAAYuB,GACV,IAClBR,KAAKN,MAAMnD,SAASkE,YACpBD,EAAUjE,SAASkE,cAGnBT,KAAKM,WAAW/D,EAAU0C,EAE7B,CAEDkB,iBAAiBhB,GACfa,KAAKU,SAAS,CAAEvB,YACjB,CAEDmB,WAAW/D,EAAU0C,EAASE,GAC5Ba,KAAKU,SAAS,CAAER,gBAAiB,CAAC,EAAGf,aACrCF,EAAQ0B,KAAKC,OAAOzD,SAAQ0D,IAI1B,MAAMC,EAAU,IACVD,EAASxD,UAAUyD,SAAW,MAC9BvE,EAASuE,SAAW,MACpBvE,EAASwE,eAAiB,IAE1BC,EAAe,IAChBH,EACHxD,UAAW,IACNwD,EAASxD,UACZyD,YAIJG,EAAAA,EAAAA,IAAmB,CACjBC,SAAU5E,EAAkB0E,EAAa3D,UAAW,UAEnD8D,MAAM,IAAc,IAAd,KAAEC,GAAW,EAClB,MAAMC,EAAQC,EAAgBN,EAAa3D,UAAUgB,UACnD2C,EAAa3D,UACb+D,EACApB,KAAKN,MAAMN,YACXY,KAAKH,WACL,GACAG,KAAKN,MAAML,UAEbW,KAAKU,SAAS,CACZR,gBAAiB,IACZF,KAAKC,MAAMC,gBACd,CAACc,EAAaO,UAAWF,IAH7B,IAODG,OAAM,QAnBT,GAqBH,CASDC,SACE,MAAM,QAAExC,EAAF,SAAW1C,EAAX,gBAAqB2C,EAArB,OAAsCwC,EAAtC,MAA8CC,GAAU3B,KAAKN,OAC7D,gBAAEQ,GAAoBF,KAAKC,MAE3B2B,EAAS3E,OAAO4E,OAAO3B,GAE7B,OACE,QAAC4B,EAAA,EAAD,CACEC,IAAK/B,KAAKJ,aACVoC,qBAAsB/C,EAAQ0B,KAAKsB,aACnC9C,SAAUa,KAAKC,MAAMd,UAAYa,KAAKN,MAAMP,SAC5CyC,OAAQA,EACRM,SAAU3F,EAAS4F,aACnBjD,gBAAiBA,EACjBiB,iBAAkBH,KAAKG,iBACvBuB,OAAQA,EACRC,MAAOA,GAGZ,EAGHpC,EAAUR,UAAYA,EACtBQ,EAAUD,aAAeA,EAEzB,S,4MCpHA,MAAM8C,EAAc,CAClBC,UAAW,YACXC,MAAO,YACPC,KAAM,YACN,aAAc,YACdC,YAAa,cACb,eAAgB,cAChB,eAAgB,eAGZC,EAAa,CAAC/C,EAAOgD,KACzB,MAAMC,EAAW,CAAC,EAelB,OAdA1F,OAAOC,KAAKwC,GAAOvC,SAAQyF,IACrBA,KAAKR,EACPO,EAASP,EAAYQ,IAAMlD,EAAMkD,GAEjCD,EAASC,GAAKlD,EAAMkD,EACrB,IAE4B,iBAApBlD,EAAM2C,YACfM,EAASN,WAAYQ,EAAAA,EAAAA,UAASnD,EAAM2C,YAEL,iBAAtB3C,EAAM8C,cACfG,EAASH,aAAcK,EAAAA,EAAAA,UAASnD,EAAM8C,cAGjC,IACFG,KACAD,EAFL,EAKF,IAAII,EACJ,MAAMC,EAAiB,CAACC,EAAMN,EAAeO,KAM3C,GALID,GAAQA,EAAKF,UACfE,EAAKF,SAAS3F,SAAQ+F,IACpBH,EAAeG,EAAKR,EAAeM,EAAKC,YAAcA,EAAtD,IAGAD,GAAQA,EAAKG,SAAU,CACzB,MAAMC,EAAU,IACXJ,EACHK,WAAYZ,EAAWO,EAAKK,WAAYX,IAErCU,EAAQH,aACXG,EAAQH,WAAaA,GAEvBH,EAASQ,KAAKF,EACf,GAGH,SAASG,EAAkBC,GACzB,OACEA,EAAElG,OAAO2F,aACP,eAAKQ,UAAU,kBACZxG,OAAOC,KAAKsG,EAAElG,OAAO2F,YAAYS,KAAI,CAACC,EAAMC,KAC3C,QAAC,IAAD,CACExG,IAAM,QAAOwG,IACbC,MAAQ,GAAEF,MACVhG,MAAQ,GAAE6F,EAAElG,OAAO2F,WAAWU,SAMzC,CAED,MAAMG,EAAeC,IAAO,mBAAIA,GAAJ,SAAIA,EAASV,iBAAb,EAAI,EAAqBhB,SAAzB,EACtB2B,EAAeD,IAAO,mBAAIA,GAAJ,SAAIA,EAASV,iBAAb,EAAI,EAAqBb,WAAzB,EAErB,SAASyB,EAAS1H,EAAU0C,EAASG,EAAaS,GACvD,MAAMqE,EAAK3H,EACL4H,EAAKD,EAAGE,kBACRC,EAAKH,EAAGI,oBACRjC,EAAY,CAAC8B,EAAGI,EAAGJ,EAAGK,EAAGL,EAAGM,EAAG,IAAMN,EAAGO,GACxClC,EAAc,CAAC6B,EAAGE,EAAGF,EAAGG,EAAGH,EAAGI,EAAG,IAAMJ,EAAGK,GAC1ChC,EAAgB,CAAC,EAWvB,IAAIiC,EAOJ,OAjBItC,EAAU,GAAK,IACjBK,EAAcL,UAAYA,GAExBG,EAAY,GAAK,IACnBE,EAAcF,YAAcA,GAG9BM,EAAW,GACXC,EAAe9D,EAAQ0B,KAAM+B,GAGzBwB,EAAGU,kBAELD,GAAcE,EAAAA,EAAAA,GAAcX,EAAGU,iBAC/B9B,EAAW6B,EAAY7B,IAGlB,IAAIgC,EAAAA,EAAa,CACtBC,GAAK,iBAAgBb,EAAG3C,WACxByD,OAAQd,EAAGc,OACXrE,KAAMmC,EACNmC,QAASf,EAAGe,QACZC,SAAUhB,EAAGgB,SACbC,iBAAkBjB,EAAGkB,mBACrBtB,eACAuB,aAAcnB,EAAGoB,YAAc,EAC/BtB,mBACGuB,EAAAA,EAAAA,GAAiBrB,EAAIrE,EAAY0D,IAEvC,CAED,MAAMxE,EAAY,CAChBxC,SAAUyC,IAAAA,OAAAA,WACVC,QAASD,IAAAA,OAAAA,WACTE,gBAAiBF,IAAAA,KAAAA,WACjBG,SAAUH,IAAAA,OAAAA,WACVI,YAAaJ,IAAAA,MAETM,EAAe,CACnBF,cAAgB,GAGlB,MAAMoG,UAAsBhG,EAAAA,UAAiB,cAAD,yBAC1CI,aAAeJ,EAAAA,YAD2B,KAG1CK,WAAaC,IACX,MAAM,QAAEC,GAAYC,KAAKJ,aACrBG,GACFA,EAAQF,WAAWC,EACpB,CAPuC,CAU1C2B,SACE,MAAM,SAAElF,EAAF,QAAY0C,EAAZ,gBAAqBC,EAArB,YAAsCE,EAAtC,OAAmDsC,EAAnD,MAA2DC,GAC/D3B,KAAKN,MAEP,IAAI,SAAEP,GAAaa,KAAKN,MACxB,GAAInD,EAASkJ,SAAU,CAAC,IAAD,IACrB,MAAMC,GACG,MAAPzG,GAAA,SAAAA,EAAS0B,OAAT,WAAemC,WAAf,QAAyB6C,YAAzB,IAAyBA,QAAS,CAACC,EAAK7B,KACtC,MAAM8B,EAASC,IAAc/B,GAC7B,OAAI8B,EACK,IAAID,EAAK,CAACC,EAAO,GAAIA,EAAO,IAAK,CAACA,EAAO,GAAIA,EAAO,KAGtDD,CAAP,GACC,MAAO,GAERF,EAAOtH,SACTe,GAAW4G,EAAAA,EAAAA,GAAY5G,EAAU,CAC/BwC,QACAD,SACAgE,WAGL,CAED,MAAMrE,EAAQ4C,EAAS1H,EAAU0C,EAASG,EAAaY,KAAKH,YAE5D,OACE,QAAC,IAAD,CACEkC,IAAK/B,KAAKJ,aACVoC,qBAAsB/C,EAAQ0B,KAAKsB,aACnC9C,SAAUA,EACVyC,OAAQ,CAACP,GACTa,SAAU3F,EAAS4F,aACnBjD,gBAAiBA,EACjBwC,OAAQA,EACRC,MAAOA,GAGZ,EAGH6D,EAAczG,UAAYA,EAC1ByG,EAAclG,aAAeA,EAE7B,S,gLC/KA,SAASiE,EAAkBC,GACzB,OACE,eAAKC,UAAU,mBACb,QAAC,IAAD,CAEEI,OAAOmC,EAAAA,EAAAA,GAAE,0BAA4B,KACrCrI,MAAQ,GAAE6F,EAAEyC,WAAW,OAAOzC,EAAEyC,WAAW,QAE7C,QAAC,IAAD,CAEEpC,OAAOmC,EAAAA,EAAAA,GAAE,UAAY,KACrBrI,MAAQ,GAAE6F,EAAElG,OAAO4I,mBAI1B,CAEM,SAASjC,EAAS1H,EAAU0C,EAASG,EAAaS,GACvD,MAAMqE,EAAK3H,EAEL4J,EADaC,EAAAA,SAAmClC,EAAGmC,cAC3BC,QAAQ5C,KAAIpB,IAASO,EAAAA,EAAAA,UAASP,KAC5D,IAAI3B,EAAO1B,EAAQ0B,KAAKmC,SAEpBoB,EAAGU,kBAGLjE,GADoBkE,EAAAA,EAAAA,GAAcX,EAAGU,gBAC9BD,CAAYhE,IAGrB,MAAM4F,GAAUC,EAAAA,EAAAA,GAAWtC,EAAGuC,iBAAiBC,GAAKA,EAAEC,SAEtD,OAAO,IAAIC,EAAAA,EAAU,CACnB7B,GAAK,cAAab,EAAG3C,WACrBZ,OACAkG,UAAU,EACVC,SAAU5C,EAAG6C,UACb7B,SAAUhB,EAAGgB,SACbiB,aACAa,SAAS,EACTC,kBAAmBV,EACnBW,cAAeX,MACZhB,EAAAA,EAAAA,GAAiBrB,EAAIrE,EAAY0D,IAEvC,CAMD,SAAe4D,EAAAA,EAAAA,GAAsBlD,GAJrC,SAAmBtD,GACjB,OAAOA,EAAK+C,KAAI0D,GAAKA,EAAEC,UACxB,G,mGC3EGC,EAAUC,KAAKC,GAAK,EACpBC,EAAS,CAAC,EAAGH,EAAS,EAAIA,EAAS,EAAIA,EAAS,EAAIA,EAAS,EAAIA,GAErE,SAASI,EAAON,GACd,OAAOA,EAAE,EACX,CAEA,SAASO,EAAOP,GACd,OAAOA,EAAE,EACX,C,qCCFA,SAASQ,IAAO,CAEhB,MAAMtI,EAAe,CACnBuI,YAAa,KACb1B,WAAY,IACZe,cAAe,CACbY,KAAM,WACNnK,MAAO,MAEToK,eAAgB,CACdD,KAAM,WACNnK,MAAO,GAETqK,iBAAkB,MAClBC,gBAAiB,CACfH,KAAM,SACNnK,MAAO,EACPuK,IAAK,EACLC,IAAK,KAEPC,gBAAiB,CACfN,KAAM,SACNnK,MAAO,IACPuK,IAAK,EACLC,IAAK,KAEPE,eAAgB,WAChBC,iBAAkBV,EAClBW,gBAAiB,KACjBC,eAAgB,CAAC,EAAG,KACpBvB,kBAAmB,CACjBa,KAAM,WACNnK,MAAO,MAET8K,mBAAoB,CAClBX,KAAM,WACNnK,MAAO,GAET+K,qBAAsB,MACtBC,yBAA0B,CACxBb,KAAM,SACNnK,MAAO,EACPuK,IAAK,EACLC,IAAK,KAEPS,yBAA0B,CACxBd,KAAM,SACNnK,MAAO,IACPuK,IAAK,EACLC,IAAK,KAEPU,eAAgB,CACdf,KAAM,SACNI,IAAK,EACLvK,MAAO,GAETmL,mBAAoB,SACpBC,qBAAsBnB,EACtBoB,OAAQ,CACNlB,KAAM,SACNnK,MAAO,IACPuK,IAAK,GAEPe,SAAU,CACRnB,KAAM,SACNI,IAAK,EACLC,IAAK,EACLxK,MAAO,GAETuH,UAAU,EACVgE,kBC3EK,SAAuBxJ,EAAOyJ,GACnC,MAAM,KACJxI,EAAI,OACJqI,GACEtJ,GACE,SACJP,EAAQ,WACRiK,GACED,EACEE,EAAe1I,EAAKvC,OAwCrB,SAAyBuC,EAAMwI,GACpC,MAAM,WACJC,GACED,EACEG,EAAYF,EAAWE,UAAU3L,OACjC,KACJ4L,GACEH,EAAWE,UAAUE,cACzB,IAIIC,EAJAC,EAAOC,IACPC,EAAOD,IACPE,GAAO,IACPC,GAAO,IAGX,IAAKL,EAAI,EAAGA,EAAIF,EAAO5I,EAAKvC,OAAQqL,GAAKF,EAAM,CAC7C,MAAMQ,EAAIT,EAAUG,GACdO,EAAIV,EAAUG,EAAI,GACFQ,OAAOC,SAASH,IAAME,OAAOC,SAASF,KAG1DN,EAAOnC,KAAKW,IAAI6B,EAAGL,GACnBG,EAAOtC,KAAKY,IAAI4B,EAAGF,GACnBD,EAAOrC,KAAKW,IAAI8B,EAAGJ,GACnBE,EAAOvC,KAAKY,IAAI6B,EAAGF,GAEvB,CAEA,MAAO,CAACJ,EAAME,EAAMC,EAAMC,GAAMK,MAAMF,OAAOC,UAAY,EAAER,EAAOG,GAAQ,GAAID,EAAOE,GAAQ,GAAK,IACpG,CApEqCM,CAAgBzJ,EAAMwI,GAAqB,KACxEkB,EAoED,SAA2BrB,EAAQ7J,EAAUmL,GAClD,MAAM,cACJC,GACEpL,EAASqL,kBAAkBF,GAC/B,OAAOtB,EAASuB,EAAc,EAChC,CAzEuBE,CAAkBzB,EAAQ7J,EAAUkK,GACnDqB,EAAe,IACf,SACJC,EAAQ,WACRC,IACE,QAAejK,GACb2I,EAAYF,EAAWE,UAAU3L,OACjC,KACJ4L,GACEH,EAAWE,UAAUE,cAEzB,IAAK,MAAMlM,KAAUqN,EAAU,CAC7BC,EAAWhH,QACX,MAAMiH,EAAWD,EAAWhH,MAAQ2F,EAC9BlC,EAAW,CAACiC,EAAUuB,GAAWvB,EAAUuB,EAAW,IACtCZ,OAAOC,SAAS7C,EAAS,KAAO4C,OAAOC,SAAS7C,EAAS,IAG7EqD,EAAapH,KAAK,CAChBwH,YAAa3L,EAAS4L,YAAY1D,GAClC2D,OAAQ1N,EACRsG,MAAOgH,EAAWhH,QAGpBqH,EAAA,OAAS,iCAATA,EAEJ,CAEA,MAAMC,EF7BO,WACb,IAMI3G,EACA4G,EACAC,EARAC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLzB,EAAIrC,EACJsC,EAAIrC,EAKR,SAAS8D,EAAO/F,GACd,IAA8B+D,EAA1BiC,EAAW,CAAC,EAAGC,EAAO,GAAOC,EAAIlG,EAAOtH,OAE5C,IAAKqL,EAAI,EAAGA,EAAImC,IAAKnC,EACnB,IAAIoC,MAAMC,GAAM/B,EAAEgC,KAAK,KAAMC,EAAQtG,EAAO+D,GAAIA,EAAG/D,MAC5CmG,MAAMI,GAAMjC,EAAE+B,KAAK,KAAMC,EAAOvC,EAAG/D,IAD1C,CAGA,IAAIsG,EACAF,EACAG,EACAC,EAAK3E,KAAK4E,MAAMF,GAAUb,GAC1BgB,EAAK7E,KAAK4E,MAAML,EAAKA,EAAKX,GAAW,EAALe,GAAU,GAC1CG,EAAMJ,EAAKC,EAEf,GAAoB,EAAhB3E,KAAK+E,IAAID,GAAW,EAAG,CACzB,IAAIE,EAAMT,EAAKM,EACXI,EAAMJ,GAAMN,EAAKM,GAAM,EAAI,GAAK,EAChCK,EAAMP,GAAMD,EAAKC,GAAM,EAAI,GAC3BQ,EAAMZ,EAAKU,EACXG,EAAMV,EAAKQ,EACXF,EAAMA,EAAMF,EAAMA,EAAMK,EAAMA,EAAMC,EAAMA,IAAKP,EAAKI,GAAY,EAALN,EAAS,GAAK,GAAK,EAAGA,EAAKO,EAC5F,CAEA,IAAI1H,EAAKqH,EAAK,IAAMF,EAAIU,EAAMlB,EAAS3G,GACnC6H,EAAKA,EAAItJ,KAAK0I,IAEhBL,EAAKrI,KAAKsJ,EAAMlB,EAAS3G,GAAM,CAACiH,IAChCY,EAAI7C,GAAKqC,GAAW,EAALF,GAAU,GAAKf,EAC9ByB,EAAI5C,EAAIkC,EAAKd,EAvB6C,CA2B9D,OAAOO,CACT,CAEA,SAASkB,EAAQ7D,GACf,IAAIqC,EAAK,EAAGC,EAAK,EACjB,OAAO7D,EAAO/D,KAAI,SAASoJ,GACzB,IAAIvB,EAAKhE,KAAKwF,IAAID,GAAS9D,EACvBwC,GAAMjE,KAAKyF,IAAIF,GAAS9D,EACxBmC,EAAKI,EAAKF,EACVD,EAAKI,EAAKF,EAEd,OADAD,EAAKE,EAAID,EAAKE,EACP,CAACL,EAAIC,EACd,GACF,CA2CA,OAzCAK,EAAOoB,QAAU,SAAS7D,GACxB,MAAO,IAAM6D,EAAkB,MAAV7D,EAAiBzE,GAAKyE,GAAQiE,KAAK,KAAO,GACjE,EAEAxB,EAAOyB,QAAU,WAIf,IAHA,IAAIA,EAAU,GACVC,EAAI5F,KAAK4E,MAAMb,EAAKF,GACpB3B,EAAIlC,KAAK4E,MAAMd,EAAKF,GACfnB,EAAImD,EAAI/B,EAAIpB,EAAIwB,EAAKjH,EAAGyF,GAAKoB,IAAM+B,EAC1C,IAAK,IAAIpD,EAAIN,EAAI0B,GAAU,EAAJgC,GAAShC,EAAK,EAAGpB,EAAIwB,EAAKJ,EAAK,EAAGpB,GAAKoB,EAC5D+B,EAAQ5J,KAAK,CAACyG,EAAGC,IAGrB,OAAOkD,CACT,EAEAzB,EAAO2B,KAAO,WACZ,IAAIC,EAAWR,EAAQtI,GAAG+I,MAAM,EAAG,GAAGL,KAAK,KAC3C,OAAOxB,EAAOyB,UAAUxJ,KAAI,SAASgD,GAAK,MAAO,IAAMA,EAAI,IAAM2G,CAAU,IAAGJ,KAAK,GACrF,EAEAxB,EAAO1B,EAAI,SAASwD,GAClB,OAAOC,UAAUpP,QAAU2L,EAAIwD,EAAG9B,GAAU1B,CAC9C,EAEA0B,EAAOzB,EAAI,SAASuD,GAClB,OAAOC,UAAUpP,QAAU4L,EAAIuD,EAAG9B,GAAUzB,CAC9C,EAEAyB,EAAOzC,OAAS,SAASuE,GACvB,OAAOC,UAAUpP,QAAkB+M,EAAS,GAAjB5G,GAAKgJ,GAAgBhG,KAAKwF,IAAIzF,GAAU8D,EAAS,IAAJ7G,EAASkH,GAAUlH,CAC7F,EAEAkH,EAAOlC,KAAO,SAASgE,GACrB,OAAOC,UAAUpP,QAAUiN,EAAKC,EAAK,EAAGC,GAAMgC,EAAE,GAAI/B,GAAM+B,EAAE,GAAI9B,GAAU,CAACF,EAAKF,EAAIG,EAAKF,EAC3F,EAEAG,EAAOgC,OAAS,SAASF,GACvB,OAAOC,UAAUpP,QAAUiN,GAAMkC,EAAE,GAAG,GAAIjC,GAAMiC,EAAE,GAAG,GAAIhC,GAAMgC,EAAE,GAAG,GAAI/B,GAAM+B,EAAE,GAAG,GAAI9B,GAAU,CAAC,CAACJ,EAAIC,GAAK,CAACC,EAAIC,GACnH,EAEOC,EAAOzC,OAAO,EACvB,CEvEoByC,GAASzC,OAAOqB,GAAcN,GAAE3C,GAAKA,EAAE0D,YAAY,KAAId,GAAE5C,GAAKA,EAAE0D,YAAY,KAE9F,MAAO,CACL4C,SAFkBxC,EAAUR,GAENhH,KAAI,CAACiK,EAAK/J,KAAU,CACxCyD,SAAUlI,EAASyO,cAAc,CAACD,EAAI5D,EAAG4D,EAAI3D,IAC7CtE,OAAQiI,EACR/J,YAEFyG,eAEJ,ED4BEwD,YAAa,CACX/F,KAAM,WACNnK,MAAOoM,GAAKA,EAAE1C,UAEhByG,UAAU,EACVC,YAAa,CACXjG,KAAM,WACNnK,MAAO,KACPqQ,UAAU,IAGC,MAAMC,UAAqB,IACxCC,mBAAkB,YAChBC,IAEA,OAAOA,EAAYC,gBACrB,CAEAC,kBACE,MAAMC,EAAgB,IAAI,IAAc,CACtCC,cAAe7O,GAASA,EAAMwJ,kBAC9BsF,YAAa9O,GAASA,EAAMsJ,SAE9BhJ,KAAKC,MAAQ,CACXqO,gBACAG,gBAAiBH,EAAcrO,MAC/ByO,gBAAiB,MAEM1O,KAAK2O,sBACb5Q,IAAI,CACnBuL,UAAW,CACTC,KAAM,EACNqF,SAAU,gBAGhB,CAEAC,YAAYC,GACVnP,MAAMkP,YAAYC,GAClB,MAAM,cACJR,EACAI,gBAAiBK,GACf/O,KAAKC,MAEL6O,EAAKX,YAAYa,oBACnBhP,KAAKU,SAAS,CACZ+N,gBAAiBH,EAAcO,YAAYC,EAAM,CAC/C3P,SAAUa,KAAKiP,QAAQ9P,SACvBiK,WAAYpJ,KAAKkP,oBAKvB,MAAM,gBACJR,GACEJ,EAAcrO,MAAMkP,WAAa,CAAC,EAEtC,GAAIT,GAAmBK,IAAgBL,EAAiB,CACtD,MAAMU,EAAWpP,KAAKqP,2BAA2BX,GAE7CU,GACFpP,KAAKU,SAAS,CACZgO,kBACAU,YAGN,MACEpP,KAAKsP,mBAET,CAEAA,kBAAkBF,GAChB,MAAM,SACJjQ,GACEa,KAAKiP,SACH,cACJ1E,GACEpL,EAASqL,qBACP,cACJ8D,GACEtO,KAAKC,MAET,GAAIqO,EAAcrO,MAAMkP,WAAab,EAAcrO,MAAMkP,UAAU9E,aAAc,CAC/E,MAAM,aACJA,GACEiE,EAAcrO,MAAMkP,UAClBnG,EAASqB,EAAeE,EAAc,GAC5CvK,KAAKU,SAAS,CACZoM,MAAO,GACP9D,UAEJ,CACF,CAEAqG,2BAA2BX,GACzB,MAAM,SACJvP,GACEa,KAAKiP,QAET,GAAIM,MAAMC,QAAQd,IAA+C,IAA3BA,EAAgBtQ,OAAc,CAClE,MAAMqR,EAAUf,EAAgB,GAC1BgB,EAAUhB,EAAgB,GAC1BiB,EAAW,EAAEF,EAAQ,GAAKC,EAAQ,IAAM,GAAID,EAAQ,GAAKC,EAAQ,IAAM,GACvEE,EAAezQ,EAAS4L,YAAY4E,IACpC,cACJE,GACE1Q,EAASqL,kBAAkBmF,GAK/B,OAJiBjB,EAAgBhL,KAAIoM,IACnC,MAAMC,EAAS5Q,EAAS4L,YAAY+E,GACpC,MAAO,EAAEC,EAAO,GAAKH,EAAa,IAAMC,EAAc,IAAKE,EAAO,GAAKH,EAAa,IAAMC,EAAc,GAAG,GAG/G,CAGA,OADA5E,EAAA,QAAU,iEAAVA,GACO,IACT,CAEA+E,gBAAe,KACbC,IAEA,OAAOjQ,KAAKC,MAAMqO,cAAc0B,eAAe,CAC7CC,QAEJ,CAEAC,oBAAoBC,GAClB,OAAOnQ,KAAKC,MAAMqO,cAAc9E,YAAY,YAArCxJ,CAAkDmQ,EAC3D,CAEAC,wBAAwBD,GACtB,OAAOnQ,KAAKC,MAAMqO,cAAc9E,YAAY,YAArCxJ,CAAkDmQ,EAC3D,CAEAE,6BACE,OAAOrQ,KAAKC,MAAMqO,cAAcgC,kBAAkBtQ,KAAKN,MACzD,CAEA6Q,eACE,MAAM,eACJ1H,EAAc,SACd3D,EAAQ,SACR+D,EAAQ,SACR6E,EAAQ,YACR0C,GACExQ,KAAKN,OACH,MACJoN,EAAK,OACL9D,EAAM,cACNsF,EAAa,SACbc,GACEpP,KAAKC,MACHwQ,EAAgBzQ,KAAK0Q,iBAAiB,eAAgB,KAEtDC,EAAiB3Q,KAAKqQ,6BAS5B,OAAO,IAAII,EAAc,IAPRrB,GAAYA,EAAShR,OAAS,CAC7CgR,WACApG,OAAQ,GACN,CACFA,SACA8D,SAGA8D,eAAgB,EAChB/H,iBACA3D,WACA+D,WACA6E,WACAhK,aAAc9D,KAAKkQ,oBAAoB9P,KAAKJ,MAC5C6Q,aAAc7Q,KAAKoQ,wBAAwBhQ,KAAKJ,MAChDwQ,YAAaA,GAAe,CAC1B1M,aAAc0M,EAAYtJ,eAAiBsJ,EAAYzI,eACvD8I,aAAcL,EAAYvJ,mBAAqBuJ,EAAY/H,qBAE5DzI,KAAK8Q,iBAAiB,CACvB/L,GAAI,eACJ4L,mBACE,CACFhQ,KAAM2N,EAAcrO,MAAMkP,UAAUxO,MAExC,EAGFsN,EAAa8C,UAAY,eACzB9C,EAAa3O,aAAeA,E,oGE3O5B,SAASiE,EAAkBC,GACzB,OACE,eAAKC,UAAU,mBACb,QAACuN,EAAA,EAAD,CACEnN,OAAOmC,EAAAA,EAAAA,GAAE,uCACTrI,MAAQ,IAAG6F,EAAEyC,WAAW,OAAOzC,EAAEyC,WAAW,SAE9C,QAAC+K,EAAA,EAAD,CAEEnN,OAAOmC,EAAAA,EAAAA,GAAE,UAAY,KACrBrI,MAAQ,GAAE6F,EAAElG,OAAO4I,mBAI1B,CAEM,SAASjC,EAAS1H,EAAU0C,EAASG,EAAaS,GACvD,MAAMqE,EAAK3H,EAEL4J,EADaC,EAA0B6K,SAAS/M,EAAGmC,cAC3BC,QAAQ5C,KAAIpB,IAASO,EAAAA,EAAAA,UAASP,KAC5D,IAAI3B,EAAO1B,EAAQ0B,KAAKmC,SAEpBoB,EAAGU,kBAGLjE,GADoBkE,EAAAA,EAAAA,GAAcX,EAAGU,gBAC9BD,CAAYhE,IAErB,MAAM4F,GAAUC,EAAAA,EAAAA,GAAWtC,EAAGuC,iBAAiBC,GAAKA,EAAEC,SAEtD,OAAO,IAAIsH,EAAa,CACtBlJ,GAAK,aAAYb,EAAG3C,WACpBZ,OACAkG,UAAU,EACVmC,OAAQ9E,EAAG6C,UACX7B,SAAUhB,EAAGgB,SACbiB,aACAa,SAAS,EACTC,kBAAmBV,EACnBW,cAAeX,MACZhB,EAAAA,EAAAA,GAAiBrB,EAAIrE,EAAY0D,IAEvC,CAMD,SAAe4D,EAAAA,EAAAA,GAAsBlD,GAJrC,SAAmBtD,GACjB,OAAOA,EAAK+C,KAAI0D,GAAKA,EAAEC,UACxB,G,+IC/CD,SAAS9D,EAAkBC,GACzB,OACEA,EAAElG,OAAO2F,aACP,eAAKQ,UAAU,kBACZxG,OAAOC,KAAKsG,EAAElG,OAAO2F,YAAYS,KAAI,CAACC,EAAMC,KAC3C,QAAC,IAAD,CACExG,IAAM,QAAOwG,IACbC,MAAQ,GAAEF,MACVhG,MAAQ,GAAE6F,EAAElG,OAAO2F,WAAWU,SAMzC,CAEM,SAASM,EAAS1H,EAAU0C,EAASG,EAAaS,GACvD,MAAMqE,EAAK3H,EACL2U,EAAIhN,EAAGiN,aACPC,EAAa,CAACF,EAAE3M,EAAG2M,EAAE1M,EAAG0M,EAAEzM,EAAG,IAAMyM,EAAExM,GAC3C,IAAI/D,EAAO1B,EAAQ0B,KAAKmC,SAASY,KAAIK,IAAO,IACvCA,EACHsN,KAAMtN,EAAQsN,KACd1P,MAAOuC,EAAGoB,WACVhD,MAAO8O,MAQT,OALIlN,EAAGU,kBAELjE,GADoBkE,EAAAA,EAAAA,GAAcX,EAAGU,gBAC9BD,CAAYhE,IAGd,IAAI2Q,EAAAA,EAAU,CACnBvM,GAAK,cAAab,EAAG3C,WACrBgQ,SAAUnK,GAAKA,EAAE9E,MACjBkP,QAASpK,GAAKA,EAAEiK,KAChBI,SAAUrK,GAAKA,EAAEzF,MACjBhB,OACA+Q,SAAS,EACTC,WAAY,MACTpM,EAAAA,EAAAA,GAAiBrB,EAAIrE,EAAY0D,IAEvC,CAWD,SAAe4D,EAAAA,EAAAA,GAAsBlD,GATrC,SAAmBtD,GACjB,IAAI+E,EAAS,GAKb,OAJA/E,EAAKxD,SAAQiK,IACX1B,EAASA,EAAOkM,OAAOxK,EAAEiK,KAAzB,IAGK3L,CACR,G,+ICzDM,MAQDmM,EAAgB,Q,eCEtB,SAAStO,EAAkBhH,EAAUuV,GACnC,OAAOtO,IAAM,IAAD,EACV,MAAMK,GACM,MAAViO,OAAA,EAAAA,EAAavV,EAASwV,mBAAmBpU,UACzCqU,EAAAA,EAAAA,GAAc,SAACzV,EAASwV,yBAAV,EAAC,EAA6BpU,OAC9C,OACE,eAAK8F,UAAU,mBACb,QAACuN,EAAA,EAAD,CAEEnN,OAAOmC,EAAAA,EAAAA,GAAE,0BAA4B,KACrCrI,MAAQ,GAAE6F,EAAElG,OAAO+J,SAAS,OAAO7D,EAAElG,OAAO+J,SAAS,OAEtD7D,EAAElG,OAAO2U,YACR,QAACjB,EAAA,EAAD,CAEEnN,OAAOmC,EAAAA,EAAAA,GAAE,YAAc,KACvBrI,MAAQ,GAAE6F,EAAElG,OAAO2U,cAGtBzO,EAAElG,OAAO4U,SACR,QAAClB,EAAA,EAAD,CAAYnN,MAAQ,GAAEA,MAAWlG,MAAQ,GAAE6F,EAAElG,OAAO4U,WAf1D,CAoBH,CAEM,SAASjO,EACd1H,EACA0C,EACAG,EACAS,EACAlD,GAEA,MAAMuH,EAAK3H,EACL4V,EAAiBlT,EAAQ0B,KAAKmC,SAASY,KAAI0D,IAC/C,IAAI4B,GDpCqBoJ,ECoCClO,EAAGmO,WDpCEC,ECoCUlL,EAAE4B,QDnChC,aAAToJ,EACK7K,KAAKgL,KAAKD,EAAM/K,KAAKC,IAEjB,aAAT4K,EACKE,EAEI,cAATF,EACW,IAANE,EAEI,iBAATF,EACKE,EAAMT,EAEF,cAATO,EACgC,IAA3B7K,KAAKgL,KAAKD,EAAM/K,KAAKC,IAEjB,iBAAT4K,EACK7K,KAAKgL,KAAKD,EAAM/K,KAAKC,IAAMqK,EAG7B,OCgBiD,IDpCnD,IAAsBO,EAAME,ECwC/B,GAHIpO,EAAGsO,aACLxJ,GAAU9E,EAAGsO,YAEXpL,EAAE9E,MACJ,MAAO,IAAK8E,EAAG4B,UAEjB,MAAMkI,EAAIhN,EAAGiN,cAAgB,CAAE5M,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9CpC,EAAQ,CAAC4O,EAAE3M,EAAG2M,EAAE1M,EAAG0M,EAAEzM,EAAS,IAANyM,EAAExM,GAEhC,MAAO,IAAK0C,EAAG4B,SAAQ1G,QAAvB,IAGF,OAAO,IAAImQ,EAAAA,EAAiB,CAC1B1N,GAAK,iBAAgBb,EAAG3C,WACxBZ,KAAMwR,EACNO,MAAM,EACN5O,aAAcsD,GAAKA,EAAE9E,MACrBqQ,UAAWvL,GAAKA,EAAE4B,OAClB4J,gBAAiB1O,EAAG2O,YAAc,KAClCC,gBAAiB5O,EAAG6O,YAAc,KAClC9N,SAAS,MACNM,EAAAA,EAAAA,GACDrB,EACArE,EACA0D,EAAkBW,EAAD,MAAKvH,OAAL,EAAKA,EAAYmV,cAGvC,CAED,SAAekB,EAAAA,EAAAA,GAAiC/O,GAtEhD,SAAmBtD,GACjB,OAAOA,EAAK+C,KAAI0D,GAAKA,EAAEC,UACxB,G","sources":["webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/explore.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/safeStringify.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/index.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/Multi/Multi.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Geojson/Geojson.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Grid/Grid.jsx","webpack://superset/./node_modules/d3-hexbin/src/hexbin.js","webpack://superset/./node_modules/@deck.gl/aggregation-layers/dist/esm/hexagon-layer/hexagon-layer.js","webpack://superset/./node_modules/@deck.gl/aggregation-layers/dist/esm/hexagon-layer/hexagon-aggregator.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Hex/Hex.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Path/Path.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/geo.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Scatter/Scatter.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport URI from 'urijs';\nimport { safeStringify } from './safeStringify';\n\nconst MAX_URL_LENGTH = 8000;\n\nexport function getURIDirectory(formData, endpointType = 'base') {\n  // Building the directory part of the URI\n  let directory = '/explore/';\n  if (['json', 'csv', 'query', 'results', 'samples'].includes(endpointType)) {\n    directory = '/superset/explore_json/';\n  }\n\n  return directory;\n}\n\nexport function getExploreLongUrl(\n  formData,\n  endpointType,\n  allowOverflow = true,\n  extraSearch = {},\n) {\n  if (!formData.datasource) {\n    return null;\n  }\n\n  const uri = new URI('/');\n  const directory = getURIDirectory(formData, endpointType);\n  const search = uri.search(true);\n  Object.keys(extraSearch).forEach(key => {\n    search[key] = extraSearch[key];\n  });\n  search.form_data = safeStringify(formData);\n  if (endpointType === 'standalone') {\n    search.standalone = 'true';\n  }\n  const url = uri.directory(directory).search(search).toString();\n  if (!allowOverflow && url.length > MAX_URL_LENGTH) {\n    const minimalFormData = {\n      datasource: formData.datasource,\n      viz_type: formData.viz_type,\n    };\n\n    return getExploreLongUrl(minimalFormData, endpointType, false, {\n      URL_IS_TOO_LONG_TO_SHARE: null,\n    });\n  }\n\n  return url;\n}\n","/* eslint-disable consistent-return */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * A Stringify function that will not crash when it runs into circular JSON references,\n * unlike JSON.stringify. Any circular references are simply omitted, as if there had\n * been no data present\n * @param object any JSON object to be stringified\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport function safeStringify(object) {\n  const cache = new Set();\n\n  return JSON.stringify(object, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.has(value)) {\n        // We've seen this object before\n        try {\n          // Quick deep copy to duplicate if this is a repeat rather than a circle.\n          return JSON.parse(JSON.stringify(value));\n        } catch (error) {\n          // Discard key if value cannot be duplicated.\n          return;\n        }\n      }\n      // Store the value in our cache.\n      cache.add(value);\n    }\n\n    return value;\n  });\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { getLayer as deck_grid } from './Grid/Grid';\nimport { getLayer as deck_screengrid } from './Screengrid/Screengrid';\nimport { getLayer as deck_path } from './Path/Path';\nimport { getLayer as deck_hex } from './Hex/Hex';\nimport { getLayer as deck_scatter } from './Scatter/Scatter';\nimport { getLayer as deck_geojson } from './Geojson/Geojson';\nimport { getLayer as deck_arc } from './Arc/Arc';\nimport { getLayer as deck_polygon } from './Polygon/Polygon';\n\nconst layerGenerators = {\n  deck_grid,\n  deck_screengrid,\n  deck_path,\n  deck_hex,\n  deck_scatter,\n  deck_geojson,\n  deck_arc,\n  deck_polygon,\n};\n\nexport default layerGenerators;\n","/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport { SupersetClient } from '@superset-ui/core';\n\nimport { DeckGLContainerStyledWrapper } from '../DeckGLContainer';\nimport { getExploreLongUrl } from '../utils/explore';\nimport layerGenerators from '../layers';\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n  onSelect: PropTypes.func,\n};\nconst defaultProps = {\n  onAddFilter() {},\n  onSelect() {},\n};\n\nclass DeckMulti extends React.PureComponent {\n  containerRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = { subSlicesLayers: {} };\n    this.onViewportChange = this.onViewportChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { formData, payload } = this.props;\n    this.loadLayers(formData, payload);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { formData, payload } = nextProps;\n    const hasChanges = !_.isEqual(\n      this.props.formData.deck_slices,\n      nextProps.formData.deck_slices,\n    );\n    if (hasChanges) {\n      this.loadLayers(formData, payload);\n    }\n  }\n\n  onViewportChange(viewport) {\n    this.setState({ viewport });\n  }\n\n  loadLayers(formData, payload, viewport) {\n    this.setState({ subSlicesLayers: {}, viewport });\n    payload.data.slices.forEach(subslice => {\n      // Filters applied to multi_deck are passed down to underlying charts\n      // note that dashboard contextual information (filter_immune_slices and such) aren't\n      // taken into consideration here\n      const filters = [\n        ...(subslice.form_data.filters || []),\n        ...(formData.filters || []),\n        ...(formData.extra_filters || []),\n      ];\n      const subsliceCopy = {\n        ...subslice,\n        form_data: {\n          ...subslice.form_data,\n          filters,\n        },\n      };\n\n      SupersetClient.get({\n        endpoint: getExploreLongUrl(subsliceCopy.form_data, 'json'),\n      })\n        .then(({ json }) => {\n          const layer = layerGenerators[subsliceCopy.form_data.viz_type](\n            subsliceCopy.form_data,\n            json,\n            this.props.onAddFilter,\n            this.setTooltip,\n            [],\n            this.props.onSelect,\n          );\n          this.setState({\n            subSlicesLayers: {\n              ...this.state.subSlicesLayers,\n              [subsliceCopy.slice_id]: layer,\n            },\n          });\n        })\n        .catch(() => {});\n    });\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    const { payload, formData, setControlValue, height, width } = this.props;\n    const { subSlicesLayers } = this.state;\n\n    const layers = Object.values(subSlicesLayers);\n\n    return (\n      <DeckGLContainerStyledWrapper\n        ref={this.containerRef}\n        mapboxApiAccessToken={payload.data.mapboxApiKey}\n        viewport={this.state.viewport || this.props.viewport}\n        layers={layers}\n        mapStyle={formData.mapbox_style}\n        setControlValue={setControlValue}\n        onViewportChange={this.onViewportChange}\n        height={height}\n        width={width}\n      />\n    );\n  }\n}\n\nDeckMulti.propTypes = propTypes;\nDeckMulti.defaultProps = defaultProps;\n\nexport default DeckMulti;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { GeoJsonLayer } from 'deck.gl';\nimport geojsonExtent from '@mapbox/geojson-extent';\n\nimport { DeckGLContainerStyledWrapper } from '../../DeckGLContainer';\nimport { hexToRGB } from '../../utils/colors';\nimport sandboxedEval from '../../utils/sandbox';\nimport { commonLayerProps } from '../common';\nimport TooltipRow from '../../TooltipRow';\nimport fitViewport from '../../utils/fitViewport';\n\nconst propertyMap = {\n  fillColor: 'fillColor',\n  color: 'fillColor',\n  fill: 'fillColor',\n  'fill-color': 'fillColor',\n  strokeColor: 'strokeColor',\n  'stroke-color': 'strokeColor',\n  'stroke-width': 'strokeWidth',\n};\n\nconst alterProps = (props, propOverrides) => {\n  const newProps = {};\n  Object.keys(props).forEach(k => {\n    if (k in propertyMap) {\n      newProps[propertyMap[k]] = props[k];\n    } else {\n      newProps[k] = props[k];\n    }\n  });\n  if (typeof props.fillColor === 'string') {\n    newProps.fillColor = hexToRGB(props.fillColor);\n  }\n  if (typeof props.strokeColor === 'string') {\n    newProps.strokeColor = hexToRGB(props.strokeColor);\n  }\n\n  return {\n    ...newProps,\n    ...propOverrides,\n  };\n};\nlet features;\nconst recurseGeoJson = (node, propOverrides, extraProps) => {\n  if (node && node.features) {\n    node.features.forEach(obj => {\n      recurseGeoJson(obj, propOverrides, node.extraProps || extraProps);\n    });\n  }\n  if (node && node.geometry) {\n    const newNode = {\n      ...node,\n      properties: alterProps(node.properties, propOverrides),\n    };\n    if (!newNode.extraProps) {\n      newNode.extraProps = extraProps;\n    }\n    features.push(newNode);\n  }\n};\n\nfunction setTooltipContent(o) {\n  return (\n    o.object.extraProps && (\n      <div className=\"deckgl-tooltip\">\n        {Object.keys(o.object.extraProps).map((prop, index) => (\n          <TooltipRow\n            key={`prop-${index}`}\n            label={`${prop}: `}\n            value={`${o.object.extraProps[prop]}`}\n          />\n        ))}\n      </div>\n    )\n  );\n}\n\nconst getFillColor = feature => feature?.properties?.fillColor;\nconst getLineColor = feature => feature?.properties?.strokeColor;\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  const fillColor = [fc.r, fc.g, fc.b, 255 * fc.a];\n  const strokeColor = [sc.r, sc.g, sc.b, 255 * sc.a];\n  const propOverrides = {};\n  if (fillColor[3] > 0) {\n    propOverrides.fillColor = fillColor;\n  }\n  if (strokeColor[3] > 0) {\n    propOverrides.strokeColor = strokeColor;\n  }\n\n  features = [];\n  recurseGeoJson(payload.data, propOverrides);\n\n  let jsFnMutator;\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    features = jsFnMutator(features);\n  }\n\n  return new GeoJsonLayer({\n    id: `geojson-layer-${fd.slice_id}`,\n    filled: fd.filled,\n    data: features,\n    stroked: fd.stroked,\n    extruded: fd.extruded,\n    pointRadiusScale: fd.point_radius_scale,\n    getFillColor,\n    getLineWidth: fd.line_width || 1,\n    getLineColor,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n};\nconst defaultProps = {\n  onAddFilter() {},\n};\n\nclass DeckGLGeoJson extends React.Component {\n  containerRef = React.createRef();\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    const { formData, payload, setControlValue, onAddFilter, height, width } =\n      this.props;\n\n    let { viewport } = this.props;\n    if (formData.autozoom) {\n      const points =\n        payload?.data?.features?.reduce?.((acc, feature) => {\n          const bounds = geojsonExtent(feature);\n          if (bounds) {\n            return [...acc, [bounds[0], bounds[1]], [bounds[2], bounds[3]]];\n          }\n\n          return acc;\n        }, []) || [];\n\n      if (points.length) {\n        viewport = fitViewport(viewport, {\n          width,\n          height,\n          points,\n        });\n      }\n    }\n\n    const layer = getLayer(formData, payload, onAddFilter, this.setTooltip);\n\n    return (\n      <DeckGLContainerStyledWrapper\n        ref={this.containerRef}\n        mapboxApiAccessToken={payload.data.mapboxApiKey}\n        viewport={viewport}\n        layers={[layer]}\n        mapStyle={formData.mapbox_style}\n        setControlValue={setControlValue}\n        height={height}\n        width={width}\n      />\n    );\n  }\n}\n\nDeckGLGeoJson.propTypes = propTypes;\nDeckGLGeoJson.defaultProps = defaultProps;\n\nexport default DeckGLGeoJson;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { GridLayer } from 'deck.gl';\nimport React from 'react';\nimport { t, CategoricalColorNamespace } from '@superset-ui/core';\n\nimport { commonLayerProps, getAggFunc } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { hexToRGB } from '../../utils/colors';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o) {\n  return (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        // eslint-disable-next-line prefer-template\n        label={t('Longitude and Latitude') + ': '}\n        value={`${o.coordinate[0]}, ${o.coordinate[1]}`}\n      />\n      <TooltipRow\n        // eslint-disable-next-line prefer-template\n        label={t('Height') + ': '}\n        value={`${o.object.elevationValue}`}\n      />\n    </div>\n  );\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const colorScale = CategoricalColorNamespace.getScale(fd.color_scheme);\n  const colorRange = colorScale.range().map(color => hexToRGB(color));\n  let data = payload.data.features;\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const aggFunc = getAggFunc(fd.js_agg_function, p => p.weight);\n\n  return new GridLayer({\n    id: `grid-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    cellSize: fd.grid_size,\n    extruded: fd.extruded,\n    colorRange,\n    outline: false,\n    getElevationValue: aggFunc,\n    getColorValue: aggFunc,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n","import { log } from '@deck.gl/core';\nimport { ColumnLayer } from '@deck.gl/layers';\nimport { defaultColorRange } from '../utils/color-utils';\nimport { pointToHexbin } from './hexagon-aggregator';\nimport CPUAggregator from '../utils/cpu-aggregator';\nimport AggregationLayer from '../aggregation-layer';\n\nfunction nop() {}\n\nconst defaultProps = {\n  colorDomain: null,\n  colorRange: defaultColorRange,\n  getColorValue: {\n    type: 'accessor',\n    value: null\n  },\n  getColorWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  colorAggregation: 'SUM',\n  lowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  upperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  colorScaleType: 'quantize',\n  onSetColorDomain: nop,\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationValue: {\n    type: 'accessor',\n    value: null\n  },\n  getElevationWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  elevationAggregation: 'SUM',\n  elevationLowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  elevationUpperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  elevationScaleType: 'linear',\n  onSetElevationDomain: nop,\n  radius: {\n    type: 'number',\n    value: 1000,\n    min: 1\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  extruded: false,\n  hexagonAggregator: pointToHexbin,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  material: true,\n  _filterData: {\n    type: 'function',\n    value: null,\n    optional: true\n  }\n};\nexport default class HexagonLayer extends AggregationLayer {\n  shouldUpdateState({\n    changeFlags\n  }) {\n    return changeFlags.somethingChanged;\n  }\n\n  initializeState() {\n    const cpuAggregator = new CPUAggregator({\n      getAggregator: props => props.hexagonAggregator,\n      getCellSize: props => props.radius\n    });\n    this.state = {\n      cpuAggregator,\n      aggregatorState: cpuAggregator.state,\n      hexagonVertices: null\n    };\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {\n        size: 3,\n        accessor: 'getPosition'\n      }\n    });\n  }\n\n  updateState(opts) {\n    super.updateState(opts);\n    const {\n      cpuAggregator,\n      hexagonVertices: oldVertices\n    } = this.state;\n\n    if (opts.changeFlags.propsOrDataChanged) {\n      this.setState({\n        aggregatorState: cpuAggregator.updateState(opts, {\n          viewport: this.context.viewport,\n          attributes: this.getAttributes()\n        })\n      });\n    }\n\n    const {\n      hexagonVertices\n    } = cpuAggregator.state.layerData || {};\n\n    if (hexagonVertices && oldVertices !== hexagonVertices) {\n      const vertices = this.convertLatLngToMeterOffset(hexagonVertices);\n\n      if (vertices) {\n        this.setState({\n          hexagonVertices,\n          vertices\n        });\n      }\n    } else {\n      this.updateRadiusAngle();\n    }\n  }\n\n  updateRadiusAngle(vertices) {\n    const {\n      viewport\n    } = this.context;\n    const {\n      unitsPerMeter\n    } = viewport.getDistanceScales();\n    const {\n      cpuAggregator\n    } = this.state;\n\n    if (cpuAggregator.state.layerData && cpuAggregator.state.layerData.radiusCommon) {\n      const {\n        radiusCommon\n      } = cpuAggregator.state.layerData;\n      const radius = radiusCommon / unitsPerMeter[0];\n      this.setState({\n        angle: 90,\n        radius\n      });\n    }\n  }\n\n  convertLatLngToMeterOffset(hexagonVertices) {\n    const {\n      viewport\n    } = this.context;\n\n    if (Array.isArray(hexagonVertices) && hexagonVertices.length === 6) {\n      const vertex0 = hexagonVertices[0];\n      const vertex3 = hexagonVertices[3];\n      const centroid = [(vertex0[0] + vertex3[0]) / 2, (vertex0[1] + vertex3[1]) / 2];\n      const centroidFlat = viewport.projectFlat(centroid);\n      const {\n        metersPerUnit\n      } = viewport.getDistanceScales(centroid);\n      const vertices = hexagonVertices.map(vt => {\n        const vtFlat = viewport.projectFlat(vt);\n        return [(vtFlat[0] - centroidFlat[0]) * metersPerUnit[0], (vtFlat[1] - centroidFlat[1]) * metersPerUnit[1]];\n      });\n      return vertices;\n    }\n\n    log.error('HexagonLayer: hexagonVertices needs to be an array of 6 points')();\n    return null;\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    return this.state.cpuAggregator.getPickingInfo({\n      info\n    });\n  }\n\n  _onGetSublayerColor(cell) {\n    return this.state.cpuAggregator.getAccessor('fillColor')(cell);\n  }\n\n  _onGetSublayerElevation(cell) {\n    return this.state.cpuAggregator.getAccessor('elevation')(cell);\n  }\n\n  _getSublayerUpdateTriggers() {\n    return this.state.cpuAggregator.getUpdateTriggers(this.props);\n  }\n\n  renderLayers() {\n    const {\n      elevationScale,\n      extruded,\n      coverage,\n      material,\n      transitions\n    } = this.props;\n    const {\n      angle,\n      radius,\n      cpuAggregator,\n      vertices\n    } = this.state;\n    const SubLayerClass = this.getSubLayerClass('hexagon-cell', ColumnLayer);\n\n    const updateTriggers = this._getSublayerUpdateTriggers();\n\n    const geometry = vertices && vertices.length ? {\n      vertices,\n      radius: 1\n    } : {\n      radius,\n      angle\n    };\n    return new SubLayerClass({ ...geometry,\n      diskResolution: 6,\n      elevationScale,\n      extruded,\n      coverage,\n      material,\n      getFillColor: this._onGetSublayerColor.bind(this),\n      getElevation: this._onGetSublayerElevation.bind(this),\n      transitions: transitions && {\n        getFillColor: transitions.getColorValue || transitions.getColorWeight,\n        getElevation: transitions.getElevationValue || transitions.getElevationWeight\n      }\n    }, this.getSubLayerProps({\n      id: 'hexagon-cell',\n      updateTriggers\n    }), {\n      data: cpuAggregator.state.layerData.data\n    });\n  }\n\n}\nHexagonLayer.layerName = 'HexagonLayer';\nHexagonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=hexagon-layer.js.map","import { hexbin } from 'd3-hexbin';\nimport { createIterable, log } from '@deck.gl/core';\nexport function pointToHexbin(props, aggregationParams) {\n  const {\n    data,\n    radius\n  } = props;\n  const {\n    viewport,\n    attributes\n  } = aggregationParams;\n  const centerLngLat = data.length ? getPointsCenter(data, aggregationParams) : null;\n  const radiusCommon = getRadiusInCommon(radius, viewport, centerLngLat);\n  const screenPoints = [];\n  const {\n    iterable,\n    objectInfo\n  } = createIterable(data);\n  const positions = attributes.positions.value;\n  const {\n    size\n  } = attributes.positions.getAccessor();\n\n  for (const object of iterable) {\n    objectInfo.index++;\n    const posIndex = objectInfo.index * size;\n    const position = [positions[posIndex], positions[posIndex + 1]];\n    const arrayIsFinite = Number.isFinite(position[0]) && Number.isFinite(position[1]);\n\n    if (arrayIsFinite) {\n      screenPoints.push({\n        screenCoord: viewport.projectFlat(position),\n        source: object,\n        index: objectInfo.index\n      });\n    } else {\n      log.warn('HexagonLayer: invalid position')();\n    }\n  }\n\n  const newHexbin = hexbin().radius(radiusCommon).x(d => d.screenCoord[0]).y(d => d.screenCoord[1]);\n  const hexagonBins = newHexbin(screenPoints);\n  return {\n    hexagons: hexagonBins.map((hex, index) => ({\n      position: viewport.unprojectFlat([hex.x, hex.y]),\n      points: hex,\n      index\n    })),\n    radiusCommon\n  };\n}\nexport function getPointsCenter(data, aggregationParams) {\n  const {\n    attributes\n  } = aggregationParams;\n  const positions = attributes.positions.value;\n  const {\n    size\n  } = attributes.positions.getAccessor();\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let i;\n\n  for (i = 0; i < size * data.length; i += size) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    const arrayIsFinite = Number.isFinite(x) && Number.isFinite(y);\n\n    if (arrayIsFinite) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [minX, minY, maxX, maxY].every(Number.isFinite) ? [(minX + maxX) / 2, (minY + maxY) / 2] : null;\n}\nexport function getRadiusInCommon(radius, viewport, center) {\n  const {\n    unitsPerMeter\n  } = viewport.getDistanceScales(center);\n  return radius * unitsPerMeter[0];\n}\n//# sourceMappingURL=hexagon-aggregator.js.map","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { HexagonLayer } from 'deck.gl';\nimport React from 'react';\nimport { t, CategoricalColorNamespace } from '@superset-ui/core';\n\nimport { commonLayerProps, getAggFunc } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { hexToRGB } from '../../utils/colors';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o) {\n  return (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        label={t('Centroid (Longitude and Latitude): ')}\n        value={`(${o.coordinate[0]}, ${o.coordinate[1]})`}\n      />\n      <TooltipRow\n        // eslint-disable-next-line prefer-template\n        label={t('Height') + ': '}\n        value={`${o.object.elevationValue}`}\n      />\n    </div>\n  );\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const colorScale = CategoricalColorNamespace.getScale(fd.color_scheme);\n  const colorRange = colorScale.range().map(color => hexToRGB(color));\n  let data = payload.data.features;\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n  const aggFunc = getAggFunc(fd.js_agg_function, p => p.weight);\n\n  return new HexagonLayer({\n    id: `hex-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    radius: fd.grid_size,\n    extruded: fd.extruded,\n    colorRange,\n    outline: false,\n    getElevationValue: aggFunc,\n    getColorValue: aggFunc,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n","/* eslint-disable react/no-array-index-key */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PathLayer } from 'deck.gl';\nimport React from 'react';\nimport { commonLayerProps } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o) {\n  return (\n    o.object.extraProps && (\n      <div className=\"deckgl-tooltip\">\n        {Object.keys(o.object.extraProps).map((prop, index) => (\n          <TooltipRow\n            key={`prop-${index}`}\n            label={`${prop}: `}\n            value={`${o.object.extraProps[prop]}`}\n          />\n        ))}\n      </div>\n    )\n  );\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const c = fd.color_picker;\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  let data = payload.data.features.map(feature => ({\n    ...feature,\n    path: feature.path,\n    width: fd.line_width,\n    color: fixedColor,\n  }));\n\n  if (fd.js_data_mutator) {\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  return new PathLayer({\n    id: `path-layer-${fd.slice_id}`,\n    getColor: d => d.color,\n    getPath: d => d.path,\n    getWidth: d => d.width,\n    data,\n    rounded: true,\n    widthScale: 1,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data) {\n  let points = [];\n  data.forEach(d => {\n    points = points.concat(d.path);\n  });\n\n  return points;\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { roundDecimal } from './utils';\n\nexport const defaultViewport = {\n  bearing: 0,\n  latitude: 31.222656842808707,\n  longitude: 6.85236157047845,\n  pitch: 0,\n  zoom: 1,\n};\n\nconst METER_TO_MILE = 1609.34;\n\nexport function unitToRadius(unit, num) {\n  if (unit === 'square_m') {\n    return Math.sqrt(num / Math.PI);\n  }\n  if (unit === 'radius_m') {\n    return num;\n  }\n  if (unit === 'radius_km') {\n    return num * 1000;\n  }\n  if (unit === 'radius_miles') {\n    return num * METER_TO_MILE;\n  }\n  if (unit === 'square_km') {\n    return Math.sqrt(num / Math.PI) * 1000;\n  }\n  if (unit === 'square_miles') {\n    return Math.sqrt(num / Math.PI) * METER_TO_MILE;\n  }\n\n  return null;\n}\n\nexport const EARTH_CIRCUMFERENCE_KM = 40075.16;\nexport const MILES_PER_KM = 1.60934;\n\nexport function kmToPixels(kilometers, latitude, zoomLevel) {\n  // Algorithm from: https://wiki.openstreetmap.org/wiki/Zoom_levels\n  const latitudeRad = latitude * (Math.PI / 180);\n  // Seems like the zoomLevel is off by one\n  const kmPerPixel =\n    (EARTH_CIRCUMFERENCE_KM * Math.cos(latitudeRad)) / 2 ** (zoomLevel + 9);\n\n  return roundDecimal(kilometers / kmPerPixel, 2);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ScatterplotLayer } from 'deck.gl';\nimport React from 'react';\nimport { getMetricLabel, t } from '@superset-ui/core';\nimport { commonLayerProps } from '../common';\nimport { createCategoricalDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\nimport { unitToRadius } from '../../utils/geo';\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nfunction setTooltipContent(formData, verboseMap) {\n  return o => {\n    const label =\n      verboseMap?.[formData.point_radius_fixed.value] ||\n      getMetricLabel(formData.point_radius_fixed?.value);\n    return (\n      <div className=\"deckgl-tooltip\">\n        <TooltipRow\n          // eslint-disable-next-line prefer-template\n          label={t('Longitude and Latitude') + ': '}\n          value={`${o.object.position[0]}, ${o.object.position[1]}`}\n        />\n        {o.object.cat_color && (\n          <TooltipRow\n            // eslint-disable-next-line prefer-template\n            label={t('Category') + ': '}\n            value={`${o.object.cat_color}`}\n          />\n        )}\n        {o.object.metric && (\n          <TooltipRow label={`${label}: `} value={`${o.object.metric}`} />\n        )}\n      </div>\n    );\n  };\n}\n\nexport function getLayer(\n  formData,\n  payload,\n  onAddFilter,\n  setTooltip,\n  datasource,\n) {\n  const fd = formData;\n  const dataWithRadius = payload.data.features.map(d => {\n    let radius = unitToRadius(fd.point_unit, d.radius) || 10;\n    if (fd.multiplier) {\n      radius *= fd.multiplier;\n    }\n    if (d.color) {\n      return { ...d, radius };\n    }\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const color = [c.r, c.g, c.b, c.a * 255];\n\n    return { ...d, radius, color };\n  });\n\n  return new ScatterplotLayer({\n    id: `scatter-layer-${fd.slice_id}`,\n    data: dataWithRadius,\n    fp64: true,\n    getFillColor: d => d.color,\n    getRadius: d => d.radius,\n    radiusMinPixels: fd.min_radius || null,\n    radiusMaxPixels: fd.max_radius || null,\n    stroked: false,\n    ...commonLayerProps(\n      fd,\n      setTooltip,\n      setTooltipContent(fd, datasource?.verboseMap),\n    ),\n  });\n}\n\nexport default createCategoricalDeckGLComponent(getLayer, getPoints);\n"],"names":["getExploreLongUrl","formData","endpointType","allowOverflow","extraSearch","datasource","uri","URI","directory","getURIDirectory","search","Object","keys","forEach","key","form_data","object","cache","Set","JSON","stringify","value","has","parse","error","add","safeStringify","standalone","url","toString","length","viz_type","URL_IS_TOO_LONG_TO_SHARE","deck_grid","deck_screengrid","deck_path","deck_hex","deck_scatter","deck_geojson","deck_arc","deck_polygon","propTypes","PropTypes","payload","setControlValue","viewport","onAddFilter","onSelect","defaultProps","DeckMulti","React","constructor","props","super","containerRef","setTooltip","tooltip","current","this","state","subSlicesLayers","onViewportChange","bind","componentDidMount","loadLayers","UNSAFE_componentWillReceiveProps","nextProps","deck_slices","setState","data","slices","subslice","filters","extra_filters","subsliceCopy","SupersetClient","endpoint","then","json","layer","layerGenerators","slice_id","catch","render","height","width","layers","values","DeckGLContainer","ref","mapboxApiAccessToken","mapboxApiKey","mapStyle","mapbox_style","propertyMap","fillColor","color","fill","strokeColor","alterProps","propOverrides","newProps","k","hexToRGB","features","recurseGeoJson","node","extraProps","obj","geometry","newNode","properties","push","setTooltipContent","o","className","map","prop","index","label","getFillColor","feature","getLineColor","getLayer","fd","fc","fill_color_picker","sc","stroke_color_picker","r","g","b","a","jsFnMutator","js_data_mutator","sandboxedEval","GeoJsonLayer","id","filled","stroked","extruded","pointRadiusScale","point_radius_scale","getLineWidth","line_width","commonLayerProps","DeckGLGeoJson","autozoom","points","reduce","acc","bounds","geojsonExtent","fitViewport","t","coordinate","elevationValue","colorRange","CategoricalColorNamespace","color_scheme","range","aggFunc","getAggFunc","js_agg_function","p","weight","GridLayer","pickable","cellSize","grid_size","outline","getElevationValue","getColorValue","createDeckGLComponent","d","position","thirdPi","Math","PI","angles","pointX","pointY","nop","colorDomain","type","getColorWeight","colorAggregation","lowerPercentile","min","max","upperPercentile","colorScaleType","onSetColorDomain","elevationDomain","elevationRange","getElevationWeight","elevationAggregation","elevationLowerPercentile","elevationUpperPercentile","elevationScale","elevationScaleType","onSetElevationDomain","radius","coverage","hexagonAggregator","aggregationParams","attributes","centerLngLat","positions","size","getAccessor","i","minX","Infinity","minY","maxX","maxY","x","y","Number","isFinite","every","getPointsCenter","radiusCommon","center","unitsPerMeter","getDistanceScales","getRadiusInCommon","screenPoints","iterable","objectInfo","posIndex","screenCoord","projectFlat","source","log","newHexbin","dx","dy","x0","y0","x1","y1","hexbin","binsById","bins","n","isNaN","px","call","point","py","pj","round","pi","py1","abs","px1","pi2","pj2","px2","py2","bin","hexagon","angle","sin","cos","join","centers","j","mesh","fragment","slice","_","arguments","extent","hexagons","hex","unprojectFlat","getPosition","material","_filterData","optional","HexagonLayer","shouldUpdateState","changeFlags","somethingChanged","initializeState","cpuAggregator","getAggregator","getCellSize","aggregatorState","hexagonVertices","getAttributeManager","accessor","updateState","opts","oldVertices","propsOrDataChanged","context","getAttributes","layerData","vertices","convertLatLngToMeterOffset","updateRadiusAngle","Array","isArray","vertex0","vertex3","centroid","centroidFlat","metersPerUnit","vt","vtFlat","getPickingInfo","info","_onGetSublayerColor","cell","_onGetSublayerElevation","_getSublayerUpdateTriggers","getUpdateTriggers","renderLayers","transitions","SubLayerClass","getSubLayerClass","updateTriggers","diskResolution","getElevation","getSubLayerProps","layerName","TooltipRow","getScale","c","color_picker","fixedColor","path","PathLayer","getColor","getPath","getWidth","rounded","widthScale","concat","METER_TO_MILE","verboseMap","point_radius_fixed","getMetricLabel","cat_color","metric","dataWithRadius","unit","point_unit","num","sqrt","multiplier","ScatterplotLayer","fp64","getRadius","radiusMinPixels","min_radius","radiusMaxPixels","max_radius","createCategoricalDeckGLComponent"],"sourceRoot":""}