{"version":3,"file":"f7040762597a6cc8d618.chunk.js","mappings":"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","sources":["webpack://superset/./src/views/CRUD/tags/TagCard.tsx","webpack://superset/./src/views/CRUD/tags/TagList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { t, useTheme } from '@superset-ui/core';\nimport { CardStyles } from 'src/views/CRUD/utils';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ListViewCard from 'src/components/ListViewCard';\nimport Icons from 'src/components/Icons';\nimport { Tag } from 'src/views/CRUD/types';\nimport { deleteTags } from 'src/tags';\n\ninterface TagCardProps {\n  tag: Tag;\n  hasPerm: (name: string) => boolean;\n  bulkSelectEnabled: boolean;\n  refreshData: () => void;\n  loading: boolean;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  tagFilter?: string;\n  userId?: string | number;\n  showThumbnails?: boolean;\n}\n\nfunction TagCard({\n  tag,\n  hasPerm,\n  bulkSelectEnabled,\n  tagFilter,\n  refreshData,\n  userId,\n  addDangerToast,\n  addSuccessToast,\n  showThumbnails,\n}: TagCardProps) {\n  const canDelete = hasPerm('can_write');\n\n  const handleTagDelete = (tag: Tag) => {\n    deleteTags([tag], addSuccessToast, addDangerToast);\n    refreshData();\n  };\n\n  const theme = useTheme();\n  const menu = (\n    <Menu>\n      {canDelete && (\n        <Menu.Item>\n          <ConfirmStatusChange\n            title={t('Please confirm')}\n            description={\n              <>\n                {t('Are you sure you want to delete')} <b>{tag.name}</b>?\n              </>\n            }\n            onConfirm={() => handleTagDelete(tag)}\n          >\n            {confirmDelete => (\n              <div\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                onClick={confirmDelete}\n                data-test=\"dashboard-card-option-delete-button\"\n              >\n                <Icons.Trash iconSize=\"l\" /> {t('Delete')}\n              </div>\n            )}\n          </ConfirmStatusChange>\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n  return (\n    <CardStyles>\n      <ListViewCard\n        title={tag.name}\n        cover={\n          !isFeatureEnabled(FeatureFlag.THUMBNAILS) || !showThumbnails ? (\n            <></>\n          ) : null\n        }\n        url={undefined}\n        linkComponent={Link}\n        imgFallbackURL=\"/static/assets/images/dashboard-card-fallback.svg\"\n        description={t('Modified %s', tag.changed_on_delta_humanized)}\n        actions={\n          <ListViewCard.Actions\n            onClick={e => {\n              e.stopPropagation();\n              e.preventDefault();\n            }}\n          >\n            <AntdDropdown overlay={menu}>\n              <Icons.MoreVert iconColor={theme.colors.grayscale.base} />\n            </AntdDropdown>\n          </ListViewCard.Actions>\n        }\n      />\n    </CardStyles>\n  );\n}\n\nexport default TagCard;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport React, { useMemo, useCallback } from 'react';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport {\n  createFetchRelated,\n  createErrorHandler,\n  Actions,\n} from 'src/views/CRUD/utils';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport SubMenu, { SubMenuProps } from 'src/views/components/SubMenu';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport { dangerouslyGetItemDoNotUse } from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport FacePile from 'src/components/FacePile';\nimport { Link } from 'react-router-dom';\nimport { deleteTags } from 'src/tags';\nimport { Tag as AntdTag } from 'antd';\nimport { Tag } from '../types';\nimport TagCard from './TagCard';\n\nconst PAGE_SIZE = 25;\n\ninterface TagListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction TagList(props: TagListProps) {\n  const {\n    addDangerToast,\n    addSuccessToast,\n    user: { userId },\n  } = props;\n\n  const {\n    state: {\n      loading,\n      resourceCount: tagCount,\n      resourceCollection: tags,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Tag>('tag', t('tag'), addDangerToast);\n\n  // TODO: Fix usage of localStorage keying on the user id\n  const userKey = dangerouslyGetItemDoNotUse(userId?.toString(), null);\n\n  const canDelete = hasPerm('can_write');\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n\n  function handleTagsDelete(\n    tags: Tag[],\n    callback: (text: string) => void,\n    error: (text: string) => void,\n  ) {\n    // TODO what permissions need to be checked here?\n    deleteTags(tags, callback, error);\n    refreshData();\n  }\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { name: tagName },\n          },\n        }: any) => (\n          <AntdTag>\n            <Link to={`/superset/all_entities/?tags=${tagName}`}>\n              {tagName}\n            </Link>\n          </AntdTag>\n        ),\n        Header: t('Name'),\n        accessor: 'name',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => <span className=\"no-wrap\">{changedOn}</span>,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) => (createdBy ? <FacePile users={[createdBy]} /> : ''),\n        Header: t('Created by'),\n        accessor: 'created_by',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleDelete = () =>\n            handleTagsDelete([original], addSuccessToast, addDangerToast);\n          return (\n            <Actions className=\"actions\">\n              {canDelete && (\n                <ConfirmStatusChange\n                  title={t('Please confirm')}\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{original.dashboard_title}</b>?\n                    </>\n                  }\n                  onConfirm={handleDelete}\n                >\n                  {confirmDelete => (\n                    <Tooltip\n                      id=\"delete-action-tooltip\"\n                      title={t('Delete')}\n                      placement=\"bottom\"\n                    >\n                      <span\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"action-button\"\n                        onClick={confirmDelete}\n                      >\n                        <Icons.Trash data-test=\"dashboard-list-trash-icon\" />\n                      </span>\n                    </Tooltip>\n                  )}\n                </ConfirmStatusChange>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canDelete,\n        disableSortBy: true,\n      },\n    ],\n    [userId, canDelete, refreshData, addSuccessToast, addDangerToast],\n  );\n\n  const filters: Filters = useMemo(() => {\n    const filters_list = [\n      {\n        Header: t('Created by'),\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'tag',\n          'created_by',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching tag created by values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ] as Filters;\n    return filters_list;\n  }, [addDangerToast, props.user]);\n\n  const sortTypes = [\n    {\n      desc: false,\n      id: 'name',\n      label: t('Alphabetical'),\n      value: 'alphabetical',\n    },\n    {\n      desc: true,\n      id: 'changed_on_delta_humanized',\n      label: t('Recently modified'),\n      value: 'recently_modified',\n    },\n    {\n      desc: false,\n      id: 'changed_on_delta_humanized',\n      label: t('Least recently modified'),\n      value: 'least_recently_modified',\n    },\n  ];\n\n  const renderCard = useCallback(\n    (tag: Tag) => (\n      <TagCard\n        tag={tag}\n        hasPerm={hasPerm}\n        bulkSelectEnabled={bulkSelectEnabled}\n        refreshData={refreshData}\n        showThumbnails={\n          userKey\n            ? userKey.thumbnails\n            : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n        }\n        userId={userId}\n        loading={loading}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n      />\n    ),\n    [\n      addDangerToast,\n      addSuccessToast,\n      bulkSelectEnabled,\n      hasPerm,\n      loading,\n      userId,\n      refreshData,\n      userKey,\n    ],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect,\n    });\n  }\n\n  const handleBulkDelete = (tagsToDelete: Tag[]) =>\n    handleTagsDelete(tagsToDelete, addSuccessToast, addDangerToast);\n\n  return (\n    <>\n      <SubMenu name={t('Tags')} buttons={subMenuButtons} />\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected tags?')}\n        onConfirm={handleBulkDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              type: 'danger',\n              onSelect: confirmDelete,\n            });\n          }\n          return (\n            <>\n              <ListView<Tag>\n                bulkActions={bulkActions}\n                bulkSelectEnabled={bulkSelectEnabled}\n                cardSortSelectOptions={sortTypes}\n                className=\"dashboard-list-view\"\n                columns={columns}\n                count={tagCount}\n                data={tags.filter(tag => !tag.name.includes(':'))}\n                disableBulkSelect={toggleBulkSelect}\n                fetchData={fetchData}\n                filters={filters}\n                initialSort={initialSort}\n                loading={loading}\n                pageSize={PAGE_SIZE}\n                showThumbnails={\n                  userKey\n                    ? userKey.thumbnails\n                    : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n                }\n                renderCard={renderCard}\n                defaultViewMode={\n                  isFeatureEnabled(FeatureFlag.LISTVIEWS_DEFAULT_CARD_VIEW)\n                    ? 'card'\n                    : 'table'\n                }\n              />\n            </>\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(TagList);\n"],"names":["tag","hasPerm","bulkSelectEnabled","tagFilter","refreshData","userId","addDangerToast","addSuccessToast","showThumbnails","canDelete","theme","useTheme","menu","Menu","ConfirmStatusChange","title","t","description","name","onConfirm","deleteTags","handleTagDelete","confirmDelete","role","tabIndex","className","onClick","Icons","iconSize","ListViewCard","cover","isFeatureEnabled","FeatureFlag","url","undefined","linkComponent","Link","imgFallbackURL","changed_on_delta_humanized","actions","e","stopPropagation","preventDefault","overlay","iconColor","colors","grayscale","base","withToasts","props","user","state","loading","resourceCount","tagCount","resourceCollection","tags","fetchData","toggleBulkSelect","useListViewResource","userKey","dangerouslyGetItemDoNotUse","toString","initialSort","id","desc","handleTagsDelete","callback","error","columns","useMemo","Cell","row","original","tagName","to","Header","accessor","changedOn","size","created_by","createdBy","FacePile","users","disableSortBy","dashboard_title","Tooltip","placement","hidden","filters","input","operator","FilterOperator","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","sortTypes","label","value","renderCard","useCallback","thumbnails","subMenuButtons","push","buttonStyle","SubMenu","buttons","tagsToDelete","bulkActions","key","type","onSelect","ListView","cardSortSelectOptions","count","data","filter","disableBulkSelect","pageSize","defaultViewMode"],"sourceRoot":""}