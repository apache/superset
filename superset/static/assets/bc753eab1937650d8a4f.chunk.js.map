{"version":3,"file":"bc753eab1937650d8a4f.chunk.js","mappings":"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","sources":["webpack://superset/./packages/superset-ui-core/src/chart/components/reactify.tsx","webpack://superset/./packages/superset-ui-core/src/color/index.ts","webpack://superset/./packages/superset-ui-core/src/dimension/computeMaxFontSize.ts","webpack://superset/./packages/superset-ui-core/src/dimension/getTextDimension.ts","webpack://superset/./packages/superset-ui-core/src/dimension/svg/LazyFactory.ts","webpack://superset/./packages/superset-ui-core/src/dimension/svg/constants.ts","webpack://superset/./packages/superset-ui-core/src/dimension/svg/createHiddenSvgNode.ts","webpack://superset/./packages/superset-ui-core/src/dimension/svg/createTextNode.ts","webpack://superset/./packages/superset-ui-core/src/dimension/svg/factories.ts","webpack://superset/./packages/superset-ui-core/src/dimension/svg/getBBoxCeil.ts","webpack://superset/./packages/superset-ui-core/src/dimension/svg/updateTextNode.ts","webpack://superset/./packages/superset-ui-core/src/utils/promiseTimeout.ts","webpack://superset/./packages/superset-ui-core/src/utils/lruCache.ts","webpack://superset/./packages/superset-ui-core/src/query/types/PostProcessing.ts","webpack://superset/./packages/superset-ui-core/src/query/types/Time.ts","webpack://superset/./packages/superset-ui-core/src/translation/types/jed.ts","webpack://superset/./packages/superset-ui-core/src/translation/types/index.ts","webpack://superset/./packages/superset-ui-core/src/connection/types.ts","webpack://superset/./packages/superset-ui-core/src/query/api/legacy/fetchExploreJson.ts","webpack://superset/./packages/superset-ui-core/src/query/api/legacy/getFormData.ts","webpack://superset/./packages/superset-ui-core/src/query/api/legacy/getDatasourceMetadata.ts","webpack://superset/./packages/superset-ui-core/src/query/api/legacy/types.ts","webpack://superset/./packages/superset-ui-core/src/query/api/v1/index.ts","webpack://superset/./packages/superset-ui-core/src/number-format/factories/createSiAtMostNDigitFormatter.ts","webpack://superset/./packages/superset-ui-core/src/dimension/getMultipleTextDimensions.ts","webpack://superset/./packages/superset-ui-core/src/dimension/mergeMargin.ts","webpack://superset/./packages/superset-ui-core/src/dimension/types.ts","webpack://superset/./packages/superset-ui-core/src/validator/validateInteger.ts","webpack://superset/./packages/superset-ui-core/src/chart/clients/ChartClient.ts","webpack://superset/./packages/superset-ui-core/src/chart/components/ChartDataProvider.tsx","webpack://superset/./packages/superset-ui-core/src/chart/types/TransformFunction.ts","webpack://superset/./packages/superset-ui-core/src/chart/types/QueryResponse.ts","webpack://superset/./packages/superset-ui-core/src/chart-composition/ChartFrame.tsx","webpack://superset/./packages/superset-ui-core/src/chart-composition/legend/WithLegend.tsx","webpack://superset/./packages/superset-ui-core/src/chart-composition/tooltip/TooltipFrame.tsx","webpack://superset/./packages/superset-ui-core/src/chart-composition/tooltip/TooltipTable.tsx","webpack://superset/./packages/superset-ui-core/src/query/types/Query.ts","webpack://superset/./packages/superset-ui-core/src/utils/ensureIsInt.ts","webpack://superset/./packages/superset-ui-core/src/utils/random.ts","webpack://superset/./packages/superset-ui-core/src/utils/typedMemo.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\n// TODO: Note that id and className can collide between Props and ReactifyProps\n// leading to (likely) unexpected behaviors. We should either require Props to not\n// contain an id/className, or not combine them (via intersection), instead preferring\n// wrapping (composition). As an example:\n// interface MyProps {\n//   id: number;\n// }\n// function myRender(container: HTMLDivElement, props: Readonly<MyProps>): void {\n//   props.id // unusable: id is string & number\n// }\n// new (reactify(myRender))({ id: 5 }); // error: id has to be string & number\n\nexport type ReactifyProps = {\n  id?: string;\n  className?: string;\n};\n\n// TODO: add more React lifecycle callbacks as needed\nexport type LifeCycleCallbacks = {\n  componentWillUnmount?: () => void;\n};\n\nexport interface RenderFuncType<Props> {\n  (container: HTMLDivElement, props: Readonly<Props & ReactifyProps>): void;\n  displayName?: string;\n  defaultProps?: Partial<Props & ReactifyProps>;\n  propTypes?: React.WeakValidationMap<Props & ReactifyProps>;\n}\n\nexport default function reactify<Props extends object>(\n  renderFn: RenderFuncType<Props>,\n  callbacks?: LifeCycleCallbacks,\n): React.ComponentClass<Props & ReactifyProps> {\n  class ReactifiedComponent extends React.Component<Props & ReactifyProps> {\n    container?: HTMLDivElement;\n\n    constructor(props: Props & ReactifyProps) {\n      super(props);\n      this.setContainerRef = this.setContainerRef.bind(this);\n    }\n\n    componentDidMount() {\n      this.execute();\n    }\n\n    componentDidUpdate() {\n      this.execute();\n    }\n\n    componentWillUnmount() {\n      this.container = undefined;\n      if (callbacks?.componentWillUnmount) {\n        callbacks.componentWillUnmount.bind(this)();\n      }\n    }\n\n    setContainerRef(ref: HTMLDivElement) {\n      this.container = ref;\n    }\n\n    execute() {\n      if (this.container) {\n        renderFn(this.container, this.props);\n      }\n    }\n\n    render() {\n      const { id, className } = this.props;\n\n      return <div ref={this.setContainerRef} id={id} className={className} />;\n    }\n  }\n\n  const ReactifiedClass: React.ComponentClass<Props & ReactifyProps> =\n    ReactifiedComponent;\n\n  if (renderFn.displayName) {\n    ReactifiedClass.displayName = renderFn.displayName;\n  }\n  // eslint-disable-next-line react/forbid-foreign-prop-types\n  if (renderFn.propTypes) {\n    ReactifiedClass.propTypes = {\n      ...ReactifiedClass.propTypes,\n      ...renderFn.propTypes,\n    };\n  }\n  if (renderFn.defaultProps) {\n    ReactifiedClass.defaultProps = renderFn.defaultProps;\n  }\n\n  return ReactifiedComponent;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport * as CategoricalColorNamespace from './CategoricalColorNamespace';\n\nexport { CategoricalColorNamespace };\nexport { default as CategoricalColorScale } from './CategoricalColorScale';\nexport { default as CategoricalScheme } from './CategoricalScheme';\nexport * from './CategoricalScheme';\nexport { default as getCategoricalSchemeRegistry } from './CategoricalSchemeRegistrySingleton';\nexport { default as ColorScheme } from './ColorScheme';\nexport * from './ColorScheme';\nexport { default as getSequentialSchemeRegistry } from './SequentialSchemeRegistrySingleton';\nexport { default as SequentialScheme } from './SequentialScheme';\nexport * from './SequentialScheme';\nexport { default as ColorSchemeRegistry } from './ColorSchemeRegistry';\nexport * from './colorSchemes';\nexport * from './utils';\nexport {\n  default as getSharedLabelColor,\n  SharedLabelColor,\n  SharedLabelColorSource,\n} from './SharedLabelColorSingleton';\n\nexport const BRAND_COLOR = '#00A699';\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport getTextDimension, { GetTextDimensionInput } from './getTextDimension';\nimport { Dimension } from './types';\n\nfunction decreaseSizeUntil(\n  startSize: number,\n  computeDimension: (size: number) => Dimension,\n  condition: (dimension: Dimension) => boolean,\n): number {\n  let size = startSize;\n  let dimension = computeDimension(size);\n\n  while (!condition(dimension)) {\n    size -= 1;\n\n    // Here if the size goes below zero most likely is because it\n    // has additional style applied in which case we assume the user\n    // knows what it's doing and we just let them use that.\n    // Visually it works, although it could have another\n    // check in place.\n    if (size < 0) {\n      size = startSize;\n      break;\n    }\n\n    dimension = computeDimension(size);\n  }\n\n  return size;\n}\n\nexport default function computeMaxFontSize(\n  input: GetTextDimensionInput & {\n    maxWidth?: number;\n    maxHeight?: number;\n    idealFontSize?: number;\n  },\n) {\n  const { idealFontSize, maxWidth, maxHeight, style, ...rest } = input;\n\n  let size: number;\n  if (idealFontSize !== undefined && idealFontSize !== null) {\n    size = idealFontSize;\n  } else if (maxHeight === undefined || maxHeight === null) {\n    throw new Error(\n      'You must specify at least one of maxHeight or idealFontSize',\n    );\n  } else {\n    size = Math.floor(maxHeight);\n  }\n\n  function computeDimension(fontSize: number) {\n    return getTextDimension({\n      ...rest,\n      style: { ...style, fontSize: `${fontSize}px` },\n    });\n  }\n\n  if (maxWidth !== undefined && maxWidth !== null) {\n    size = decreaseSizeUntil(\n      size,\n      computeDimension,\n      dim => dim.width > 0 && dim.width <= maxWidth,\n    );\n  }\n\n  if (maxHeight !== undefined && maxHeight !== null) {\n    size = decreaseSizeUntil(\n      size,\n      computeDimension,\n      dim => dim.height > 0 && dim.height <= maxHeight,\n    );\n  }\n\n  return size;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TextStyle, Dimension } from './types';\nimport updateTextNode from './svg/updateTextNode';\nimport getBBoxCeil from './svg/getBBoxCeil';\nimport { hiddenSvgFactory, textFactory } from './svg/factories';\n\nexport interface GetTextDimensionInput {\n  className?: string;\n  container?: HTMLElement;\n  style?: TextStyle;\n  text: string;\n}\n\nexport default function getTextDimension(\n  input: GetTextDimensionInput,\n  defaultDimension?: Dimension,\n): Dimension {\n  const { text, className, style, container } = input;\n\n  // Empty string\n  if (text.length === 0) {\n    return { height: 0, width: 0 };\n  }\n\n  const svgNode = hiddenSvgFactory.createInContainer(container);\n  const textNode = textFactory.createInContainer(svgNode);\n  updateTextNode(textNode, { className, style, text });\n  const dimension = getBBoxCeil(textNode, defaultDimension);\n\n  // The nodes are added to the DOM briefly only to make getBBox works.\n  // (If not added to DOM getBBox will always return 0x0.)\n  // After that the svg nodes are not needed.\n  // We delay its removal in case there are subsequent calls to this function\n  // that can reuse the svg nodes.\n  // Experiments have shown that reusing existing nodes\n  // instead of deleting and adding new ones can save lot of time.\n  setTimeout(() => {\n    textFactory.removeFromContainer(svgNode);\n    hiddenSvgFactory.removeFromContainer(container);\n  }, 500);\n\n  return dimension;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport default class LazyFactory<T extends HTMLElement | SVGElement> {\n  private activeNodes = new Map<\n    HTMLElement | SVGElement,\n    {\n      counter: number;\n      node: T;\n    }\n  >();\n\n  private factoryFn: () => T;\n\n  constructor(factoryFn: () => T) {\n    this.factoryFn = factoryFn;\n  }\n\n  createInContainer(container: HTMLElement | SVGElement = document.body) {\n    if (this.activeNodes.has(container)) {\n      const entry = this.activeNodes.get(container)!;\n      entry.counter += 1;\n\n      return entry.node;\n    }\n\n    const node = this.factoryFn();\n    container.append(node);\n    this.activeNodes.set(container, { counter: 1, node });\n\n    return node;\n  }\n\n  removeFromContainer(container: HTMLElement | SVGElement = document.body) {\n    if (this.activeNodes.has(container)) {\n      const entry = this.activeNodes.get(container)!;\n      entry.counter -= 1;\n      if (entry.counter === 0) {\n        container.removeChild(entry.node);\n        this.activeNodes.delete(container);\n      }\n    }\n  }\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SVG_NS } from './constants';\n\nexport default function createHiddenSvgNode() {\n  const svgNode = document.createElementNS(SVG_NS, 'svg');\n  svgNode.style.position = 'absolute'; // so it won't disrupt page layout\n  svgNode.style.top = '-100%';\n  svgNode.style.left = '-100%';\n  svgNode.style.width = '0'; // no dimensions\n  svgNode.style.height = '0';\n  svgNode.style.opacity = '0'; // not visible\n  svgNode.style.pointerEvents = 'none'; // won't capture mouse events\n\n  return svgNode;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SVG_NS } from './constants';\n\nexport default function createTextNode() {\n  return document.createElementNS(SVG_NS, 'text');\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport LazyFactory from './LazyFactory';\nimport createHiddenSvgNode from './createHiddenSvgNode';\nimport createTextNode from './createTextNode';\n\nexport const hiddenSvgFactory = new LazyFactory(createHiddenSvgNode);\nexport const textFactory = new LazyFactory(createTextNode);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Dimension } from '../types';\n\nconst DEFAULT_DIMENSION = { height: 20, width: 100 };\n\nexport default function getBBoxCeil(\n  node: SVGGraphicsElement,\n  defaultDimension: Dimension = DEFAULT_DIMENSION,\n) {\n  const { width, height } = node.getBBox ? node.getBBox() : defaultDimension;\n\n  return {\n    height: Math.ceil(height),\n    width: Math.ceil(width),\n  };\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TextStyle } from '../types';\n\nconst STYLE_FIELDS: (keyof TextStyle)[] = [\n  'font',\n  'fontWeight',\n  'fontStyle',\n  'fontSize',\n  'fontFamily',\n  'letterSpacing',\n];\n\nexport default function updateTextNode(\n  node: SVGTextElement,\n  {\n    className,\n    style = {},\n    text,\n  }: {\n    className?: string;\n    style?: TextStyle;\n    text?: string;\n  } = {},\n) {\n  const textNode = node;\n\n  if (textNode.textContent !== text) {\n    textNode.textContent = typeof text === 'undefined' ? null : text;\n  }\n  if (textNode.getAttribute('class') !== className) {\n    textNode.setAttribute('class', className ?? '');\n  }\n\n  // Clear style\n  // Note: multi-word property names are hyphenated and not camel-cased.\n  textNode.style.removeProperty('font');\n  textNode.style.removeProperty('font-weight');\n  textNode.style.removeProperty('font-style');\n  textNode.style.removeProperty('font-size');\n  textNode.style.removeProperty('font-family');\n  textNode.style.removeProperty('letter-spacing');\n\n  // Apply new style\n  // Note: the font field will auto-populate other font fields when applicable.\n  STYLE_FIELDS.filter(\n    (field: keyof TextStyle) =>\n      typeof style[field] !== 'undefined' && style[field] !== null,\n  ).forEach((field: keyof TextStyle) => {\n    textNode.style[field] = `${style[field]}`;\n  });\n\n  return textNode;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/** setTimeout that returns a promise */\nexport default function promiseTimeout<T>(\n  /** A function to be executed after the timer expires. */\n  func: (...args: unknown[]) => T,\n  /** The time, in milliseconds (thousandths of a second), the timer should wait before the specified function or code is executed. If this parameter is omitted, a value of 0 is used, meaning execute \"immediately\", or more accurately, as soon as possible.  */\n  delay?: number,\n) {\n  return new Promise<T>(resolve => {\n    setTimeout(() => {\n      resolve(func());\n    }, delay);\n  });\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nclass LRUCache<T> {\n  private cache: Map<string, T>;\n\n  readonly capacity: number;\n\n  constructor(capacity: number) {\n    if (capacity < 1) {\n      throw new Error('The capacity in LRU must be greater than 0.');\n    }\n    this.capacity = capacity;\n    this.cache = new Map<string, T>();\n  }\n\n  public has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  public get(key: string): T | undefined {\n    // Prevent runtime errors\n    if (typeof key !== 'string') {\n      throw new TypeError('The LRUCache key must be string.');\n    }\n\n    if (this.cache.has(key)) {\n      const tmp = this.cache.get(key) as T;\n      this.cache.delete(key);\n      this.cache.set(key, tmp);\n      return tmp;\n    }\n    return undefined;\n  }\n\n  public set(key: string, value: T) {\n    // Prevent runtime errors\n    if (typeof key !== 'string') {\n      throw new TypeError('The LRUCache key must be string.');\n    }\n    if (this.cache.size >= this.capacity) {\n      this.cache.delete(this.cache.keys().next().value);\n    }\n    this.cache.set(key, value);\n  }\n\n  public clear() {\n    this.cache.clear();\n  }\n\n  public get size() {\n    return this.cache.size;\n  }\n}\n\nexport function lruCache<T>(capacity = 100) {\n  return new LRUCache<T>(capacity);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { JsonObject } from '../../connection';\nimport { TimeGranularity } from '../../time-format';\nimport { RollingType, ComparisonType } from './AdvancedAnalytics';\n\nexport type NumpyFunction =\n  | 'average'\n  | 'argmin'\n  | 'argmax'\n  | 'count'\n  | 'count_nonzero'\n  | 'cumsum'\n  | 'cumprod'\n  | 'max'\n  | 'mean'\n  | 'median'\n  | 'nansum'\n  | 'nanmin'\n  | 'nanmax'\n  | 'nanmean'\n  | 'nanmedian'\n  | 'nanpercentile'\n  | 'min'\n  | 'percentile'\n  | 'prod'\n  | 'product'\n  | 'std'\n  | 'sum'\n  | 'var';\n\nexport enum PandasAxis {\n  Row = 0,\n  Column = 1,\n}\n\nexport interface Aggregates {\n  /**\n   * The name of the generated aggregate column.\n   */\n  [colname: string]: {\n    operator: NumpyFunction;\n    /**\n     * the name of the column to generate aggregates from.\n     */\n    column?: string;\n    options?: JsonObject;\n  };\n}\n\nexport type DefaultPostProcessing = undefined;\n\ninterface _PostProcessingAggregation {\n  operation: 'aggregation';\n  options: {\n    groupby: string[];\n    aggregates: Aggregates;\n  };\n}\nexport type PostProcessingAggregation =\n  | _PostProcessingAggregation\n  | DefaultPostProcessing;\n\nexport type BoxPlotQueryObjectWhiskerType = 'tukey' | 'min/max' | 'percentile';\ninterface _PostProcessingBoxplot {\n  operation: 'boxplot';\n  options: {\n    groupby: string[];\n    metrics: string[];\n    whisker_type: BoxPlotQueryObjectWhiskerType;\n    percentiles?: [number, number];\n  };\n}\nexport type PostProcessingBoxplot =\n  | _PostProcessingBoxplot\n  | DefaultPostProcessing;\n\ninterface _PostProcessingContribution {\n  operation: 'contribution';\n  options?: {\n    orientation?: 'row' | 'column';\n    columns?: string[];\n    rename_columns?: string[];\n  };\n}\nexport type PostProcessingContribution =\n  | _PostProcessingContribution\n  | DefaultPostProcessing;\n\ninterface _PostProcessingPivot {\n  operation: 'pivot';\n  options: {\n    aggregates: Aggregates;\n    column_fill_value?: string;\n    columns: string[];\n    combine_value_with_metric?: boolean;\n    drop_missing_columns?: boolean;\n    index: string[];\n    marginal_distribution_name?: string;\n    marginal_distributions?: boolean;\n    metric_fill_value?: any;\n  };\n}\nexport type PostProcessingPivot = _PostProcessingPivot | DefaultPostProcessing;\n\ninterface _PostProcessingProphet {\n  operation: 'prophet';\n  options: {\n    time_grain: TimeGranularity | undefined;\n    periods: number;\n    confidence_interval: number;\n    yearly_seasonality?: boolean | number;\n    weekly_seasonality?: boolean | number;\n    daily_seasonality?: boolean | number;\n  };\n}\nexport type PostProcessingProphet =\n  | _PostProcessingProphet\n  | DefaultPostProcessing;\n\ninterface _PostProcessingDiff {\n  operation: 'diff';\n  options: {\n    columns: string[];\n    periods: number;\n    axis: PandasAxis;\n  };\n}\nexport type PostProcessingDiff = _PostProcessingDiff | DefaultPostProcessing;\n\ninterface _PostProcessingRolling {\n  operation: 'rolling';\n  options: {\n    rolling_type: RollingType;\n    window: number;\n    min_periods: number;\n    columns: string[];\n  };\n}\nexport type PostProcessingRolling =\n  | _PostProcessingRolling\n  | DefaultPostProcessing;\n\ninterface _PostProcessingCum {\n  operation: 'cum';\n  options: {\n    columns: string[];\n    operator: NumpyFunction;\n  };\n}\nexport type PostProcessingCum = _PostProcessingCum | DefaultPostProcessing;\n\nexport interface _PostProcessingCompare {\n  operation: 'compare';\n  options: {\n    source_columns: string[];\n    compare_columns: string[];\n    compare_type: Omit<ComparisonType, ComparisonType.Values>;\n    drop_original_columns: boolean;\n  };\n}\nexport type PostProcessingCompare =\n  | _PostProcessingCompare\n  | DefaultPostProcessing;\n\ninterface _PostProcessingSort {\n  operation: 'sort';\n  options: {\n    is_sort_index?: boolean;\n    by?: string[] | string;\n    ascending?: boolean[] | boolean;\n  };\n}\nexport type PostProcessingSort = _PostProcessingSort | DefaultPostProcessing;\n\ninterface _PostProcessingResample {\n  operation: 'resample';\n  options: {\n    method: string;\n    rule: string;\n    fill_value?: number | null;\n  };\n}\nexport type PostProcessingResample =\n  | _PostProcessingResample\n  | DefaultPostProcessing;\n\ninterface _PostProcessingRename {\n  operation: 'rename';\n  options: {\n    columns: Record<string, string | null>;\n    inplace?: boolean;\n    level?: number | string;\n  };\n}\nexport type PostProcessingRename =\n  | _PostProcessingRename\n  | DefaultPostProcessing;\n\ninterface _PostProcessingFlatten {\n  operation: 'flatten';\n  options?: {\n    reset_index?: boolean;\n    drop_levels?: number[] | string[];\n  };\n}\nexport type PostProcessingFlatten =\n  | _PostProcessingFlatten\n  | DefaultPostProcessing;\n\n/**\n * Parameters for chart data postprocessing.\n * See superset/utils/pandas_processing.py.\n */\nexport type PostProcessingRule =\n  | PostProcessingAggregation\n  | PostProcessingBoxplot\n  | PostProcessingContribution\n  | PostProcessingPivot\n  | PostProcessingProphet\n  | PostProcessingDiff\n  | PostProcessingRolling\n  | PostProcessingCum\n  | PostProcessingCompare\n  | PostProcessingSort\n  | PostProcessingResample\n  | PostProcessingRename\n  | PostProcessingFlatten;\n\nexport function isPostProcessingAggregation(\n  rule?: PostProcessingRule,\n): rule is PostProcessingAggregation {\n  return rule?.operation === 'aggregation';\n}\n\nexport function isPostProcessingBoxplot(\n  rule?: PostProcessingRule,\n): rule is PostProcessingBoxplot {\n  return rule?.operation === 'boxplot';\n}\n\nexport function isPostProcessingContribution(\n  rule?: PostProcessingRule,\n): rule is PostProcessingContribution {\n  return rule?.operation === 'contribution';\n}\n\nexport function isPostProcessingPivot(\n  rule?: PostProcessingRule,\n): rule is PostProcessingPivot {\n  return rule?.operation === 'pivot';\n}\n\nexport function isPostProcessingProphet(\n  rule?: PostProcessingRule,\n): rule is PostProcessingProphet {\n  return rule?.operation === 'prophet';\n}\n\nexport function isPostProcessingDiff(\n  rule?: PostProcessingRule,\n): rule is PostProcessingDiff {\n  return rule?.operation === 'diff';\n}\n\nexport function isPostProcessingRolling(\n  rule?: PostProcessingRule,\n): rule is PostProcessingRolling {\n  return rule?.operation === 'rolling';\n}\n\nexport function isPostProcessingCum(\n  rule?: PostProcessingRule,\n): rule is PostProcessingCum {\n  return rule?.operation === 'cum';\n}\n\nexport function isPostProcessingCompare(\n  rule?: PostProcessingRule,\n): rule is PostProcessingCompare {\n  return rule?.operation === 'compare';\n}\n\nexport function isPostProcessingSort(\n  rule?: PostProcessingRule,\n): rule is PostProcessingSort {\n  return rule?.operation === 'sort';\n}\n\nexport function isPostProcessingResample(\n  rule?: PostProcessingRule,\n): rule is PostProcessingResample {\n  return rule?.operation === 'resample';\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { QueryObject } from './Query';\n\nexport type TimeRange = {\n  /** Time range of the query [from, to] */\n  time_range?: string;\n  since?: string;\n  until?: string;\n};\n\nexport type TimeColumnConfigKey =\n  | '__time_col'\n  | '__time_grain'\n  | '__time_range'\n  | '__granularity';\n\nexport type AppliedTimeExtras = Partial<\n  Record<TimeColumnConfigKey, keyof QueryObject>\n>;\n\nexport default {};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Translations for a language in the format of { key: [singular, plural, ...]}.\n */\nexport type Translations = {\n  [key: string]: ReadonlyArray<string>;\n};\n\nexport interface DomainConfig {\n  domain: string;\n  lang: string;\n  // eslint-disable-next-line camelcase\n  plural_forms: string;\n}\n\nexport type DomainData = { '': DomainConfig } & {\n  [key: string]: ReadonlyArray<string> | DomainConfig;\n};\n\nexport interface JedOptions {\n  domain: string;\n  // eslint-disable-next-line camelcase\n  locale_data: {\n    [domain: string]: DomainData;\n  };\n}\n\nexport interface Jed {\n  translate(input: string): Jed;\n\n  ifPlural(value: number, plural: string): Jed;\n\n  fetch(...args: unknown[]): string;\n\n  options: JedOptions;\n}\n\nexport default {};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Jed as BaseJed, JedOptions, DomainData, Translations } from './jed';\n\nexport * from './jed';\nexport { default as __hack_reexport_jed } from './jed';\n\n/**\n * Superset supported languages.\n */\nexport type Locale =\n  | 'de'\n  | 'en'\n  | 'es'\n  | 'fr'\n  | 'it'\n  | 'ja'\n  | 'ko'\n  | 'pt'\n  | 'pt_BR'\n  | 'ru'\n  | 'zh'; // supported locales in Superset\n\n/**\n * Language pack provided to `jed`.\n */\nexport type LanguagePack = JedOptions & {\n  // eslint-disable-next-line camelcase\n  locale_data: {\n    superset: DomainData & {\n      '': {\n        domain: 'superset';\n        lang: Locale;\n        // eslint-disable-next-line camelcase\n        plural_forms: string;\n      };\n    };\n  };\n};\n\nexport interface Jed extends BaseJed {\n  options: LanguagePack;\n}\n\n/**\n * Config options for Translator class.\n */\nexport interface TranslatorConfig {\n  languagePack?: LanguagePack;\n}\n\n/**\n * Key-value mapping of translation key and the translations.\n */\nexport type LocaleData = Partial<Record<Locale, Translations>>;\n\nexport default {};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport SupersetClientClass from './SupersetClientClass';\n\nexport type Body = RequestInit['body'];\nexport type Cache = RequestInit['cache'];\nexport type Credentials = RequestInit['credentials'];\nexport type Endpoint = string;\nexport type FetchRetryOptions = {\n  retries?: number;\n  retryDelay?:\n    | number\n    | ((attempt: number, error: Error, response: Response) => number);\n  retryOn?:\n    | number[]\n    | ((attempt: number, error: Error, response: Response) => boolean);\n};\nexport type Headers = { [k: string]: string };\nexport type Host = string;\n\nexport type JsonPrimitive = string | number | boolean | null;\n/**\n * More strict JSON value types. If this fails to satisfy TypeScript when using\n * as function arguments, use `JsonObject` instead. `StrictJsonObject` helps make\n * sure all values are plain objects, but it does not accept specific types when\n * used as function arguments.\n * (Ref: https://github.com/microsoft/TypeScript/issues/15300).\n */\nexport type StrictJsonValue =\n  | JsonPrimitive\n  | StrictJsonObject\n  | StrictJsonArray;\nexport type StrictJsonArray = StrictJsonValue[];\n/**\n * More strict JSON objects that makes sure all values are plain objects.\n * If this fails to satisfy TypeScript when using as function arguments,\n * use `JsonObject` instead.\n * (Ref: https://github.com/microsoft/TypeScript/issues/15300).\n */\nexport type StrictJsonObject = { [member: string]: StrictJsonValue };\n\nexport type JsonValue = JsonPrimitive | JsonObject | JsonArray;\nexport type JsonArray = JsonValue[];\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type JsonObject = { [member: string]: any };\n\n/**\n * Request payload, can be use in GET query string, Post form or POST JSON.\n * If string, will parse with JSON.parse.\n */\nexport type Payload = JsonObject | string | null;\n\nexport type Method = RequestInit['method'];\nexport type Mode = RequestInit['mode'];\nexport type Redirect = RequestInit['redirect'];\nexport type ClientTimeout = number | undefined;\nexport type ParseMethod =\n  | 'json'\n  | 'json-bigint'\n  | 'text'\n  | 'raw'\n  | null\n  | undefined;\nexport type Signal = RequestInit['signal'];\nexport type Stringify = boolean;\nexport type Url = string;\n\nexport interface RequestBase {\n  body?: Body;\n  credentials?: Credentials;\n  fetchRetryOptions?: FetchRetryOptions;\n  headers?: Headers;\n  host?: Host;\n  ignoreUnauthorized?: boolean;\n  mode?: Mode;\n  method?: Method;\n  jsonPayload?: Payload;\n  postPayload?: Payload | FormData;\n  searchParams?: Payload | URLSearchParams;\n  signal?: Signal;\n  stringify?: Stringify;\n  timeout?: ClientTimeout;\n}\n\nexport interface CallApi extends RequestBase {\n  url: Url;\n  cache?: Cache;\n  redirect?: Redirect;\n}\n\nexport interface RequestWithEndpoint extends RequestBase {\n  endpoint: Endpoint;\n  url?: Url;\n}\n\nexport interface RequestWithUrl extends RequestBase {\n  url: Url;\n  endpoint?: Endpoint;\n}\n\n// this make sure at least one of `url` or `endpoint` is set\nexport type RequestConfig = RequestWithEndpoint | RequestWithUrl;\n\nexport interface JsonResponse {\n  response: Response;\n  json: JsonObject;\n}\n\nexport interface TextResponse {\n  response: Response;\n  text: string;\n}\n\nexport type CsrfToken = string;\nexport type CsrfPromise = Promise<string | undefined>;\nexport type Protocol = 'http:' | 'https:';\n\nexport interface ClientConfig {\n  baseUrl?: string;\n  host?: Host;\n  protocol?: Protocol;\n  credentials?: Credentials;\n  csrfToken?: CsrfToken;\n  guestToken?: string;\n  guestTokenHeaderName?: string;\n  fetchRetryOptions?: FetchRetryOptions;\n  headers?: Headers;\n  mode?: Mode;\n  timeout?: ClientTimeout;\n  unauthorizedHandler?: () => void;\n}\n\nexport interface SupersetClientInterface\n  extends Pick<\n    SupersetClientClass,\n    | 'delete'\n    | 'get'\n    | 'post'\n    | 'postForm'\n    | 'put'\n    | 'request'\n    | 'init'\n    | 'isAuthenticated'\n    | 'reAuthenticate'\n    | 'getGuestToken'\n  > {\n  configure: (config?: ClientConfig) => SupersetClientInterface;\n  reset: () => void;\n}\n\nexport type SupersetClientResponse = Response | JsonResponse | TextResponse;\n\nexport default {};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SupersetClient, Method, Endpoint } from '../../../connection';\nimport { QueryFormData } from '../../types/QueryFormData';\nimport { LegacyChartDataResponse } from './types';\nimport { BaseParams } from '../types';\n\nexport interface Params extends BaseParams {\n  method?: Method;\n  endpoint?: Endpoint;\n  formData: QueryFormData;\n}\n\nexport default async function fetchExploreJson({\n  client = SupersetClient,\n  method = 'POST',\n  requestConfig,\n  endpoint = '/superset/explore_json/',\n  formData,\n}: Params) {\n  const { json } = await client.request({\n    ...requestConfig,\n    method,\n    endpoint,\n    searchParams:\n      method === 'GET'\n        ? new URLSearchParams({ form_data: JSON.stringify(formData) })\n        : undefined,\n    postPayload: method === 'POST' ? { form_data: formData } : undefined,\n  });\n  return json as LegacyChartDataResponse;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SupersetClient } from '../../../connection';\nimport { BaseParams } from '../types';\nimport { QueryFormData } from '../../types/QueryFormData';\n\nexport interface Params extends BaseParams {\n  sliceId: number;\n  overrideFormData?: Partial<QueryFormData>;\n}\n\nexport default function getFormData({\n  client = SupersetClient,\n  sliceId,\n  overrideFormData,\n  requestConfig,\n}: Params) {\n  const promise = client\n    .get({\n      endpoint: `/api/v1/form_data/?slice_id=${sliceId}`,\n      ...requestConfig,\n    })\n    .then(({ json }) => json as QueryFormData);\n\n  return overrideFormData\n    ? promise.then(formData => ({ ...formData, ...overrideFormData }))\n    : promise;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SupersetClient } from '../../../connection';\nimport { Datasource } from '../../types/Datasource';\nimport { BaseParams } from '../types';\n\nexport interface Params extends BaseParams {\n  datasourceKey: string;\n}\n\nexport default function getDatasourceMetadata({\n  client = SupersetClient,\n  datasourceKey,\n  requestConfig,\n}: Params) {\n  return client\n    .get({\n      endpoint: `/superset/fetch_datasource_metadata?datasourceKey=${datasourceKey}`,\n      ...requestConfig,\n    })\n    .then(response => response.json as Datasource);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ChartDataResponseResult } from '../../types';\n\nexport interface LegacyChartDataResponse\n  extends Omit<ChartDataResponseResult, 'data'> {\n  data: Record<string, unknown>[] | Record<string, unknown>;\n}\n\nexport default {};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport makeApi from './makeApi';\nimport { ChartDataResponse, QueryContext } from '../../types';\n\nexport const getChartData = makeApi<QueryContext, ChartDataResponse>({\n  method: 'POST',\n  endpoint: '/api/v1/chart/data',\n});\n\n/**\n * All v1 API\n */\nexport default {\n  getChartData,\n};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { format as d3Format } from 'd3-format';\nimport NumberFormatter from '../NumberFormatter';\n\nexport default function createSiAtMostNDigitFormatter(\n  config: {\n    description?: string;\n    n?: number;\n    id?: string;\n    label?: string;\n  } = {},\n) {\n  const { description, n = 3, id, label } = config;\n  const siFormatter = d3Format(`.${n}s`);\n\n  return new NumberFormatter({\n    description,\n    formatFunc: value => {\n      const si = siFormatter(value);\n\n      /* Removing trailing `.00` if any */\n      return si.slice(-1) < 'A' ? parseFloat(si).toString() : si;\n    },\n    id: id ?? `si_at_most_${n}_digit`,\n    label: label ?? `SI with at most ${n} significant digits`,\n  });\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TextStyle, Dimension } from './types';\nimport getBBoxCeil from './svg/getBBoxCeil';\nimport { hiddenSvgFactory, textFactory } from './svg/factories';\nimport updateTextNode from './svg/updateTextNode';\n\n/**\n * get dimensions of multiple texts with same style\n * @param input\n * @param defaultDimension\n */\nexport default function getMultipleTextDimensions(\n  input: {\n    className?: string;\n    container?: HTMLElement;\n    style?: TextStyle;\n    texts: string[];\n  },\n  defaultDimension?: Dimension,\n): Dimension[] {\n  const { texts, className, style, container } = input;\n\n  const cache = new Map<string, Dimension>();\n  // for empty string\n  cache.set('', { height: 0, width: 0 });\n  let textNode: SVGTextElement | undefined;\n  let svgNode: SVGSVGElement | undefined;\n\n  const dimensions = texts.map(text => {\n    // Check if this string has been computed already\n    if (cache.has(text)) {\n      return cache.get(text) as Dimension;\n    }\n\n    // Lazy creation of text and svg nodes\n    if (!textNode) {\n      svgNode = hiddenSvgFactory.createInContainer(container);\n      textNode = textFactory.createInContainer(svgNode);\n    }\n\n    // Update text and get dimension\n    updateTextNode(textNode, { className, style, text });\n    const dimension = getBBoxCeil(textNode, defaultDimension);\n    // Store result to cache\n    cache.set(text, dimension);\n\n    return dimension;\n  });\n\n  // Remove svg node, if any\n  if (svgNode && textNode) {\n    // The nodes are added to the DOM briefly only to make getBBox works.\n    // (If not added to DOM getBBox will always return 0x0.)\n    // After that the svg nodes are not needed.\n    // We delay its removal in case there are subsequent calls to this function\n    // that can reuse the svg nodes.\n    // Experiments have shown that reusing existing nodes\n    // instead of deleting and adding new ones can save lot of time.\n    setTimeout(() => {\n      textFactory.removeFromContainer(svgNode);\n      hiddenSvgFactory.removeFromContainer(container);\n    }, 500);\n  }\n\n  return dimensions;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Margin } from './types';\n\nfunction mergeOneSide(\n  operation: (a: number, b: number) => number,\n  a = 0,\n  b = 0,\n) {\n  if (Number.isNaN(a) || a === null) return b;\n  if (Number.isNaN(b) || b === null) return a;\n\n  return operation(a, b);\n}\n\nexport default function mergeMargin(\n  margin1: Partial<Margin> = {},\n  margin2: Partial<Margin> = {},\n  mode: 'expand' | 'shrink' = 'expand',\n) {\n  const { top, left, bottom, right } = margin1;\n  const operation = mode === 'expand' ? Math.max : Math.min;\n\n  return {\n    bottom: mergeOneSide(operation, bottom, margin2.bottom),\n    left: mergeOneSide(operation, left, margin2.left),\n    right: mergeOneSide(operation, right, margin2.right),\n    top: mergeOneSide(operation, top, margin2.top),\n  };\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport interface TextStyle {\n  font?: string;\n  fontFamily?: string;\n  fontSize?: string | number;\n  fontStyle?: string;\n  fontWeight?: string | number;\n  letterSpacing?: string | number;\n}\n\nexport interface Margin {\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n}\n\nexport interface Dimension {\n  width: number;\n  height: number;\n}\n\nexport default {};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { t } from '../translation';\n\nexport default function validateInteger(v: unknown) {\n  if (\n    (typeof v === 'string' &&\n      v.trim().length > 0 &&\n      Number.isInteger(Number(v.trim()))) ||\n    (typeof v === 'number' && Number.isInteger(v))\n  ) {\n    return false;\n  }\n\n  return t('is expected to be an integer');\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  isDefined,\n  SupersetClient,\n  SupersetClientInterface,\n  RequestConfig,\n  SupersetClientClass,\n  QueryFormData,\n  Datasource,\n} from '../..';\nimport getChartBuildQueryRegistry from '../registries/ChartBuildQueryRegistrySingleton';\nimport getChartMetadataRegistry from '../registries/ChartMetadataRegistrySingleton';\nimport { QueryData } from '../types/QueryResponse';\nimport { AnnotationLayerMetadata } from '../types/Annotation';\nimport { PlainObject } from '../types/Base';\n\n// This expands to Partial<All> & (union of all possible single-property types)\ntype AtLeastOne<All, Each = { [K in keyof All]: Pick<All, K> }> = Partial<All> &\n  Each[keyof Each];\n\nexport type SliceIdAndOrFormData = AtLeastOne<{\n  sliceId: number;\n  formData: Partial<QueryFormData>;\n}>;\n\ninterface AnnotationData {\n  [key: string]: PlainObject;\n}\n\nexport interface ChartData {\n  annotationData: AnnotationData;\n  datasource: PlainObject;\n  formData: QueryFormData;\n  queriesData: QueryData[];\n}\n\nexport default class ChartClient {\n  readonly client: SupersetClientInterface | SupersetClientClass;\n\n  constructor(\n    config: {\n      client?: SupersetClientInterface | SupersetClientClass;\n    } = {},\n  ) {\n    const { client = SupersetClient } = config;\n    this.client = client;\n  }\n\n  loadFormData(\n    input: SliceIdAndOrFormData,\n    options?: Partial<RequestConfig>,\n  ): Promise<QueryFormData> {\n    /* If sliceId is provided, use it to fetch stored formData from API */\n    if ('sliceId' in input) {\n      const promise = this.client\n        .get({\n          endpoint: `/api/v1/form_data/?slice_id=${input.sliceId}`,\n          ...options,\n        } as RequestConfig)\n        .then(response => response.json as QueryFormData);\n\n      /*\n       * If formData is also specified, override API result\n       * with user-specified formData\n       */\n      return promise.then((dbFormData: QueryFormData) => ({\n        ...dbFormData,\n        ...input.formData,\n      }));\n    }\n\n    /* If sliceId is not provided, returned formData wrapped in a Promise */\n    return input.formData\n      ? Promise.resolve(input.formData as QueryFormData)\n      : Promise.reject(\n          new Error('At least one of sliceId or formData must be specified'),\n        );\n  }\n\n  async loadQueryData(\n    formData: QueryFormData,\n    options?: Partial<RequestConfig>,\n  ): Promise<QueryData[]> {\n    const { viz_type: visType } = formData;\n    const metaDataRegistry = getChartMetadataRegistry();\n    const buildQueryRegistry = getChartBuildQueryRegistry();\n\n    if (metaDataRegistry.has(visType)) {\n      const { useLegacyApi } = metaDataRegistry.get(visType)!;\n      const buildQuery =\n        (await buildQueryRegistry.get(visType)) ?? (() => formData);\n      const requestConfig: RequestConfig = useLegacyApi\n        ? {\n            endpoint: '/superset/explore_json/',\n            postPayload: {\n              form_data: buildQuery(formData),\n            },\n            ...options,\n          }\n        : {\n            endpoint: '/api/v1/chart/data',\n            jsonPayload: {\n              query_context: buildQuery(formData),\n            },\n            ...options,\n          };\n\n      return this.client\n        .post(requestConfig)\n        .then(response =>\n          Array.isArray(response.json) ? response.json : [response.json],\n        );\n    }\n\n    return Promise.reject(new Error(`Unknown chart type: ${visType}`));\n  }\n\n  loadDatasource(\n    datasourceKey: string,\n    options?: Partial<RequestConfig>,\n  ): Promise<Datasource> {\n    return this.client\n      .get({\n        endpoint: `/superset/fetch_datasource_metadata?datasourceKey=${datasourceKey}`,\n        ...options,\n      } as RequestConfig)\n      .then(response => response.json as Datasource);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  loadAnnotation(\n    annotationLayer: AnnotationLayerMetadata,\n  ): Promise<AnnotationData> {\n    /* When annotation does not require query */\n    if (!isDefined(annotationLayer.sourceType)) {\n      return Promise.resolve({} as AnnotationData);\n    }\n\n    // TODO: Implement\n    return Promise.reject(new Error('This feature is not implemented yet.'));\n  }\n\n  loadAnnotations(\n    annotationLayers?: AnnotationLayerMetadata[],\n  ): Promise<AnnotationData> {\n    if (Array.isArray(annotationLayers) && annotationLayers.length > 0) {\n      return Promise.all(\n        annotationLayers.map(layer => this.loadAnnotation(layer)),\n      ).then(results =>\n        annotationLayers.reduce((prev, layer, i) => {\n          const output: AnnotationData = prev;\n          output[layer.name] = results[i];\n\n          return output;\n        }, {}),\n      );\n    }\n\n    return Promise.resolve({});\n  }\n\n  loadChartData(input: SliceIdAndOrFormData): Promise<ChartData> {\n    return this.loadFormData(input).then(\n      (\n        formData: QueryFormData & {\n          // eslint-disable-next-line camelcase\n          annotation_layers?: AnnotationLayerMetadata[];\n        },\n      ) =>\n        Promise.all([\n          this.loadAnnotations(formData.annotation_layers),\n          this.loadDatasource(formData.datasource),\n          this.loadQueryData(formData),\n        ]).then(([annotationData, datasource, queriesData]) => ({\n          annotationData,\n          datasource,\n          formData,\n          queriesData,\n        })),\n    );\n  }\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint react/sort-comp: 'off' */\nimport React, { ReactNode } from 'react';\nimport {\n  SupersetClientInterface,\n  RequestConfig,\n  QueryFormData,\n  Datasource,\n} from '../..';\nimport ChartClient, { SliceIdAndOrFormData } from '../clients/ChartClient';\nimport { QueryData } from '../types/QueryResponse';\n\ninterface Payload {\n  formData: Partial<QueryFormData>;\n  queriesData: QueryData[];\n  datasource?: Datasource;\n}\n\nexport interface ProvidedProps {\n  payload?: Payload;\n  error?: Error;\n  loading?: boolean;\n}\n\nexport type ChartDataProviderProps =\n  /** User can pass either one or both of sliceId or formData */\n  SliceIdAndOrFormData & {\n    /** Child function called with ProvidedProps */\n    children: (provided: ProvidedProps) => ReactNode;\n    /** Superset client which is used to fetch data. It should already be configured and initialized. */\n    client?: SupersetClientInterface;\n    /** Will fetch and include datasource metadata for SliceIdAndOrFormData in the payload. */\n    loadDatasource?: boolean;\n    /** Callback when an error occurs. Enables wrapping the Provider in an ErrorBoundary. */\n    onError?: (error: ProvidedProps['error']) => void;\n    /** Callback when data is loaded. */\n    onLoaded?: (payload: ProvidedProps['payload']) => void;\n    /** Hook to override the formData request config. */\n    formDataRequestOptions?: Partial<RequestConfig>;\n    /** Hook to override the datasource request config. */\n    datasourceRequestOptions?: Partial<RequestConfig>;\n    /** Hook to override the queriesData request config. */\n    queryRequestOptions?: Partial<RequestConfig>;\n  };\n\nexport type ChartDataProviderState = {\n  status: 'uninitialized' | 'loading' | 'error' | 'loaded';\n  payload?: ProvidedProps['payload'];\n  error?: ProvidedProps['error'];\n};\n\nclass ChartDataProvider extends React.PureComponent<\n  ChartDataProviderProps,\n  ChartDataProviderState\n> {\n  readonly chartClient: ChartClient;\n\n  constructor(props: ChartDataProviderProps) {\n    super(props);\n    this.state = { status: 'uninitialized' };\n    this.chartClient = new ChartClient({ client: props.client });\n  }\n\n  componentDidMount() {\n    this.handleFetchData();\n  }\n\n  componentDidUpdate(prevProps: ChartDataProviderProps) {\n    const { formData, sliceId } = this.props;\n    if (formData !== prevProps.formData || sliceId !== prevProps.sliceId) {\n      this.handleFetchData();\n    }\n  }\n\n  private extractSliceIdAndFormData() {\n    const { formData, sliceId } = this.props;\n    return formData ? { formData } : { sliceId: sliceId as number };\n  }\n\n  private handleFetchData = () => {\n    const {\n      loadDatasource,\n      formDataRequestOptions,\n      datasourceRequestOptions,\n      queryRequestOptions,\n    } = this.props;\n\n    this.setState({ status: 'loading' }, () => {\n      try {\n        this.chartClient\n          .loadFormData(\n            this.extractSliceIdAndFormData(),\n            formDataRequestOptions,\n          )\n          .then(formData =>\n            Promise.all([\n              loadDatasource\n                ? this.chartClient.loadDatasource(\n                    formData.datasource,\n                    datasourceRequestOptions,\n                  )\n                : Promise.resolve(undefined),\n              this.chartClient.loadQueryData(formData, queryRequestOptions),\n            ]).then(\n              ([datasource, queriesData]) =>\n                // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n                ({\n                  datasource,\n                  formData,\n                  queriesData,\n                } as Payload),\n            ),\n          )\n          .then(this.handleReceiveData)\n          .catch(this.handleError);\n      } catch (error) {\n        this.handleError(error as Error);\n      }\n    });\n  };\n\n  private handleReceiveData = (payload?: Payload) => {\n    const { onLoaded } = this.props;\n    if (onLoaded) onLoaded(payload);\n    this.setState({ payload, status: 'loaded' });\n  };\n\n  private handleError = (error: ProvidedProps['error']) => {\n    const { onError } = this.props;\n    if (onError) onError(error);\n    this.setState({ error, status: 'error' });\n  };\n\n  render() {\n    const { children } = this.props;\n    const { status, payload, error } = this.state;\n\n    switch (status) {\n      case 'loading':\n        return children({ loading: true });\n      case 'loaded':\n        return children({ payload });\n      case 'error':\n        return children({ error });\n      case 'uninitialized':\n      default:\n        return null;\n    }\n  }\n}\n\nexport default ChartDataProvider;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  QueryFormData,\n  QueryContext,\n  SetDataMaskHook,\n  JsonObject,\n} from '../..';\nimport ChartProps from '../models/ChartProps';\nimport { PlainObject } from './Base';\n\nexport type PlainProps = PlainObject;\n\ntype TransformFunction<Input = PlainProps, Output = PlainProps> = (\n  x: Input,\n) => Output;\n\nexport type PreTransformProps = TransformFunction<ChartProps, ChartProps>;\nexport type TransformProps<Props extends ChartProps = ChartProps> =\n  TransformFunction<Props>;\nexport type PostTransformProps = TransformFunction;\n\nexport type BuildQueryFunction<T extends QueryFormData> = (\n  formData: T,\n  options?: {\n    extras?: {\n      cachedChanges?: any;\n    };\n    ownState?: JsonObject;\n    hooks?: {\n      setDataMask: SetDataMaskHook;\n      setCachedChanges: (newChanges: any) => void;\n    };\n  },\n) => QueryContext;\n\nexport default {};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Types for query response\n */\nimport {\n  DataRecordValue,\n  DataRecord,\n  ChartDataResponseResult,\n} from '../../types';\nimport { PlainObject } from './Base';\n\nexport interface TimeseriesDataRecord extends DataRecord {\n  __timestamp: number | string | Date | null;\n}\n\n// data record value filters from FilterBox\nexport interface DataRecordFilters {\n  [key: string]: DataRecordValue[];\n}\n\n/**\n * Legacy queried data for charts. List of arbitrary dictionaries generated\n * by `viz.py`.\n * TODO: clean this up when all charts have been migrated to v1 API.\n */\nexport type LegacyQueryData = PlainObject;\n\n/**\n * Ambiguous query data type. Reserved for the generic QueryFormData.\n * Don't use this for a specific chart (since you know which API it uses already).\n */\nexport type QueryData = LegacyQueryData | ChartDataResponseResult;\n\nexport default {};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { PureComponent } from 'react';\nimport { isDefined } from '../utils';\n\nfunction checkNumber(input: unknown): input is number {\n  return isDefined(input) && typeof input === 'number';\n}\n\ntype Props = {\n  contentWidth?: number;\n  contentHeight?: number;\n  height: number;\n  renderContent: ({\n    height,\n    width,\n  }: {\n    height: number;\n    width: number;\n  }) => React.ReactNode;\n  width: number;\n};\n\nexport default class ChartFrame extends PureComponent<Props, {}> {\n  static defaultProps = {\n    renderContent() {},\n  };\n\n  render() {\n    const { contentWidth, contentHeight, width, height, renderContent } =\n      this.props;\n\n    const overflowX = checkNumber(contentWidth) && contentWidth > width;\n    const overflowY = checkNumber(contentHeight) && contentHeight > height;\n\n    if (overflowX || overflowY) {\n      return (\n        <div\n          style={{\n            height,\n            overflowX: overflowX ? 'auto' : 'hidden',\n            overflowY: overflowY ? 'auto' : 'hidden',\n            width,\n          }}\n        >\n          {renderContent({\n            height: Math.max(contentHeight ?? 0, height),\n            width: Math.max(contentWidth ?? 0, width),\n          })}\n        </div>\n      );\n    }\n\n    return renderContent({ height, width });\n  }\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { CSSProperties, ReactNode, PureComponent } from 'react';\nimport { ParentSize } from '@vx/responsive';\n\nconst defaultProps = {\n  className: '',\n  height: 'auto' as number | string,\n  position: 'top',\n  width: 'auto' as number | string,\n};\n\ntype Props = {\n  className: string;\n  debounceTime?: number;\n  width: number | string;\n  height: number | string;\n  legendJustifyContent?: 'center' | 'flex-start' | 'flex-end';\n  position: 'top' | 'left' | 'bottom' | 'right';\n  renderChart: (dim: { width: number; height: number }) => ReactNode;\n  renderLegend?: (params: { direction: string }) => ReactNode;\n} & Readonly<typeof defaultProps>;\n\nconst LEGEND_STYLE_BASE: CSSProperties = {\n  display: 'flex',\n  flexGrow: 0,\n  flexShrink: 0,\n  order: -1,\n};\n\nconst CHART_STYLE_BASE: CSSProperties = {\n  flexBasis: 'auto',\n  flexGrow: 1,\n  flexShrink: 1,\n  position: 'relative',\n};\n\nclass WithLegend extends PureComponent<Props, {}> {\n  static defaultProps = defaultProps;\n\n  getContainerDirection(): CSSProperties['flexDirection'] {\n    const { position } = this.props;\n\n    if (position === 'left') {\n      return 'row';\n    }\n    if (position === 'right') {\n      return 'row-reverse';\n    }\n    if (position === 'bottom') {\n      return 'column-reverse';\n    }\n\n    return 'column';\n  }\n\n  getLegendJustifyContent() {\n    const { legendJustifyContent, position } = this.props;\n    if (legendJustifyContent) {\n      return legendJustifyContent;\n    }\n\n    if (position === 'left' || position === 'right') {\n      return 'flex-start';\n    }\n\n    return 'flex-end';\n  }\n\n  render() {\n    const {\n      className,\n      debounceTime,\n      width,\n      height,\n      position,\n      renderChart,\n      renderLegend,\n    } = this.props;\n\n    const isHorizontal = position === 'left' || position === 'right';\n\n    const style: CSSProperties = {\n      display: 'flex',\n      flexDirection: this.getContainerDirection(),\n      height,\n      width,\n    };\n\n    const chartStyle: CSSProperties = { ...CHART_STYLE_BASE };\n    if (isHorizontal) {\n      chartStyle.width = 0;\n    } else {\n      chartStyle.height = 0;\n    }\n\n    const legendDirection = isHorizontal ? 'column' : 'row';\n    const legendStyle: CSSProperties = {\n      ...LEGEND_STYLE_BASE,\n      flexDirection: legendDirection,\n      justifyContent: this.getLegendJustifyContent(),\n    };\n\n    return (\n      <div className={`with-legend ${className}`} style={style}>\n        {renderLegend && (\n          <div className=\"legend-container\" style={legendStyle}>\n            {renderLegend({\n              // Pass flexDirection for @vx/legend to arrange legend items\n              direction: legendDirection,\n            })}\n          </div>\n        )}\n        <div className=\"main-container\" style={chartStyle}>\n          <ParentSize debounceTime={debounceTime}>\n            {(parent: { width: number; height: number }) =>\n              parent.width > 0 && parent.height > 0\n                ? // Only render when necessary\n                  renderChart(parent)\n                : null\n            }\n          </ParentSize>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WithLegend;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { PureComponent } from 'react';\n\nconst defaultProps = {\n  className: '',\n};\n\ntype Props = {\n  className?: string;\n  children: React.ReactNode;\n} & Readonly<typeof defaultProps>;\n\nconst CONTAINER_STYLE = { padding: 8 };\n\nclass TooltipFrame extends PureComponent<Props, {}> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const { className, children } = this.props;\n\n    return (\n      <div className={className} style={CONTAINER_STYLE}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default TooltipFrame;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { CSSProperties, PureComponent, ReactNode } from 'react';\n\ninterface TooltipRowData {\n  key: string | number;\n  keyColumn?: ReactNode;\n  keyStyle?: CSSProperties;\n  valueColumn: ReactNode;\n  valueStyle?: CSSProperties;\n}\n\nconst defaultProps = {\n  className: '',\n  data: [] as TooltipRowData[],\n};\n\ntype Props = {\n  className?: string;\n  data: TooltipRowData[];\n} & Readonly<typeof defaultProps>;\n\nconst VALUE_CELL_STYLE: CSSProperties = { paddingLeft: 8, textAlign: 'right' };\n\nexport default class TooltipTable extends PureComponent<Props, {}> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const { className, data } = this.props;\n\n    return (\n      <table className={className}>\n        <tbody>\n          {data.map(({ key, keyColumn, keyStyle, valueColumn, valueStyle }) => (\n            <tr key={key}>\n              <td style={keyStyle}>{keyColumn ?? key}</td>\n              <td\n                style={\n                  valueStyle\n                    ? { ...VALUE_CELL_STYLE, ...valueStyle }\n                    : VALUE_CELL_STYLE\n                }\n              >\n                {valueColumn}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n","/* eslint camelcase: 0 */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DatasourceType } from './Datasource';\nimport { BinaryOperator, SetOperator, UnaryOperator } from './Operator';\nimport { AppliedTimeExtras, TimeRange } from './Time';\nimport { AnnotationLayer } from './AnnotationLayer';\nimport {\n  QueryFields,\n  QueryFormColumn,\n  QueryFormData,\n  QueryFormMetric,\n} from './QueryFormData';\nimport { Maybe } from '../../types';\nimport { PostProcessingRule } from './PostProcessing';\nimport { JsonObject } from '../../connection';\nimport { TimeGranularity } from '../../time-format';\n\nexport type BaseQueryObjectFilterClause = {\n  col: QueryFormColumn;\n  grain?: TimeGranularity;\n  isExtra?: boolean;\n};\n\nexport type BinaryQueryObjectFilterClause = BaseQueryObjectFilterClause & {\n  op: BinaryOperator;\n  val: string | number | boolean;\n  formattedVal?: string;\n};\n\nexport type SetQueryObjectFilterClause = BaseQueryObjectFilterClause & {\n  op: SetOperator;\n  val: (string | number | boolean)[];\n  formattedVal?: string[];\n};\n\nexport type UnaryQueryObjectFilterClause = BaseQueryObjectFilterClause & {\n  op: UnaryOperator;\n  formattedVal?: string;\n};\n\nexport type QueryObjectFilterClause =\n  | BinaryQueryObjectFilterClause\n  | SetQueryObjectFilterClause\n  | UnaryQueryObjectFilterClause;\n\nexport type QueryObjectExtras = Partial<{\n  /** HAVING condition for Druid */\n  /** HAVING condition for SQLAlchemy */\n  having?: string;\n  relative_start?: string;\n  relative_end?: string;\n  time_grain_sqla?: TimeGranularity;\n  /** WHERE condition */\n  where?: string;\n}>;\n\nexport type ResidualQueryObjectData = {\n  [key: string]: unknown;\n};\n\n/**\n * Query object directly compatible with the new chart data API.\n * A stricter version of query form data.\n *\n * All information should be related to generating database queries. Config values\n * for client-side processing and chart rendering should happen in `buildQuery`\n * and `transformProps`.\n */\nexport interface QueryObject\n  extends QueryFields,\n    TimeRange,\n    ResidualQueryObjectData {\n  /**\n   * Definition for annotation layers.\n   */\n  annotation_layers?: AnnotationLayer[];\n\n  /** Time filters that have been applied to the query object */\n  applied_time_extras?: AppliedTimeExtras;\n\n  /** add fetch value predicate to query if defined in datasource */\n  apply_fetch_values_predicate?: boolean;\n\n  /**\n   * Extra form data. Current stores information about time granularity, may be\n   * cleaned up in the future.\n   */\n  extras?: QueryObjectExtras;\n\n  /** SIMPLE where filters */\n  filters?: QueryObjectFilterClause[];\n\n  /** Time column for SQL, time-grain for Druid (deprecated) */\n  granularity?: string;\n\n  /** If set, will group by timestamp */\n  is_timeseries?: boolean;\n\n  /** Should the rowcount of the query be fetched */\n  is_rowcount?: boolean;\n\n  /** Free-form HAVING SQL, multiple clauses are concatenated by AND */\n  having?: string;\n\n  /** SIMPLE having filters */\n  having_filters?: QueryObjectFilterClause[];\n\n  post_processing?: (PostProcessingRule | undefined)[];\n\n  /** Maximum numbers of rows to return */\n  row_limit?: number;\n\n  /** Number of rows to skip */\n  row_offset?: number;\n\n  /** The column to which direct temporal filters (forthcoming) */\n  time_column?: string;\n\n  /** The size of bucket by which to group timeseries data (forthcoming) */\n  time_grain?: string;\n\n  /** Direction to ordered by */\n  order_desc?: boolean;\n\n  url_params?: Record<string, string>;\n\n  custom_params?: JsonObject;\n\n  /** Free-form WHERE SQL: multiple clauses are concatenated by AND */\n  where?: string;\n\n  /** Limit number of series */\n  series_columns?: QueryFormColumn[];\n  series_limit?: number;\n  series_limit_metric?: Maybe<QueryFormMetric>;\n}\n\nexport interface QueryContext {\n  datasource: {\n    id: number;\n    type: DatasourceType;\n  };\n  /** Force refresh of all queries */\n  force: boolean;\n  /** Type of result to return for queries */\n  result_type: string;\n  /** Response format */\n  result_format: string;\n  queries: QueryObject[];\n  form_data?: QueryFormData;\n}\n\nexport const ErrorTypeEnum = {\n  // Frontend errors\n  FRONTEND_CSRF_ERROR: 'FRONTEND_CSRF_ERROR',\n  FRONTEND_NETWORK_ERROR: 'FRONTEND_NETWORK_ERROR',\n  FRONTEND_TIMEOUT_ERROR: 'FRONTEND_TIMEOUT_ERROR',\n\n  // DB Engine errors\n  GENERIC_DB_ENGINE_ERROR: 'GENERIC_DB_ENGINE_ERROR',\n  COLUMN_DOES_NOT_EXIST_ERROR: 'COLUMN_DOES_NOT_EXIST_ERROR',\n  TABLE_DOES_NOT_EXIST_ERROR: 'TABLE_DOES_NOT_EXIST_ERROR',\n  SCHEMA_DOES_NOT_EXIST_ERROR: 'SCHEMA_DOES_NOT_EXIST_ERROR',\n  CONNECTION_INVALID_USERNAME_ERROR: 'CONNECTION_INVALID_USERNAME_ERROR',\n  CONNECTION_INVALID_PASSWORD_ERROR: 'CONNECTION_INVALID_PASSWORD_ERROR',\n  CONNECTION_INVALID_HOSTNAME_ERROR: 'CONNECTION_INVALID_HOSTNAME_ERROR',\n  CONNECTION_PORT_CLOSED_ERROR: 'CONNECTION_PORT_CLOSED_ERROR',\n  CONNECTION_INVALID_PORT_ERROR: 'CONNECTION_INVALID_PORT_ERROR',\n  CONNECTION_HOST_DOWN_ERROR: 'CONNECTION_HOST_DOWN_ERROR',\n  CONNECTION_ACCESS_DENIED_ERROR: 'CONNECTION_ACCESS_DENIED_ERROR',\n  CONNECTION_UNKNOWN_DATABASE_ERROR: 'CONNECTION_UNKNOWN_DATABASE_ERROR',\n  CONNECTION_DATABASE_PERMISSIONS_ERROR:\n    'CONNECTION_DATABASE_PERMISSIONS_ERROR',\n  CONNECTION_MISSING_PARAMETERS_ERRORS: 'CONNECTION_MISSING_PARAMETERS_ERRORS',\n  OBJECT_DOES_NOT_EXIST_ERROR: 'OBJECT_DOES_NOT_EXIST_ERROR',\n  SYNTAX_ERROR: 'SYNTAX_ERROR',\n\n  // Viz errors\n  VIZ_GET_DF_ERROR: 'VIZ_GET_DF_ERROR',\n  UNKNOWN_DATASOURCE_TYPE_ERROR: 'UNKNOWN_DATASOURCE_TYPE_ERROR',\n  FAILED_FETCHING_DATASOURCE_INFO_ERROR:\n    'FAILED_FETCHING_DATASOURCE_INFO_ERROR',\n\n  // Security access errors\n  TABLE_SECURITY_ACCESS_ERROR: 'TABLE_SECURITY_ACCESS_ERROR',\n  DATASOURCE_SECURITY_ACCESS_ERROR: 'DATASOURCE_SECURITY_ACCESS_ERROR',\n  DATABASE_SECURITY_ACCESS_ERROR: 'DATABASE_SECURITY_ACCESS_ERROR',\n  QUERY_SECURITY_ACCESS_ERROR: 'QUERY_SECURITY_ACCESS_ERROR',\n  MISSING_OWNERSHIP_ERROR: 'MISSING_OWNERSHIP_ERROR',\n\n  // Other errors\n  BACKEND_TIMEOUT_ERROR: 'BACKEND_TIMEOUT_ERROR',\n  DATABASE_NOT_FOUND_ERROR: 'DATABASE_NOT_FOUND_ERROR',\n\n  // Sqllab error\n  MISSING_TEMPLATE_PARAMS_ERROR: 'MISSING_TEMPLATE_PARAMS_ERROR',\n  INVALID_TEMPLATE_PARAMS_ERROR: 'INVALID_TEMPLATE_PARAMS_ERROR',\n  RESULTS_BACKEND_NOT_CONFIGURED_ERROR: 'RESULTS_BACKEND_NOT_CONFIGURED_ERROR',\n  DML_NOT_ALLOWED_ERROR: 'DML_NOT_ALLOWED_ERROR',\n  INVALID_CTAS_QUERY_ERROR: 'INVALID_CTAS_QUERY_ERROR',\n  INVALID_CVAS_QUERY_ERROR: 'INVALID_CVAS_QUERY_ERROR',\n  SQLLAB_TIMEOUT_ERROR: 'SQLLAB_TIMEOUT_ERROR',\n  RESULTS_BACKEND_ERROR: 'RESULTS_BACKEND_ERROR',\n  ASYNC_WORKERS_ERROR: 'ASYNC_WORKERS_ERROR',\n\n  // Generic errors\n  GENERIC_COMMAND_ERROR: 'GENERIC_COMMAND_ERROR',\n  GENERIC_BACKEND_ERROR: 'GENERIC_BACKEND_ERROR',\n\n  // API errors\n  INVALID_PAYLOAD_FORMAT_ERROR: 'INVALID_PAYLOAD_FORMAT_ERROR',\n  INVALID_PAYLOAD_SCHEMA_ERROR: 'INVALID_PAYLOAD_SCHEMA_ERROR',\n} as const;\n\ntype ValueOf<T> = T[keyof T];\n\nexport type ErrorType = ValueOf<typeof ErrorTypeEnum>;\n\n// Keep in sync with superset/views/errors.py\nexport type ErrorLevel = 'info' | 'warning' | 'error';\n\nexport type ErrorSource = 'dashboard' | 'explore' | 'sqllab';\n\nexport type SupersetError<ExtraType = Record<string, any> | null> = {\n  error_type: ErrorType;\n  extra: ExtraType;\n  level: ErrorLevel;\n  message: string;\n};\n\nexport const CtasEnum = {\n  TABLE: 'TABLE',\n  VIEW: 'VIEW',\n};\n\nexport type QueryColumn = {\n  name: string;\n  column_name?: string;\n  type: string | null;\n  is_dttm: boolean;\n};\n\n// Possible states of a query object for processing on the server\nexport enum QueryState {\n  STARTED = 'started',\n  STOPPED = 'stopped',\n  FAILED = 'failed',\n  PENDING = 'pending',\n  RUNNING = 'running',\n  SCHEDULED = 'scheduled',\n  SUCCESS = 'success',\n  FETCHING = 'fetching',\n  TIMED_OUT = 'timed_out',\n}\n\n// Inidcates a Query's state is still processing\nexport const runningQueryStateList: QueryState[] = [\n  QueryState.RUNNING,\n  QueryState.STARTED,\n  QueryState.PENDING,\n  QueryState.FETCHING,\n  QueryState.SCHEDULED,\n];\n\n// Indicates a Query's state has completed processing regardless of success / failure\nexport const concludedQueryStateList: QueryState[] = [\n  QueryState.STOPPED,\n  QueryState.FAILED,\n  QueryState.SUCCESS,\n  QueryState.TIMED_OUT,\n];\n\nexport type Query = {\n  cached: boolean;\n  ctas: boolean;\n  ctas_method?: keyof typeof CtasEnum;\n  dbId: number;\n  errors?: SupersetError[];\n  errorMessage: string | null;\n  extra: {\n    progress: string | null;\n    errors?: SupersetError[];\n  };\n  id: string;\n  isDataPreview: boolean;\n  link?: string;\n  progress: number;\n  resultsKey: string | null;\n  schema?: string;\n  sql: string;\n  sqlEditorId: string;\n  state: QueryState;\n  tab: string | null;\n  tempSchema: string | null;\n  tempTable: string;\n  trackingUrl: string | null;\n  templateParams: any;\n  rows: number;\n  queryLimit: number;\n  limitingFactor: string;\n  endDttm: number;\n  duration: string;\n  startDttm: number;\n  time: Record<string, any>;\n  user: Record<string, any>;\n  userId: number;\n  db: Record<string, any>;\n  started: string;\n  querylink: Record<string, any>;\n  queryId: number;\n  executedSql: string;\n  output: string | Record<string, any>;\n  actions: Record<string, any>;\n  type: DatasourceType;\n  columns: QueryColumn[];\n};\n\nexport type QueryResults = {\n  results: {\n    displayLimitReached: boolean;\n    columns: QueryColumn[];\n    data: Record<string, unknown>[];\n    expanded_columns: QueryColumn[];\n    selected_columns: QueryColumn[];\n    query: { limit: number };\n    query_id?: number;\n  };\n};\n\nexport type QueryResponse = Query & QueryResults;\n\n// todo: move out from typing\nexport const testQuery: Query = {\n  id: 'clientId2353',\n  dbId: 1,\n  sql: 'SELECT * FROM something',\n  sqlEditorId: 'dfsadfs',\n  tab: 'unimportant',\n  tempTable: '',\n  ctas: false,\n  cached: false,\n  errorMessage: null,\n  extra: { progress: null },\n  isDataPreview: false,\n  progress: 0,\n  resultsKey: null,\n  state: QueryState.SUCCESS,\n  tempSchema: null,\n  trackingUrl: null,\n  templateParams: null,\n  rows: 42,\n  queryLimit: 100,\n  limitingFactor: '',\n  endDttm: 1476910579693,\n  duration: '',\n  startDttm: 1476910566092.96,\n  time: {},\n  user: {},\n  userId: 1,\n  db: {},\n  started: '',\n  querylink: {},\n  queryId: 1,\n  executedSql: '',\n  output: '',\n  actions: {},\n  type: DatasourceType.Query,\n  columns: [\n    {\n      name: 'Column 1',\n      type: 'STRING',\n      is_dttm: false,\n    },\n    {\n      name: 'Column 3',\n      type: 'STRING',\n      is_dttm: false,\n    },\n    {\n      name: 'Column 2',\n      type: 'TIMESTAMP',\n      is_dttm: true,\n    },\n  ],\n};\n\nexport const testQueryResults = {\n  results: {\n    displayLimitReached: false,\n    columns: [\n      {\n        name: 'Column 1',\n        type: 'STRING',\n        is_dttm: false,\n      },\n      {\n        name: 'Column 3',\n        type: 'STRING',\n        is_dttm: false,\n      },\n      {\n        name: 'Column 2',\n        type: 'TIMESTAMP',\n        is_dttm: true,\n      },\n    ],\n    data: [\n      { 'Column 1': 'a', 'Column 2': 'b', 'Column 3': '2014-11-11T00:00:00' },\n    ],\n    expanded_columns: [],\n    selected_columns: [\n      {\n        name: 'Column 1',\n        type: 'STRING',\n        is_dttm: false,\n      },\n      {\n        name: 'Column 3',\n        type: 'STRING',\n        is_dttm: false,\n      },\n      {\n        name: 'Column 2',\n        type: 'TIMESTAMP',\n        is_dttm: true,\n      },\n    ],\n    query: { limit: 6 },\n  },\n};\n\nexport const testQueryResponse = { ...testQuery, ...testQueryResults };\n\nexport enum ContributionType {\n  Row = 'row',\n  Column = 'column',\n}\n\nexport type DatasourceSamplesQuery = {\n  filters?: QueryObjectFilterClause[];\n};\n\nexport default {};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport default function ensureIsInt<T>(\n  value: T,\n  defaultValue?: number,\n): number {\n  const val = parseInt(String(value), 10);\n  const defaultOrNaN = defaultValue === undefined ? NaN : defaultValue;\n  return Number.isNaN(val) ? defaultOrNaN : val;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport _seedrandom from 'seedrandom';\n\nexport function seed(seed: string) {\n  return _seedrandom(seed);\n}\n\nexport function seedRandom() {\n  return _seedrandom('superset-ui')();\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { memo } from 'react';\n\nexport const typedMemo: <T>(c: T) => T = memo;\n"],"names":["reactify","renderFn","callbacks","ReactifiedComponent","React","constructor","props","super","container","this","setContainerRef","bind","componentDidMount","execute","componentDidUpdate","componentWillUnmount","undefined","ref","render","id","className","ReactifiedClass","displayName","propTypes","defaultProps","BRAND_COLOR","decreaseSizeUntil","startSize","computeDimension","condition","size","dimension","computeMaxFontSize","input","idealFontSize","maxWidth","maxHeight","style","rest","Error","Math","floor","fontSize","getTextDimension","dim","width","height","defaultDimension","text","length","svgNode","hiddenSvgFactory","textNode","textFactory","updateTextNode","getBBoxCeil","setTimeout","LazyFactory","factoryFn","activeNodes","Map","createInContainer","document","body","has","entry","get","counter","node","append","set","removeFromContainer","removeChild","delete","SVG_NS","createHiddenSvgNode","createElementNS","position","top","left","opacity","pointerEvents","createTextNode","DEFAULT_DIMENSION","getBBox","ceil","STYLE_FIELDS","textContent","getAttribute","setAttribute","removeProperty","filter","field","forEach","promiseTimeout","func","delay","Promise","resolve","LRUCache","capacity","cache","key","TypeError","tmp","value","keys","next","clear","lruCache","PandasAxis","isPostProcessingAggregation","rule","operation","isPostProcessingBoxplot","isPostProcessingContribution","isPostProcessingPivot","isPostProcessingProphet","isPostProcessingDiff","isPostProcessingRolling","isPostProcessingCum","isPostProcessingCompare","isPostProcessingSort","isPostProcessingResample","async","fetchExploreJson","client","SupersetClient","method","requestConfig","endpoint","formData","json","request","searchParams","URLSearchParams","form_data","JSON","stringify","postPayload","getFormData","sliceId","overrideFormData","promise","then","getDatasourceMetadata","datasourceKey","response","getChartData","makeApi","createSiAtMostNDigitFormatter","config","description","n","label","siFormatter","d3Format","NumberFormatter","formatFunc","si","slice","parseFloat","toString","getMultipleTextDimensions","texts","dimensions","map","mergeOneSide","a","b","Number","isNaN","mergeMargin","margin1","margin2","mode","bottom","right","max","min","validateInteger","v","trim","isInteger","t","ChartClient","loadFormData","options","dbFormData","reject","viz_type","visType","metaDataRegistry","getChartMetadataRegistry","buildQueryRegistry","getChartBuildQueryRegistry","useLegacyApi","buildQuery","jsonPayload","query_context","post","Array","isArray","loadDatasource","loadAnnotation","annotationLayer","isDefined","sourceType","loadAnnotations","annotationLayers","all","layer","results","reduce","prev","i","output","name","loadChartData","annotation_layers","datasource","loadQueryData","annotationData","queriesData","ChartDataProvider","chartClient","handleFetchData","formDataRequestOptions","datasourceRequestOptions","queryRequestOptions","setState","status","extractSliceIdAndFormData","handleReceiveData","catch","handleError","error","payload","onLoaded","onError","state","prevProps","children","loading","checkNumber","ChartFrame","PureComponent","contentWidth","contentHeight","renderContent","overflowX","overflowY","LEGEND_STYLE_BASE","display","flexGrow","flexShrink","order","CHART_STYLE_BASE","flexBasis","WithLegend","getContainerDirection","getLegendJustifyContent","legendJustifyContent","debounceTime","renderChart","renderLegend","isHorizontal","flexDirection","chartStyle","legendDirection","legendStyle","justifyContent","direction","ParentSize","parent","CONTAINER_STYLE","padding","TooltipFrame","VALUE_CELL_STYLE","paddingLeft","textAlign","TooltipTable","data","keyColumn","keyStyle","valueColumn","valueStyle","ErrorTypeEnum","FRONTEND_CSRF_ERROR","FRONTEND_NETWORK_ERROR","FRONTEND_TIMEOUT_ERROR","GENERIC_DB_ENGINE_ERROR","COLUMN_DOES_NOT_EXIST_ERROR","TABLE_DOES_NOT_EXIST_ERROR","SCHEMA_DOES_NOT_EXIST_ERROR","CONNECTION_INVALID_USERNAME_ERROR","CONNECTION_INVALID_PASSWORD_ERROR","CONNECTION_INVALID_HOSTNAME_ERROR","CONNECTION_PORT_CLOSED_ERROR","CONNECTION_INVALID_PORT_ERROR","CONNECTION_HOST_DOWN_ERROR","CONNECTION_ACCESS_DENIED_ERROR","CONNECTION_UNKNOWN_DATABASE_ERROR","CONNECTION_DATABASE_PERMISSIONS_ERROR","CONNECTION_MISSING_PARAMETERS_ERRORS","OBJECT_DOES_NOT_EXIST_ERROR","SYNTAX_ERROR","VIZ_GET_DF_ERROR","UNKNOWN_DATASOURCE_TYPE_ERROR","FAILED_FETCHING_DATASOURCE_INFO_ERROR","TABLE_SECURITY_ACCESS_ERROR","DATASOURCE_SECURITY_ACCESS_ERROR","DATABASE_SECURITY_ACCESS_ERROR","QUERY_SECURITY_ACCESS_ERROR","MISSING_OWNERSHIP_ERROR","BACKEND_TIMEOUT_ERROR","DATABASE_NOT_FOUND_ERROR","MISSING_TEMPLATE_PARAMS_ERROR","INVALID_TEMPLATE_PARAMS_ERROR","RESULTS_BACKEND_NOT_CONFIGURED_ERROR","DML_NOT_ALLOWED_ERROR","INVALID_CTAS_QUERY_ERROR","INVALID_CVAS_QUERY_ERROR","SQLLAB_TIMEOUT_ERROR","RESULTS_BACKEND_ERROR","ASYNC_WORKERS_ERROR","GENERIC_COMMAND_ERROR","GENERIC_BACKEND_ERROR","INVALID_PAYLOAD_FORMAT_ERROR","INVALID_PAYLOAD_SCHEMA_ERROR","CtasEnum","TABLE","VIEW","QueryState","runningQueryStateList","RUNNING","STARTED","PENDING","FETCHING","SCHEDULED","concludedQueryStateList","STOPPED","FAILED","SUCCESS","TIMED_OUT","testQuery","dbId","sql","sqlEditorId","tab","tempTable","ctas","cached","errorMessage","extra","progress","isDataPreview","resultsKey","tempSchema","trackingUrl","templateParams","rows","queryLimit","limitingFactor","endDttm","duration","startDttm","time","user","userId","db","started","querylink","queryId","executedSql","actions","type","DatasourceType","columns","is_dttm","testQueryResults","displayLimitReached","expanded_columns","selected_columns","query","limit","testQueryResponse","ContributionType","ensureIsInt","defaultValue","val","parseInt","String","defaultOrNaN","NaN","seed","_seedrandom","seedRandom","typedMemo","memo"],"sourceRoot":""}