# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""add_fab_group_entity

Revision ID: ee02b34ff052
Revises: 74ad1125881c
Create Date: 2025-02-24 12:46:52.007952

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "ee02b34ff052"
down_revision = "74ad1125881c"


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ab_group",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("label", sa.String(length=150), nullable=True),
        sa.Column("description", sa.String(length=512), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "ab_group_role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["group_id"], ["ab_group.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["role_id"], ["ab_role.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("group_id", "role_id"),
    )
    op.create_index("idx_group_id", "ab_group_role", ["group_id"], unique=False)
    op.create_index("idx_group_role_id", "ab_group_role", ["role_id"], unique=False)
    op.create_table(
        "ab_user_group",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("group_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["group_id"], ["ab_group.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["ab_user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "group_id"),
    )
    op.create_index("idx_user_group_id", "ab_user_group", ["group_id"], unique=False)
    op.create_index("idx_user_id", "ab_user_group", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_role_id", table_name="ab_permission_view_role")
    op.drop_index("idx_permission_view_id", table_name="ab_permission_view_role")
    op.drop_index("idx_view_menu_id", table_name="ab_permission_view")
    op.drop_index("idx_permission_id", table_name="ab_permission_view")
    op.drop_index("idx_user_id", table_name="ab_user_group")
    op.drop_index("idx_user_group_id", table_name="ab_user_group")
    op.drop_table("ab_user_group")
    op.drop_index("idx_group_role_id", table_name="ab_group_role")
    op.drop_index("idx_group_id", table_name="ab_group_role")
    op.drop_table("ab_group_role")
    op.drop_table("ab_group")
    # ### end Alembic commands ###
