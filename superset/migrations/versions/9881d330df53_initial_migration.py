"""Initial migration

Revision ID: 9881d330df53
Revises: 
Create Date: 2023-03-10 03:05:36.314576

"""
from alembic import op
import sqlalchemy as sa
# from sqlalchemy.orm import relationship


# revision identifiers, used by Alembic.
revision = '9881d330df53'
down_revision = '48cbb571fa3a'
branch_labels = None
depends_on = None
#
# class Workspace(Base):  # type: ignore # pylint: disable=too-few-public-methods
#     __tablename__ = "workspace"
#
#     id = sa.Column(sa.Integer, primary_key=True)
#     ws_dashboards = relationship("Dashboard", backref="workspace")

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('owner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=260), nullable=False),
    sa.Column('last_name', sa.String(length=260), nullable=False),
    sa.Column('username', sa.String(length=260), nullable=False),
    sa.Column('color', sa.String(length=10), nullable=False),
    sa.Column('password', sa.String(length=60), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    schema='public'
    # schema='superset_db'
    )
    op.add_column("dashboards", sa.Column("workspace_id", sa.Integer(), nullable=True))
    op.add_column("slices", sa.Column("workspace_id", sa.Integer(), nullable=True))
    op.create_table('workspace',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=260), nullable=False),
    sa.Column('color', sa.String(length=10), nullable=False),
    sa.Column('created_by', sa.String(length=260), nullable=False),
    sa.Column('description', sa.String(length=260), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    # schema='superset_db'
    )
    op.create_table('workspace_owner',
    sa.Column('workspace_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['public.owner.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['public.workspace.id'], ),
    # sa.ForeignKeyConstraint(['owner_id'], ['superset_db.owner.id'], ),
    # sa.ForeignKeyConstraint(['workspace_id'], ['superset_db.workspace.id'], ),
    schema='public'
    # schema='superset_db'
    )
    # op.create_foreign_key(
    #     constraint_name='fk_dashboard_workspace_id',
    #     source_table='dashboards',
    #     referent_table='workspace',
    #     local_cols=['workspace_id'],  # Column in the `dashboard` table
    #     remote_cols=['id'],          # Column in the `workspace` table
    #     ondelete="CASCADE"           # Optional: cascade on delete
    # )
    # op.create_table('dashboard',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('descriptive_id', sa.String(length=4), nullable=False),
    # sa.Column('superset_id', sa.Integer(), nullable=False),
    # sa.Column('title', sa.String(length=260), nullable=False),
    # sa.Column('created_by', sa.String(length=260), nullable=False),
    # sa.Column('delete_on', sa.DateTime(), nullable=True),
    # sa.Column('last_modified_on', sa.DateTime(), nullable=False),
    # sa.Column('last_saved_by', sa.String(length=260), nullable=False),
    # sa.Column('status', sa.String(length=60), nullable=False),
    # sa.Column('extra', sa.Text(), nullable=True),
    # sa.Column('task_id', sa.Integer(), nullable=True),
    # sa.Column('workspace_id', sa.Integer(), nullable=False),
    # sa.ForeignKeyConstraint(['task_id'], ['main.airflow_task_instance.id'], ),
    # sa.ForeignKeyConstraint(['workspace_id'], ['main.workspace.id'], ),
    # sa.PrimaryKeyConstraint('id'),
    # schema='main'
    # )
    # op.create_table('dashboard_owner',
    # sa.Column('dashboard_id', sa.Integer(), nullable=True),
    # sa.Column('owner_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['dashboard_id'], ['main.dashboard.id'], ),
    # sa.ForeignKeyConstraint(['owner_id'], ['main.owner.id'], ),
    # schema='main'
    # )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('dashboard_owner', schema='main')
    op.drop_table('workspace_owner', schema='main')
    op.drop_table('dashboard', schema='main')
    op.drop_table('workspace', schema='main')
    op.drop_table('owner', schema='main')
    # ### end Alembic commands ###
