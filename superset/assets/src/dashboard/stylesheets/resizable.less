.resizable-container {
  background-color: transparent;
  position: relative;
}

/* after ensures border visibility on top of any children */
.resizable-container--resizing:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  box-shadow: inset 0 0 0 2px @indicator-color;
}

.resize-handle {
  opacity: 0;
  z-index: 10;
}

  .resizable-container:hover .resize-handle,
  .resizable-container--resizing .resize-handle {
    opacity: 1;
  }

.resize-handle--bottom-right {
  position: absolute;
  border: solid;
  border-width: 0 1.5px 1.5px 0;
  border-right-color: @gray;
  border-bottom-color: @gray;
  right: 16px;
  bottom: 16px;
  width: 8px;
  height: 8px;
}


.resize-handle--right {
  width: 2px;
  height: 20px;
  right: 4px;
  top: 50%;
  transform: translate(0, -50%);
  position: absolute;
  border-left: 1px solid @gray;
  border-right: 1px solid @gray;
}

.dragdroppable-column .resizable-container-handle--right {
  /* override the default because the inner column's handle's mouse target is very small */
  right: -10px !important;
}

.dragdroppable-column .dragdroppable-column .resizable-container-handle--right {
  /* override the default because the inner column's handle's mouse target is very small */
  right: 0px !important;
}

.resize-handle--bottom {
  height: 2px;
  width: 20px;
  bottom: 4px;
  left: 50%;
  transform: translate(-50%);
  position: absolute;
  border-top: 1px solid @gray;
  border-bottom: 1px solid @gray;
}

.resizable-container-handle--bottom {
  bottom: 0 !important;
}

.resizable-container--resizing > span .resize-handle {
  border-color: @indicator-color;
}

/* re-resizable sets an empty div to 100% width and height, which doesn't
  play well with many 100% height containers we need
 */
.resizable-container ~ div {
  width: auto !important;
  height: auto !important;
}
