name: Frontend

on:
  push:
    branches:
      - "master"
      - "[0-9].[0-9]*"
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]

# cancel previous workflow jobs for PRs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  frontend-build:
    runs-on: ubuntu-24.04
    steps:
      - name: "Checkout ${{ github.ref }} ( ${{ github.sha }} )"
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          submodules: recursive

      - name: Check for file changes
        id: check
        uses: ./.github/actions/change-detector/
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker Environment
        if: steps.check.outputs.frontend
        uses: ./.github/actions/setup-docker
        with:
          dockerhub-user: ${{ secrets.DOCKERHUB_USER }}
          dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup supersetbot
        if: steps.check.outputs.frontend
        uses: ./.github/actions/setup-supersetbot/

      - name: Build Docker Image
        if: steps.check.outputs.frontend
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="superset-node-${{ github.sha }}"
          docker buildx build --target superset-node-ci -t $TAG   .
          docker save $TAG | gzip > superset-node.tar.gz

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: superset-node.tar.gz

  unit-tests:
    needs: frontend-docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load Docker Image
        run: |
          docker load -i superset-node.tar.gz

      - name: npm run test with coverage
        working-directory: ./superset-frontend
        run: |
          docker run --rm superset-node-${{ github.sha }} bash -c \
          "npm run test -- --coverage --silent"
      - name: superset-ui/core coverage
        working-directory: ./superset-frontend
        run: |
          docker run --rm superset-node-${{ github.sha }} bash -c \
          "npm run core:cover"
      - name: Upload code coverage
        uses: codecov/codecov-action@v5
        with:
          flags: javascript
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  lint-frontend:
    needs: frontend-docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load Docker Image
        run: |
          docker load -i superset-node.tar.gz

      - name: eslint
        run: |
          docker run --rm superset-node-${{ github.sha }} bash -c \
          "npm run eslint -- . --quiet"
      - name: tsc
        run: |
          docker run --rm superset-node-${{ github.sha }} bash -c \
          "npm run type"

  validate-frontend:
    needs: frontend-docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load Docker Image
        run: |
          docker load -i superset-node.tar.gz

      - name: Build plugins packages
        run: |
          docker run --rm superset-node-${{ github.sha }} bash -c \
          "npm run plugins:build"
      - name: Build plugins Storybook
        working-directory: ./superset-frontend
        run: |
          docker run --rm superset-node-${{ github.sha }} bash -c \
          "npm run plugins:build-storybook"
