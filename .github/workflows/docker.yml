name: Docker

on:
  push:
    branches:
      - 'master'
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]

jobs:
  login-to-amazon-ecr:
    runs-on: "ubuntu-latest"
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
      docker_username: ${{ steps.login-ecr.outputs.docker_username_123456789012_dkr_ecr_us_east_1_amazonaws_com }} # More information on these outputs can be found below in the 'Docker Credentials' section
      docker_password: ${{ steps.login-ecr.outputs.docker_password_123456789012_dkr_ecr_us_east_1_amazonaws_com }}

    steps:
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::607392822524:role/propel-git-workflow
          aws-region: us-east-2
          mask-aws-account-id: 'false'
      - name: "Lpgin to Amazon ECR"
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

  docker-build:
    needs: login-to-amazon-ecr
    if: needs.config.outputs.has-secrets
    name: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ${{ github.ref }} ( ${{ github.sha }} )"
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - shell: bash
        env:
          DOCKERHUB_USER: ${{ needs.login-to-amazon-ecr.output.docker_username }}
          DOCKERHUB_TOKEN: ${{ needs.login-to-amazon-ecr.output.docker_password }}
          REGISTRY: ${{ needs.login-to-amazon-ecr.output.registry }}
          REPOSITORY: dataport
        run: |
          ./scripts/docker_build_push.sh

      - name: Build ephemeral env image
        if: github.event_name == 'pull_request'
        run: |
          mkdir -p ./build
          echo ${{ github.sha }} > ./build/SHA
          echo ${{ github.event.pull_request.number }} > ./build/PR-NUM
          docker buildx build --target ci \
            --load \
            --cache-from=type=local,src=/tmp/superset \
            -t ${{ github.sha }} \
            -t "pr-${{ github.event.pull_request.number }}" \
            --platform linux/amd64 \
            --label "build_actor=${GITHUB_ACTOR}" \
            .
          docker save ${{ github.sha }} | gzip > ./build/${{ github.sha }}.tar.gz

      - name: Upload build artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/
