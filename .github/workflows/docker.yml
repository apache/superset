name: Docker

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  setup_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix_config: ${{ steps.set_matrix.outputs.matrix_config }}
    steps:
      - id: set_matrix
        run: |
          MATRIX_CONFIG=$(if [ "${{ github.event_name }}" == "pull_request" ]; then echo '["ci"]'; else echo '["dev", "lean", "py310", "websocket", "dockerize"]'; fi)
          echo "matrix_config=${MATRIX_CONFIG}" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT

  docker-build:
    name: docker-build
    needs: setup_matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_preset: ${{fromJson(needs.setup_matrix.outputs.matrix_config)}}
      fail-fast: false
    steps:
      - name: "Checkout ${{ github.ref }} ( ${{ github.sha }} )"
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        shell: bash
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          pip install click
          if [ "${{ github.event_name }}" = "push" ]; then
            ./scripts/build_docker.py \
              ${{ matrix.build_preset }} \
              ${{ github.event_name }} \
              --build_context_ref "$RELEASE" $FORCE_LATEST \
              --platform "linux/arm64" \
              --platform "linux/amd64"
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            ./scripts/build_docker.py \
              ${{ matrix.build_preset }} \
              ${{ github.event_name }} \
              --build_context_ref "$RELEASE" $FORCE_LATEST \
              --platform "linux/amd64"
          fi
