#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image apachesuperset.docker.scarf.sh/apache/superset:${TAG:-latest-dev}
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes: &superset-volumes
  - superset_home:/app/superset_home
  ### uncomment the line below if you want to add your local config
  # - ./superset_config.py:/app/docker/pythonpath_dev/superset_config.py
x-superset-environment: &superset-environment
  ### settings for Superset's database
  POSTGRES_PASSWORD: superset
  POSTGRES_USER: superset
  ### enable examples
  SUPERSET_LOAD_EXAMPLES: yes
  ### generate your SUPERSET_SECRET_KEY with "openssl rand -base64 42"
  SUPERSET_SECRET_KEY: ""

version: "3.7"
services:
  superset:
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - "8088:8088"
    environment: *superset-environment
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    user: "root"
    environment: *superset-environment
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    healthcheck:
      disable: true

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    user: "root"
    restart: unless-stopped
    environment: *superset-environment
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    healthcheck:
      test: ["CMD-SHELL", "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME"]

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    user: "root"
    restart: unless-stopped
    environment: *superset-environment
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    healthcheck:
      disable: true

  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    image: postgres:15
    container_name: superset_db
    restart: unless-stopped
    environment: *superset-environment
    volumes:
      - db_home:/var/lib/postgresql/data

  examples:
    image: postgres:15
    container_name: superset_examples
    restart: unless-stopped
    environment: *superset-environment
    volumes:
      - examples_db_home:/var/lib/postgresql/data

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  examples_db_home:
    external: false
  redis:
    external: false
