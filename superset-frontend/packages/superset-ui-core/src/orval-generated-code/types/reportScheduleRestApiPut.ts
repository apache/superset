/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * Superset
 * Superset
 * OpenAPI spec version: v1
 */
import type { ReportScheduleRestApiPutCreationMethod } from './reportScheduleRestApiPutCreationMethod';
import type { ReportScheduleRestApiPutExtra } from './reportScheduleRestApiPutExtra';
import type { ReportRecipient } from './reportRecipient';
import type { ReportScheduleRestApiPutReportFormat } from './reportScheduleRestApiPutReportFormat';
import type { ReportScheduleRestApiPutTimezone } from './reportScheduleRestApiPutTimezone';
import type { ReportScheduleRestApiPutType } from './reportScheduleRestApiPutType';
import type { ValidatorConfigJSON } from './validatorConfigJSON';
import type { ReportScheduleRestApiPutValidatorType } from './reportScheduleRestApiPutValidatorType';

export interface ReportScheduleRestApiPut {
  active?: boolean;
  /** @nullable */
  chart?: number | null;
  /**
   * Markdown description
   * @nullable
   */
  context_markdown?: string | null;
  /**
   * Creation method is used to inform the frontend whether the report/alert was created in the dashboard, chart, or alerts and reports UI.
   * @nullable
   */
  creation_method?: ReportScheduleRestApiPutCreationMethod;
  /**
   * A CRON expression.[Crontab Guru](https://crontab.guru/) is a helpful resource that can help you craft a CRON expression.
   * @minLength 1
   * @maxLength 1000
   */
  crontab?: string;
  /**
   * Custom width of the screenshot in pixels
   * @nullable
   */
  custom_width?: number | null;
  /** @nullable */
  dashboard?: number | null;
  database?: number;
  /**
   * Use a nice description to give context to this Alert/Report
   * @nullable
   */
  description?: string | null;
  /**
   * The report schedule subject line
   * @nullable
   */
  email_subject?: string | null;
  extra?: ReportScheduleRestApiPutExtra;
  force_screenshot?: boolean;
  /**
   * Once an alert is triggered, how long, in seconds, before Superset nags you again. (in seconds)
   * @minimum 1
   */
  grace_period?: number;
  /**
   * How long to keep the logs around for this report (in days)
   * @minimum 0
   */
  log_retention?: number;
  /**
   * The report schedule name.
   * @minLength 1
   * @maxLength 150
   */
  name?: string;
  owners?: number[];
  recipients?: ReportRecipient[];
  report_format?: ReportScheduleRestApiPutReportFormat;
  /**
   * A SQL statement that defines whether the alert should get triggered or not. The query is expected to return either NULL or a number value.
   * @nullable
   */
  sql?: string | null;
  /** A timezone string that represents the location of the timezone. */
  timezone?: ReportScheduleRestApiPutTimezone;
  /** The report schedule type */
  type?: ReportScheduleRestApiPutType;
  validator_config_json?: ValidatorConfigJSON;
  /**
   * Determines when to trigger alert based off value from alert query. Alerts will be triggered with these validator types:
- Not Null - When the return value is Not NULL, Empty, or 0
- Operator - When `sql_return_value comparison_operator threshold` is True e.g. `50 <= 75`<br>Supports the comparison operators <, <=, >, >=, ==, and !=
   * @nullable
   */
  validator_type?: ReportScheduleRestApiPutValidatorType;
  /**
   * If an alert is staled at a working state, how long until it's state is reset to error
   * @minimum 1
   * @nullable
   */
  working_timeout?: number | null;
}
