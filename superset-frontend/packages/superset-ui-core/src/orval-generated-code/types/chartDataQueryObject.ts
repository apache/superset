/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * Superset
 * Superset
 * OpenAPI spec version: v1
 */
import type { AnnotationLayer } from './annotationLayer';
import type { ChartDataQueryObjectAppliedTimeExtras } from './chartDataQueryObjectAppliedTimeExtras';
import type { ChartDataQueryObjectDatasource } from './chartDataQueryObjectDatasource';
import type { ChartDataQueryObjectExtras } from './chartDataQueryObjectExtras';
import type { ChartDataFilter } from './chartDataFilter';
import type { ChartDataQueryObjectPostProcessingItem } from './chartDataQueryObjectPostProcessingItem';
import type { ChartDataQueryObjectResultType } from './chartDataQueryObjectResultType';
import type { ChartDataQueryObjectSeriesLimitMetric } from './chartDataQueryObjectSeriesLimitMetric';
import type { ChartDataQueryObjectTimeseriesLimitMetric } from './chartDataQueryObjectTimeseriesLimitMetric';
import type { ChartDataQueryObjectUrlParams } from './chartDataQueryObjectUrlParams';

export interface ChartDataQueryObject {
  /**
   * Annotation layers to apply to chart
   * @nullable
   */
  annotation_layers?: AnnotationLayer[] | null;
  /**
   * A mapping of temporal extras that have been applied to the query
   * @nullable
   */
  applied_time_extras?: ChartDataQueryObjectAppliedTimeExtras;
  /**
   * Add fetch values predicate (where clause) to query if defined in datasource
   * @nullable
   */
  apply_fetch_values_predicate?: boolean | null;
  /**
   * Columns which to select in the query.
   * @nullable
   */
  columns?: unknown[] | null;
  /** @nullable */
  datasource?: ChartDataQueryObjectDatasource;
  /**
   * Extra parameters to add to the query.
   * @nullable
   */
  extras?: ChartDataQueryObjectExtras;
  /** @nullable */
  filters?: ChartDataFilter[] | null;
  /**
   * Name of temporal column used for time filtering.
   * @nullable
   */
  granularity?: string | null;
  /**
   * Name of temporal column used for time filtering for SQL datasources. This field is deprecated, use `granularity` instead.
   * @deprecated
   * @nullable
   */
  granularity_sqla?: string | null;
  /**
   * When true, groups remaining series into an 'Others' category when series limit is reached. Prevents incomplete data.
   * @nullable
   */
  group_others_when_limit_reached?: boolean | null;
  /**
   * Columns by which to group the query. This field is deprecated, use `columns` instead.
   * @nullable
   */
  groupby?: unknown[] | null;
  /**
   * HAVING clause to be added to aggregate queries using AND operator. This field is deprecated and should be passed to `extras`.
   * @deprecated
   * @nullable
   */
  having?: string | null;
  /**
   * Should the rowcount of the actual query be returned
   * @nullable
   */
  is_rowcount?: boolean | null;
  /**
   * Is the `query_object` a timeseries.
   * @nullable
   */
  is_timeseries?: boolean | null;
  /**
   * Aggregate expressions. Metrics can be passed as both references to datasource metrics (strings), or ad-hoc metricswhich are defined only within the query object. See `ChartDataAdhocMetricSchema` for the structure of ad-hoc metrics.
   * @nullable
   */
  metrics?: unknown[] | null;
  /**
   * Reverse order. Default: `false`
   * @nullable
   */
  order_desc?: boolean | null;
  /**
   * Expects a list of lists where the first element is the column name which to sort by, and the second element is a boolean.
   * @nullable
   */
  orderby?: unknown[] | null;
  /**
   * Post processing operations to be applied to the result set. Operations are applied to the result set in sequential order.
   * @nullable
   */
  post_processing?: ChartDataQueryObjectPostProcessingItem[] | null;
  /** @nullable */
  result_type?: ChartDataQueryObjectResultType;
  /**
   * Maximum row count (0=disabled). Default: `config["ROW_LIMIT"]`
   * @minimum 0
   * @nullable
   */
  row_limit?: number | null;
  /**
   * Number of rows to skip. Default: `0`
   * @minimum 0
   * @nullable
   */
  row_offset?: number | null;
  /**
   * Columns to use when limiting series count. All columns must be present in the `columns` property. Requires `series_limit` and `series_limit_metric` to be set.
   * @nullable
   */
  series_columns?: unknown[] | null;
  /**
   * Maximum number of series. Requires `series` and `series_limit_metric` to be set.
   * @nullable
   */
  series_limit?: number | null;
  /**
   * Metric used to limit timeseries queries by. Requires `series` and `series_limit` to be set.
   * @nullable
   */
  series_limit_metric?: ChartDataQueryObjectSeriesLimitMetric;
  /** @nullable */
  time_offsets?: string[] | null;
  /**
   * A time rage, either expressed as a colon separated string `since : until` or human readable freeform. Valid formats for `since` and `until` are:
- ISO 8601
- X days/years/hours/day/year/weeks
- X days/years/hours/day/year/weeks ago
- X days/years/hours/day/year/weeks from now

Additionally, the following freeform can be used:

- Last day
- Last week
- Last month
- Last quarter
- Last year
- No filter
- Last X seconds/minutes/hours/days/weeks/months/years
- Next X seconds/minutes/hours/days/weeks/months/years

   * @nullable
   */
  time_range?: string | null;
  /**
   * A human-readable date/time string. Please refer to [parsdatetime](https://github.com/bear/parsedatetime) documentation for details on valid values.
   * @nullable
   */
  time_shift?: string | null;
  /**
   * Maximum row count for timeseries queries. This field is deprecated, use `series_limit` instead.Default: `0`
   * @nullable
   */
  timeseries_limit?: number | null;
  /**
   * Metric used to limit timeseries queries by. This field is deprecated, use `series_limit_metric` instead.
   * @nullable
   */
  timeseries_limit_metric?: ChartDataQueryObjectTimeseriesLimitMetric;
  /**
   * Optional query parameters passed to a dashboard or Explore  view
   * @nullable
   */
  url_params?: ChartDataQueryObjectUrlParams;
  /**
   * WHERE clause to be added to queries using AND operator.This field is deprecated and should be passed to `extras`.
   * @deprecated
   * @nullable
   */
  where?: string | null;
}
