/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Superset
 * Superset
 * OpenAPI spec version: v1
 */
import { useQuery } from '@tanstack/react-query';
import type {
  QueryFunction,
  QueryKey,
  UseQueryOptions,
  UseQueryResult,
} from '@tanstack/react-query';

import type {
  GetApiV1DashboardIdOrSlugCharts200,
  N400ResponseResponse,
  N401ResponseResponse,
  N403ResponseResponse,
  N404ResponseResponse,
} from '.././types';

import { customInstance } from '../../api/mutator';

/**
 * @summary Get a dashboard's chart definitions.
 */
export const getApiV1DashboardIdOrSlugCharts = (
  idOrSlug: string,
  signal?: AbortSignal,
) => {
  return customInstance<GetApiV1DashboardIdOrSlugCharts200>({
    url: `/api/v1/dashboard/${idOrSlug}/charts`,
    method: 'GET',
    signal,
  });
};

export const getGetApiV1DashboardIdOrSlugChartsQueryKey = (
  idOrSlug?: string,
) => {
  return [`/api/v1/dashboard/${idOrSlug}/charts`] as const;
};

export const getGetApiV1DashboardIdOrSlugChartsQueryOptions = <
  TData = Awaited<ReturnType<typeof getApiV1DashboardIdOrSlugCharts>>,
  TError =
    | N400ResponseResponse
    | N401ResponseResponse
    | N403ResponseResponse
    | N404ResponseResponse,
>(
  idOrSlug: string,
  options?: {
    query?: UseQueryOptions<
      Awaited<ReturnType<typeof getApiV1DashboardIdOrSlugCharts>>,
      TError,
      TData
    >;
  },
) => {
  const { query: queryOptions } = options ?? {};

  const queryKey =
    queryOptions?.queryKey ??
    getGetApiV1DashboardIdOrSlugChartsQueryKey(idOrSlug);

  const queryFn: QueryFunction<
    Awaited<ReturnType<typeof getApiV1DashboardIdOrSlugCharts>>
  > = ({ signal }) => getApiV1DashboardIdOrSlugCharts(idOrSlug, signal);

  return {
    queryKey,
    queryFn,
    enabled: !!idOrSlug,
    ...queryOptions,
  } as UseQueryOptions<
    Awaited<ReturnType<typeof getApiV1DashboardIdOrSlugCharts>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetApiV1DashboardIdOrSlugChartsQueryResult = NonNullable<
  Awaited<ReturnType<typeof getApiV1DashboardIdOrSlugCharts>>
>;
export type GetApiV1DashboardIdOrSlugChartsQueryError =
  | N400ResponseResponse
  | N401ResponseResponse
  | N403ResponseResponse
  | N404ResponseResponse;

/**
 * @summary Get a dashboard's chart definitions.
 */

export function useGetApiV1DashboardIdOrSlugCharts<
  TData = Awaited<ReturnType<typeof getApiV1DashboardIdOrSlugCharts>>,
  TError =
    | N400ResponseResponse
    | N401ResponseResponse
    | N403ResponseResponse
    | N404ResponseResponse,
>(
  idOrSlug: string,
  options?: {
    query?: UseQueryOptions<
      Awaited<ReturnType<typeof getApiV1DashboardIdOrSlugCharts>>,
      TError,
      TData
    >;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } {
  const queryOptions = getGetApiV1DashboardIdOrSlugChartsQueryOptions(
    idOrSlug,
    options,
  );

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
}
