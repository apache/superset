/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { InferProps } from 'prop-types';
import { Clauses, ExpressionTypes } from './types';

export interface AdhocFilterSimple {
  expressionType: ExpressionTypes.Simple;
  clause: Clauses.Having | Clauses.Where;
  subject: string;
  comparator: string | string[];
  operator?: string;
  operatorId?: string;
  isExtra?: boolean;
  isNew?: boolean;
  datasourceWarning?: boolean;
  deck_slices?: number[];
  layerFilterScope?: string;
  filterOptionName?: string;
}

export interface AdhocFilterSql {
  expressionType: ExpressionTypes.Sql;
  clause: Clauses.Where | Clauses.Having;
  sqlExpression: string;
  subject?: string | null;
  operator?: string | null;
  operatorId?: string;
  comparator?: null;
  isExtra?: boolean;
  isNew?: boolean;
  datasourceWarning?: boolean;
  deck_slices?: number[];
  layerFilterScope?: string;
  filterOptionName?: string;
}

export type AdhocFilterType = AdhocFilterSimple | AdhocFilterSql;

// PropTypes validation function - babel-plugin-typescript-to-proptypes automatically
// generates PropTypes from the TypeScript interface above
export default function AdhocFilterValidator(props: {
  filter: AdhocFilterType;
}) {
  return null; // PropTypes auto-generated by babel plugin
}

// For consumers needing PropTypes type inference
export type AdhocFilterProps = InferProps<typeof AdhocFilterValidator>;
